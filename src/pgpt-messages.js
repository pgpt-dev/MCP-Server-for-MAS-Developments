const templates = {
    success: '‚úîÔ∏è ${action}: ${details}',
    error: '‚ùå ${action}: ${details}',
    warning: '‚ö†Ô∏è ${action}: ${details}',
    configStart: 'üöÄ ${action}: ${details}',
    info: 'üì§ ${action}...',
    closed: 'üîå${action}: ${details}',
    stopped: 'üõë ${action}: ${details}',
    receive: 'üì• ${action}: ${details}',
};

function formatMessage(template, variables) {
    return template.replace(/\$\{(\w+)\}/g, (_, key) => variables[key] || '');
}
 
export const prefixMessages = {
	en: {
		prefix_openaicompAPI:				'Open AI cmp. API',
        prefix_delete_all_chats:            'DelAllChats',
        prefix_delete_all_chatsRequest:     'DelAllChats: Request',
        prefix_delete_all_chatsSuccess:     'DelAllChats: Success',
        prefix_delete_all_chatsError:       'DelAllChats: ApiError',
        prefix_delete_all_chatsWarning:     'DelAllChats: Warning',
        prefix_delete_chat:                 'DeleteChat',
        prefix_delete_chatRequest:          'DeleteChat: Request',
        prefix_delete_chatSuccess:          'DeleteChat: Success',
        prefix_delete_chatError:            'DeleteChat: ApiError',
        prefix_delete_chatWarning:          'DeleteChat: Warning',
        prefix_reactivate_user:             'ReactivateUser',
        prefix_reactivate_userSuccess:      'ReactivateUser: Success',
        prefix_reactivate_userError:        'ReactivateUser: Error',
        
		//##############
		prefix_All_Funcs: 					'All Funcs',
		prefix_Allow_Keygen: 				'Allow Keygen',
		prefix_ANONYMOUS_MODE: 				'ANONYMOUS_MODE',
		prefix_chat: 						'Chat',
		prefix_chatApiError: 				'Chat: ApiError',
		prefix_chatRequest: 				'Chat: Request',
		prefix_chatSuccess: 				'Chat: Success',
		prefix_chatWarning: 				'Chat: Warning',
		prefix_get_chat_info: 				'Get Chat Info',
		prefix_get_chat_infoError: 			'Get Chat Info: Error',
		prefix_continue_chat: 				'Continue Chat',
		prefix_continue_chatError: 			'Continue Chat: Error',
		prefix_continue_chatSuccess: 		'Continue Chat: Success',
		prefix_create_sourceError: 			'Create Source: Error',
		prefix_create_sourceGroupCheck: 	'Create Source: GroupCheck',
		prefix_create_sourceInvalidGroups: 	'Create SourceInvalidGroups',
		prefix_create_sourceNoResponse: 	'Create SourceNoResponse',
		prefix_create_sourceResponseError:	'Create SourceResponseError',
		prefix_create_sourceSuccess: 		'Create SourceSuccess',
		prefix_create_sourceUnknownError: 	'Create SourceUnknownError',
		prefix_Deact_Funcs: 				'Deact Funcs',
		prefix_delete_groupError: 			'Delete Group: Error',
		prefix_delete_groupRequest: 		'Delete Group: Request',
		prefix_delete_groupSuccess: 		'Delete Group: Success',
		prefix_delete_source: 				'Delete Source',
		prefix_delete_sourceError: 			'Delete Source: Error',
		prefix_delete_sourceSuccess: 		'Delete Source: Success',
		prefix_delete_user: 				'Delete User',
		prefix_edit_user: 					'Edit User',
		prefix_edit_userError: 				'Edit User: Error',
		prefix_edit_userSuccess: 			'Edit_User: Success',
		prefix_Env_Load_Err: 				'Env: LoadErr',
		prefix_File_Path: 					'File Path',
		prefix_Handling_Tool_Request: 		'Handling Tool Request',
		prefix_Incoming_Message: 			'Incoming Message',
		prefix_Lang_Warning: 				'Lang Warning',
		prefix_Language: 					'Language',
		prefix_LOG_IPs: 					'LOG_IPs',
		prefix_login: 						'Login',
		prefix_loginError: 					'Login: Error',
		prefix_loginSuccess: 				'Login: Success',
		prefix_logout: 						'Logout',
		prefix_logoutError: 				'Logout: Error',
		prefix_logoutSuccess: 				'Logout: Success',
		prefix_MCP_Error: 					'MCP Error',
		prefix_Missing_Config: 				'Missing Config',
		prefix_Port: 						'Port',
		prefix_Port_Check: 					'Port Check',
		prefix_Port_Invalid: 				'Port Invalid',
		prefix_Port_Validated: 				'Port Validated',
		prefix_Private_API_URL: 			'Private API URL',
		prefix_Proxy_Config: 				'Proxy Config',
		prefix_Public_API_URL: 				'Public API URL',
		prefix_PW_Encryption: 				'PW Encryption',
		prefix_requestHeaders: 				'Request Headers',
		prefix_Restricted_Groups: 			'Restricted Groups',
		prefix_Server_Config: 				'Server Config',
		prefix_Shutdown: 					'Shutdown',
		prefix_SSL_Validation: 				'SSL Validation',
		prefix_Tool_Disabled: 				'Tool Disabled',
		prefix_Tool_Warn: 					'Tool Warn',
		prefix_URL_Invalid: 				'URL Invalid',
		prefix_URL_Warning: 				'URL Warning',
		prefix_URL_Warning_V1: 				'URL Warning V1',
		prefix_Validation_Err: 				'Validation Err',
		prefix_WRITTEN_LOGFILE: 			'WRITTEN_LOGFILE',
		prefix_unknownCommand: 				'unknownCommand',
		prefix_get_sourceError: 			'Get Source: Error',
		prefix_get_sourceRequest: 			'Get Source: Request',
		prefix_get_sourceSuccess: 			'Get Source: Success',
		prefix_list_groupsError: 			'List Groups: Error',
		prefix_list_groupsRequest: 			'List Groups: Request',
		prefix_list_groupsSuccess: 			'List Groups: Success',
		prefix_list_sourcesError: 			'list sources: Error',
		prefix_list_sourcesRequest: 		'list sources: Request',
		prefix_list_sourcesSuccess: 		'list sources: Success',
		prefix_responseReceived: 			'Response received',
		prefix_store_groupError: 			'Store Group: Error',
		prefix_store_groupRequest: 			'Store Group: Request',
		prefix_store_groupSuccess: 			'Store Group: Success',
		prefix_store_user: 					'Store User',
		prefix_store_userError: 			'Store User: Error',
		prefix_store_userSuccess:			'Store User: Success',
		prefix_delete_userSuccess: 			'Delete User: Success',
		prefix_delete_userError: 			'Delete User: Error',
		prefix_apiRequestError: 			'API request: Error',
		prefix_create_source: 				'Create Source',
		prefix_get_source: 					'Get Source',
		prefix_list_sources: 				'List Sources',
		prefix_edit_source: 				'Edit Source',
		prefix_edit_sourceSuccess: 			'Edit Source: Success',
		prefix_edit_sourceError: 			'Edit Source: Error',
		prefix_delete_group: 				'Delete Group',
		prefix_list_groups: 				'List Groups',
		prefix_store_group: 				'Store Group',
		prefix_clientConnected: 			'Client: Connected',
		prefix_clientDisconnected: 			'Client: Disconnected',
		prefix_logReadError: 				'Log read: Error',
		prefix_logChangeError: 				'Log change: Error',
		prefix_logViewerRunning: 			'LogViewer: Running',
		prefix_serverError: 				'Server: Error',
		prefix_tcpServerError: 				'tcpServer: Error',
		prefix_keygenError: 				'Keygen: Error',
	    prefix_edit_sourceRequest:			'Edit Source: Request',
		prefix_delete_sourceRequest: 		'Delete Source: Request',
		prefix_store_userRequest: 			'Store User: Request',
		prefix_edit_userRequest: 			'Edit User: Request',
		prefix_delete_userRequest: 			'Delete User: Request',
		prefix_get_chat_infoSuccess: 		'Get Chat Info: Success',
		prefix_keygen: 						'Keygen',
	    prefix_list_groupsWarning: 			'List Groups: Warning'
	},
	// Portuguese (pt)
	pt: {
		prefix_All_Funcs: 'Todas as Fun√ß√µes',
		prefix_Allow_Keygen: 'Permitir Keygen',
		prefix_ANONYMOUS_MODE: 'MODO_AN√îNIMO',
		prefix_chat: 'Chat',
		prefix_chatApiError: 'Chat: ErroApi',
		prefix_chatRequest: 'Chat: Solicita√ß√£o',
		prefix_chatSuccess: 'Chat: Sucesso',
		prefix_chatWarning: 'Chat: Aviso',
		prefix_get_chat_info: 'Obter Informa√ß√µes do Chat',
		prefix_get_chat_infoError: 'Obter Informa√ß√µes do Chat: Erro',
		prefix_continue_chat: 'Continuar Chat',
		prefix_continue_chatError: 'Continuar Chat: Erro',
		prefix_continue_chatSuccess: 'Continuar Chat: Sucesso',
		prefix_create_sourceError: 'Criar Fonte: Erro',
		prefix_create_sourceGroupCheck: 'Criar Fonte: Verifica√ß√£o de Grupo',
		prefix_create_sourceInvalidGroups: 'Criar Fonte: Grupos Inv√°lidos',
		prefix_create_sourceNoResponse: 'Criar Fonte: Sem Resposta',
		prefix_create_sourceResponseError: 'Criar Fonte: Erro na Resposta',
		prefix_create_sourceSuccess: 'Criar Fonte: Sucesso',
		prefix_create_sourceUnknownError: 'Criar Fonte: Erro Desconhecido',
		prefix_Deact_Funcs: 'Desativar Fun√ß√µes',
		prefix_delete_groupError: 'Excluir Grupo: Erro',
		prefix_delete_groupRequest: 'Excluir Grupo: Solicita√ß√£o',
		prefix_delete_groupSuccess: 'Excluir Grupo: Sucesso',
		prefix_delete_source: 'Excluir Fonte',
		prefix_delete_sourceError: 'Excluir Fonte: Erro',
		prefix_delete_sourceSuccess: 'Excluir Fonte: Sucesso',
		prefix_delete_user: 'Excluir Usu√°rio',
		prefix_edit_user: 'Editar Usu√°rio',
		prefix_edit_userError: 'Editar Usu√°rio: Erro',
		prefix_edit_userSuccess: 'Editar Usu√°rio: Sucesso',
		prefix_Env_Load_Err: 'Ambiente: ErroCarregamento',
		prefix_File_Path: 'Caminho do Arquivo',
		prefix_Handling_Tool_Request: 'Manipulando Solicita√ß√£o de Ferramenta',
		prefix_Incoming_Message: 'Mensagem Entrante',
		prefix_Lang_Warning: 'Aviso de Idioma',
		prefix_Language: 'Idioma',
		prefix_LOG_IPs: 'LOG_IPs',
		prefix_login: 'Login',
		prefix_loginError: 'Login: Erro',
		prefix_loginSuccess: 'Login: Sucesso',
		prefix_logout: 'Logout',
		prefix_logoutError: 'Logout: Erro',
		prefix_logoutSuccess: 'Logout: Sucesso',
		prefix_MCP_Error: 'Erro MCP',
		prefix_Missing_Config: 'Configura√ß√£o Ausente',
		prefix_Port: 'Porta',
		prefix_Port_Check: 'Verifica√ß√£o de Porta',
		prefix_Port_Invalid: 'Porta Inv√°lida',
		prefix_Port_Validated: 'Porta Validada',
		prefix_Private_API_URL: 'URL da API Privada',
		prefix_Proxy_Config: 'Configura√ß√£o de Proxy',
		prefix_Public_API_URL: 'URL da API P√∫blica',
		prefix_PW_Encryption: 'Criptografia de Senha',
		prefix_requestHeaders: 'Cabe√ßalhos da Solicita√ß√£o',
		prefix_Restricted_Groups: 'Grupos Restritos',
		prefix_Server_Config: 'Configura√ß√£o do Servidor',
		prefix_Shutdown: 'Desligamento',
		prefix_SSL_Validation: 'Valida√ß√£o SSL',
		prefix_Tool_Disabled: 'Ferramenta Desativada',
		prefix_Tool_Warn: 'Aviso da Ferramenta',
		prefix_URL_Invalid: 'URL Inv√°lida',
		prefix_URL_Warning: 'Aviso de URL',
		prefix_URL_Warning_V1: 'Aviso de URL V1',
		prefix_Validation_Err: 'Erro de Valida√ß√£o',
		prefix_WRITTEN_LOGFILE: 'ARQUIVO_DE_LOG_ESCRITO',
		prefix_unknownCommand: 'comandoDesconhecido',
		prefix_get_sourceError: 'Obter Fonte: Erro',
		prefix_get_sourceRequest: 'Obter Fonte: Solicita√ß√£o',
		prefix_get_sourceSuccess: 'Obter Fonte: Sucesso',
		prefix_list_groupsError: 'Listar Grupos: Erro',
		prefix_list_groupsRequest: 'Listar Grupos: Solicita√ß√£o',
		prefix_list_groupsSuccess: 'Listar Grupos: Sucesso',
		prefix_list_sourcesError: 'Listar Fontes: Erro',
		prefix_list_sourcesRequest: 'Listar Fontes: Solicita√ß√£o',
		prefix_list_sourcesSuccess: 'Listar Fontes: Sucesso',
		prefix_responseReceived: 'Resposta Recebida',
		prefix_store_groupError: 'Armazenar Grupo: Erro',
		prefix_store_groupRequest: 'Armazenar Grupo: Solicita√ß√£o',
		prefix_store_groupSuccess: 'Armazenar Grupo: Sucesso',
		prefix_store_user: 'Armazenar Usu√°rio',
		prefix_store_userError: 'Armazenar Usu√°rio: Erro',
		prefix_store_userSuccess: 'Armazenar Usu√°rio: Sucesso',
		prefix_delete_userSuccess: 'Excluir Usu√°rio: Sucesso',
		prefix_delete_userError: 'Excluir Usu√°rio: Erro',
		prefix_apiRequestError: 'Solicita√ß√£o de API: Erro',
		prefix_create_source: 'Criar Fonte',
		prefix_get_source: 'Obter Fonte',
		prefix_list_sources: 'Listar Fontes',
		prefix_edit_source: 'Editar Fonte',
		prefix_edit_sourceSuccess: 'Editar Fonte: Sucesso',
		prefix_edit_sourceError: 'Editar Fonte: Erro',
		prefix_delete_group: 'Excluir Grupo',
		prefix_list_groups: 'Listar Grupos',
		prefix_store_group: 'Armazenar Grupo',
		prefix_clientConnected: 'Cliente: Conectado',
		prefix_clientDisconnected: 'Cliente: Desconectado',
		prefix_logReadError: 'Leitura de Log: Erro',
		prefix_logChangeError: 'Altera√ß√£o de Log: Erro',
		prefix_logViewerRunning: 'Visualizador de Logs: Em Execu√ß√£o',
		prefix_serverError: 'Servidor: Erro',
		prefix_tcpServerError: 'tcpServer: Erro',
		prefix_keygenError: 'Keygen: Erro',
		prefix_edit_sourceRequest: 'Editar Fonte: Solicita√ß√£o',
		prefix_delete_sourceRequest: 'Excluir Fonte: Solicita√ß√£o',
		prefix_store_userRequest: 'Armazenar Usu√°rio: Solicita√ß√£o',
		prefix_edit_userRequest: 'Editar Usu√°rio: Solicita√ß√£o',
		prefix_delete_userRequest: 'Excluir Usu√°rio: Solicita√ß√£o',
		prefix_get_chat_infoSuccess: 'Obter Informa√ß√µes do Chat: Sucesso',
		prefix_keygen: 'Keygen',
		prefix_list_groupsWarning: 'Listar Grupos: Aviso'
	}, de: 
		{
		prefix_openaicompAPI: 'Open AI cmp. API',
		// #######################################################
		prefix_All_Funcs: 'Alle Funktionen',
		prefix_Allow_Keygen: 'Keygen erlauben',
		prefix_ANONYMOUS_MODE: 'ANONYMOUS_MODE',
		prefix_chat: 'Chat',
		prefix_chatApiError: 'Chat: API-Fehler',
		prefix_chatRequest: 'Chat: Anfrage',
		prefix_chatSuccess: 'Chat: Erfolg',
		prefix_chatWarning: 'Chat: Warnung',
		prefix_get_chat_info: 'Chat-Info abrufen',
		prefix_get_chat_infoError: 'Chat-Info: Fehler',
		prefix_continue_chat: 'Chat fortsetzen',
		prefix_continue_chatError: 'Chat fortsetzen: Fehler',
		prefix_continue_chatSuccess: 'Chat fortsetzen: Erfolg',
		prefix_create_sourceError: 'Quelle erstellen: Fehler',
		prefix_create_sourceGroupCheck: 'Quelle erstellen: Gruppenpr√ºfung',
		prefix_create_sourceInvalidGroups: 'Quelle erstellen: Ung√ºltige Gruppen',
		prefix_create_sourceNoResponse: 'Quelle erstellen: Keine Antwort',
		prefix_create_sourceResponseError: 'Quelle erstellen: Antwortfehler',
		prefix_create_sourceSuccess: 'Quelle erstellen: Erfolg',
		prefix_create_sourceUnknownError: 'Quelle erstellen: Unbekannter Fehler',
		prefix_Deact_Funcs: 'Funktionen deaktivieren',
		prefix_delete_groupError: 'Gruppe l√∂schen: Fehler',
		prefix_delete_groupRequest: 'Gruppe l√∂schen: Anfrage',
		prefix_delete_groupSuccess: 'Gruppe l√∂schen: Erfolg',
		prefix_delete_source: 'Quelle l√∂schen',
		prefix_delete_sourceError: 'Quelle l√∂schen: Fehler',
		prefix_delete_sourceSuccess: 'Quelle l√∂schen: Erfolg',
		prefix_delete_user: 'Benutzer l√∂schen',
		prefix_edit_user: 'Benutzer bearbeiten',
		prefix_edit_userError: 'Benutzer bearbeiten: Fehler',
		prefix_edit_userSuccess: 'Benutzer bearbeiten: Erfolg',
		prefix_Env_Load_Err: 'Umgebung: Ladefehler',
		prefix_File_Path: 'Dateipfad',
		prefix_Handling_Tool_Request: 'Tool-Anfrage bearbeiten',
		prefix_Incoming_Message: 'Eingehende Nachricht',
		prefix_Lang_Warning: 'Sprachwarnung',
		prefix_Language: 'Sprache',
		prefix_LOG_IPs: 'LOG_IPs',
		prefix_login: 'Anmelden',
		prefix_loginError: 'Anmelden: Fehler',
		prefix_loginSuccess: 'Anmelden: Erfolg',
		prefix_logout: 'Abmelden',
		prefix_logoutError: 'Abmelden: Fehler',
		prefix_logoutSuccess: 'Abmelden: Erfolg',
		prefix_MCP_Error: 'MCP-Fehler',
		prefix_Missing_Config: 'Konfiguration fehlt',
		prefix_Port: 'Port',
		prefix_Port_Check: 'Port-√úberpr√ºfung',
		prefix_Port_Invalid: 'Ung√ºltiger Port',
		prefix_Port_Validated: 'Port validiert',
		prefix_Private_API_URL: 'Private API URL',
		prefix_Proxy_Config: 'Proxy-Konfiguration',
		prefix_Public_API_URL: '√ñffentliche API URL',
		prefix_PW_Encryption: 'PW-Verschl√ºsselung',
		prefix_requestHeaders: 'Anfrageheader',
		prefix_Restricted_Groups: 'Eingeschr√§nkte Gruppen',
		prefix_Server_Config: 'Server-Konfiguration',
		prefix_Shutdown: 'Herunterfahren',
		prefix_SSL_Validation: 'SSL-Validierung',
		prefix_Tool_Disabled: 'Tool deaktiviert',
		prefix_Tool_Warn: 'Tool-Warnung',
		prefix_URL_Invalid: 'Ung√ºltige URL',
		prefix_URL_Warning: 'URL-Warnung',
		prefix_URL_Warning_V1: 'URL-Warnung V1',
		prefix_Validation_Err: 'Validierungsfehler',
		prefix_WRITTEN_LOGFILE: 'GESCHRIEBENE_LOGDATEI',
		prefix_unknownCommand: 'unbekannterBefehl',
		prefix_get_sourceError: 'Quelle abrufen: Fehler',
		prefix_get_sourceRequest: 'Quelle abrufen: Anfrage',
		prefix_get_sourceSuccess: 'Quelle abrufen: Erfolg',
		prefix_list_groupsError: 'Gruppen auflisten: Fehler',
		prefix_list_groupsRequest: 'Gruppen auflisten: Anfrage',
		prefix_list_groupsSuccess: 'Gruppen auflisten: Erfolg',
		prefix_list_sourcesError: 'Quellen auflisten: Fehler',
		prefix_list_sourcesRequest: 'Quellen auflisten: Anfrage',
		prefix_list_sourcesSuccess: 'Quellen auflisten: Erfolg',
		prefix_responseReceived: 'Antwort erhalten',
		prefix_store_groupError: 'Gruppe speichern: Fehler',
		prefix_store_groupRequest: 'Gruppe speichern: Anfrage',
		prefix_store_groupSuccess: 'Gruppe speichern: Erfolg',
		prefix_store_user: 'Benutzer speichern',
		prefix_store_userError: 'Benutzer speichern: Fehler',
		prefix_store_userSuccess: 'Benutzer speichern: Erfolg',
		prefix_delete_userSuccess: 'Benutzer l√∂schen: Erfolg',
		prefix_delete_userError: 'Benutzer l√∂schen: Fehler',
		prefix_apiRequestError: 'API-Anfrage: Fehler',
		prefix_create_source: 'Quelle erstellen',
		prefix_get_source: 'Quelle abrufen',
		prefix_list_sources: 'Quellen auflisten',
		prefix_edit_source: 'Quelle bearbeiten',
		prefix_edit_sourceSuccess: 'Quelle bearbeiten: Erfolg',
		prefix_edit_sourceError: 'Quelle bearbeiten: Fehler',
		prefix_delete_group: 'Gruppe l√∂schen',
		prefix_list_groups: 'Gruppen auflisten',
		prefix_store_group: 'Gruppe speichern',
		prefix_clientConnected: 'Client: Verbunden',
		prefix_clientDisconnected: 'Client: Getrennt',
		prefix_logReadError: 'Log lesen: Fehler',
		prefix_logChangeError: 'Log √§ndern: Fehler',
		prefix_logViewerRunning: 'LogViewer: L√§uft',
		prefix_serverError: 'Server: Fehler',
		prefix_tcpServerError: 'tcpServer: Fehler',
		prefix_keygenError: 'Keygen: Fehler',
		prefix_edit_sourceRequest: 'Quelle bearbeiten: Anfrage',
		prefix_delete_sourceRequest: 'Quelle l√∂schen: Anfrage',
		prefix_store_userRequest: 'Benutzer speichern: Anfrage',
		prefix_edit_userRequest: 'Benutzer bearbeiten: Anfrage',
		prefix_delete_userRequest: 'Benutzer l√∂schen: Anfrage',
		prefix_get_chat_infoSuccess: 'Chat-Info: Erfolg',
		prefix_keygen: 'Keygen',
		prefix_list_groupsWarning: 'Gruppen auflisten: Warnung'
	  }, bg: 
		{
		prefix_All_Funcs: '–í—Å–∏—á–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏',
		prefix_Allow_Keygen: '–†–∞–∑—Ä–µ—à–∏ Keygen',
		prefix_ANONYMOUS_MODE: 'ANONYMOUS_MODE',
		prefix_chat: '–ß–∞—Ç',
		prefix_chatApiError: '–ß–∞—Ç: –ì—Ä–µ—à–∫–∞ –≤ API',
		prefix_chatRequest: '–ß–∞—Ç: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_chatSuccess: '–ß–∞—Ç: –£—Å–ø–µ—Ö',
		prefix_chatWarning: '–ß–∞—Ç: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
		prefix_get_chat_info: '–í–∑–µ–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —á–∞—Ç–∞',
		prefix_get_chat_infoError: '–í–∑–µ–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —á–∞—Ç–∞: –ì—Ä–µ—à–∫–∞',
		prefix_continue_chat: '–ü—Ä–æ–¥—ä–ª–∂–∏ —á–∞—Ç–∞',
		prefix_continue_chatError: '–ü—Ä–æ–¥—ä–ª–∂–∏ —á–∞—Ç–∞: –ì—Ä–µ—à–∫–∞',
		prefix_continue_chatSuccess: '–ü—Ä–æ–¥—ä–ª–∂–∏ —á–∞—Ç–∞: –£—Å–ø–µ—Ö',
		prefix_create_sourceError: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ì—Ä–µ—à–∫–∞',
		prefix_create_sourceGroupCheck: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–∞—Ç–∞',
		prefix_create_sourceInvalidGroups: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ù–µ–≤–∞–ª–∏–¥–Ω–∏ –≥—Ä—É–ø–∏',
		prefix_create_sourceNoResponse: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ù—è–º–∞ –æ—Ç–≥–æ–≤–æ—Ä',
		prefix_create_sourceResponseError: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ì—Ä–µ—à–∫–∞ –≤ –æ—Ç–≥–æ–≤–æ—Ä–∞',
		prefix_create_sourceSuccess: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –£—Å–ø–µ—Ö',
		prefix_create_sourceUnknownError: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ù–µ–ø–æ–∑–Ω–∞—Ç–∞ –≥—Ä–µ—à–∫–∞',
		prefix_Deact_Funcs: '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–π —Ñ—É–Ω–∫—Ü–∏–∏',
		prefix_delete_groupError: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∞: –ì—Ä–µ—à–∫–∞',
		prefix_delete_groupRequest: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∞: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_delete_groupSuccess: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∞: –£—Å–ø–µ—Ö',
		prefix_delete_source: '–ò–∑—Ç—Ä–∏–π –∏–∑—Ç–æ—á–Ω–∏–∫',
		prefix_delete_sourceError: '–ò–∑—Ç—Ä–∏–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ì—Ä–µ—à–∫–∞',
		prefix_delete_sourceSuccess: '–ò–∑—Ç—Ä–∏–π –∏–∑—Ç–æ—á–Ω–∏–∫: –£—Å–ø–µ—Ö',
		prefix_delete_user: '–ò–∑—Ç—Ä–∏–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª',
		prefix_edit_user: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª',
		prefix_edit_userError: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –ì—Ä–µ—à–∫–∞',
		prefix_edit_userSuccess: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –£—Å–ø–µ—Ö',
		prefix_Env_Load_Err: '–û–∫–æ–ª–Ω–∞ —Å—Ä–µ–¥–∞: –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ',
		prefix_File_Path: '–ü—ä—Ç –¥–æ —Ñ–∞–π–ª',
		prefix_Handling_Tool_Request: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç',
		prefix_Incoming_Message: '–í—Ö–æ–¥—è—â–æ —Å—ä–æ–±—â–µ–Ω–∏–µ',
		prefix_Lang_Warning: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –µ–∑–∏–∫–∞',
		prefix_Language: '–ï–∑–∏–∫',
		prefix_LOG_IPs: 'LOG_IPs',
		prefix_login: '–í—Ö–æ–¥',
		prefix_loginError: '–í—Ö–æ–¥: –ì—Ä–µ—à–∫–∞',
		prefix_loginSuccess: '–í—Ö–æ–¥: –£—Å–ø–µ—Ö',
		prefix_logout: '–ò–∑—Ö–æ–¥',
		prefix_logoutError: '–ò–∑—Ö–æ–¥: –ì—Ä–µ—à–∫–∞',
		prefix_logoutSuccess: '–ò–∑—Ö–æ–¥: –£—Å–ø–µ—Ö',
		prefix_MCP_Error: 'MCP –ì—Ä–µ—à–∫–∞',
		prefix_Missing_Config: '–õ–∏–ø—Å–≤–∞—â–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
		prefix_Port: '–ü–æ—Ä—Ç',
		prefix_Port_Check: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞',
		prefix_Port_Invalid: '–ù–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ—Ä—Ç',
		prefix_Port_Validated: '–ü–æ—Ä—Ç –≤–∞–ª–∏–¥–∏—Ä–∞–Ω',
		prefix_Private_API_URL: '–ß–∞—Å—Ç–µ–Ω API URL',
		prefix_Proxy_Config: '–ü—Ä–æ–∫—Å–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
		prefix_Public_API_URL: '–ü—É–±–ª–∏—á–µ–Ω API URL',
		prefix_PW_Encryption: '–®–∏—Ñ—Ä–æ–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞',
		prefix_requestHeaders: '–ó–∞–≥–ª–∞–≤–∫–∏ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞',
		prefix_Restricted_Groups: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏ –≥—Ä—É–ø–∏',
		prefix_Server_Config: '–°—ä—Ä–≤—ä—Ä–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
		prefix_Shutdown: '–ò–∑–∫–ª—é—á–≤–∞–Ω–µ',
		prefix_SSL_Validation: 'SSL –≤–∞–ª–∏–¥–∞—Ü–∏—è',
		prefix_Tool_Disabled: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ä—Ç –µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω',
		prefix_Tool_Warn: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞',
		prefix_URL_Invalid: '–ù–µ–≤–∞–ª–∏–¥–µ–Ω URL',
		prefix_URL_Warning: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ URL',
		prefix_URL_Warning_V1: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ URL V1',
		prefix_Validation_Err: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è',
		prefix_WRITTEN_LOGFILE: '–ü–ò–°–ê–ù –õ–û–ì –§–ê–ô–õ',
		prefix_unknownCommand: '–Ω–µ–ø–æ–∑–Ω–∞—Ç–∞–ö–æ–º–∞–Ω–¥–∞',
		prefix_get_sourceError: '–í–∑–µ–º–∏ –∏–∑—Ç–æ—á–Ω–∏–∫: –ì—Ä–µ—à–∫–∞',
		prefix_get_sourceRequest: '–í–∑–µ–º–∏ –∏–∑—Ç–æ—á–Ω–∏–∫: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_get_sourceSuccess: '–í–∑–µ–º–∏ –∏–∑—Ç–æ—á–Ω–∏–∫: –£—Å–ø–µ—Ö',
		prefix_list_groupsError: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏: –ì—Ä–µ—à–∫–∞',
		prefix_list_groupsRequest: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_list_groupsSuccess: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏: –£—Å–ø–µ—Ö',
		prefix_list_sourcesError: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏: –ì—Ä–µ—à–∫–∞',
		prefix_list_sourcesRequest: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_list_sourcesSuccess: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏: –£—Å–ø–µ—Ö',
		prefix_responseReceived: '–û—Ç–≥–æ–≤–æ—Ä –ø–æ–ª—É—á–µ–Ω',
		prefix_store_groupError: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –≥—Ä—É–ø–∞: –ì—Ä–µ—à–∫–∞',
		prefix_store_groupRequest: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –≥—Ä—É–ø–∞: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_store_groupSuccess: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –≥—Ä—É–ø–∞: –£—Å–ø–µ—Ö',
		prefix_store_user: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª',
		prefix_store_userError: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –ì—Ä–µ—à–∫–∞',
		prefix_store_userSuccess: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –£—Å–ø–µ—Ö',
		prefix_delete_userSuccess: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –£—Å–ø–µ—Ö',
		prefix_delete_userError: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –ì—Ä–µ—à–∫–∞',
		prefix_apiRequestError: 'API –∑–∞—è–≤–∫–∞: –ì—Ä–µ—à–∫–∞',
		prefix_create_source: '–°—ä–∑–¥–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫',
		prefix_get_source: '–í–∑–µ–º–∏ –∏–∑—Ç–æ—á–Ω–∏–∫',
		prefix_list_sources: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏',
		prefix_edit_source: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫',
		prefix_edit_sourceSuccess: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –£—Å–ø–µ—Ö',
		prefix_edit_sourceError: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ì—Ä–µ—à–∫–∞',
		prefix_delete_group: '–ò–∑—Ç—Ä–∏–π –≥—Ä—É–ø–∞',
		prefix_list_groups: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏',
		prefix_store_group: '–°—ä—Ö—Ä–∞–Ω–∏ –≥—Ä—É–ø–∞',
		prefix_clientConnected: '–ö–ª–∏–µ–Ω—Ç: –°–≤—ä—Ä–∑–∞–Ω',
		prefix_clientDisconnected: '–ö–ª–∏–µ–Ω—Ç: –û—Ç–∫–ª—é—á–µ–Ω',
		prefix_logReadError: '–ß–µ—Ç–µ–Ω–µ –Ω–∞ –ª–æ–≥: –ì—Ä–µ—à–∫–∞',
		prefix_logChangeError: '–ü—Ä–æ–º—è–Ω–∞ –Ω–∞ –ª–æ–≥: –ì—Ä–µ—à–∫–∞',
		prefix_logViewerRunning: 'LogViewer: –†–∞–±–æ—Ç–∏',
		prefix_serverError: '–°—ä—Ä–≤—ä—Ä: –ì—Ä–µ—à–∫–∞',
		prefix_tcpServerError: 'tcpServer: –ì—Ä–µ—à–∫–∞',
		prefix_keygenError: 'Keygen: –ì—Ä–µ—à–∫–∞',
		prefix_edit_sourceRequest: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_delete_sourceRequest: '–ò–∑—Ç—Ä–∏–π –∏–∑—Ç–æ—á–Ω–∏–∫: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_store_userRequest: '–°—ä—Ö—Ä–∞–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_edit_userRequest: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_delete_userRequest: '–ò–∑—Ç—Ä–∏–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: –ó–∞–ø–∏—Ç–≤–∞–Ω–µ',
		prefix_get_chat_infoSuccess: '–í–∑–µ–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —á–∞—Ç–∞: –£—Å–ø–µ—Ö',
		prefix_keygen: 'Keygen',
		prefix_list_groupsWarning: '–ò–∑–±—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ'
	}, 
	// Spanish (es)
	es: {
		prefix_All_Funcs: 'Todas las Funciones',
		prefix_Allow_Keygen: 'Permitir Keygen',
		prefix_ANONYMOUS_MODE: 'MODO_AN√ìNIMO',
		prefix_chat: 'Chat',
		prefix_chatApiError: 'Chat: ErrorApi',
		prefix_chatRequest: 'Chat: Solicitud',
		prefix_chatSuccess: 'Chat: √âxito',
		prefix_chatWarning: 'Chat: Advertencia',
		prefix_get_chat_info: 'Obtener Informaci√≥n del Chat',
		prefix_get_chat_infoError: 'Obtener Informaci√≥n del Chat: Error',
		prefix_continue_chat: 'Continuar Chat',
		prefix_continue_chatError: 'Continuar Chat: Error',
		prefix_continue_chatSuccess: 'Continuar Chat: √âxito',
		prefix_create_sourceError: 'Crear Fuente: Error',
		prefix_create_sourceGroupCheck: 'Crear Fuente: Verificaci√≥n de Grupo',
		prefix_create_sourceInvalidGroups: 'Crear Fuente: Grupos Inv√°lidos',
		prefix_create_sourceNoResponse: 'Crear Fuente: Sin Respuesta',
		prefix_create_sourceResponseError: 'Crear Fuente: Error en la Respuesta',
		prefix_create_sourceSuccess: 'Crear Fuente: √âxito',
		prefix_create_sourceUnknownError: 'Crear Fuente: Error Desconocido',
		prefix_Deact_Funcs: 'Desactivar Funciones',
		prefix_delete_groupError: 'Eliminar Grupo: Error',
		prefix_delete_groupRequest: 'Eliminar Grupo: Solicitud',
		prefix_delete_groupSuccess: 'Eliminar Grupo: √âxito',
		prefix_delete_source: 'Eliminar Fuente',
		prefix_delete_sourceError: 'Eliminar Fuente: Error',
		prefix_delete_sourceSuccess: 'Eliminar Fuente: √âxito',
		prefix_delete_user: 'Eliminar Usuario',
		prefix_edit_user: 'Editar Usuario',
		prefix_edit_userError: 'Editar Usuario: Error',
		prefix_edit_userSuccess: 'Editar Usuario: √âxito',
		prefix_Env_Load_Err: 'Ambiente: ErrorCarga',
		prefix_File_Path: 'Ruta del Archivo',
		prefix_Handling_Tool_Request: 'Manejando Solicitud de Herramienta',
		prefix_Incoming_Message: 'Mensaje Entrante',
		prefix_Lang_Warning: 'Advertencia de Idioma',
		prefix_Language: 'Idioma',
		prefix_LOG_IPs: 'LOG_IPs',
		prefix_login: 'Iniciar Sesi√≥n',
		prefix_loginError: 'Iniciar Sesi√≥n: Error',
		prefix_loginSuccess: 'Iniciar Sesi√≥n: √âxito',
		prefix_logout: 'Cerrar Sesi√≥n',
		prefix_logoutError: 'Cerrar Sesi√≥n: Error',
		prefix_logoutSuccess: 'Cerrar Sesi√≥n: √âxito',
		prefix_MCP_Error: 'Error MCP',
		prefix_Missing_Config: 'Configuraci√≥n Faltante',
		prefix_Port: 'Puerto',
		prefix_Port_Check: 'Verificaci√≥n de Puerto',
		prefix_Port_Invalid: 'Puerto Inv√°lido',
		prefix_Port_Validated: 'Puerto Validado',
		prefix_Private_API_URL: 'URL de API Privada',
		prefix_Proxy_Config: 'Configuraci√≥n de Proxy',
		prefix_Public_API_URL: 'URL de API P√∫blica',
		prefix_PW_Encryption: 'Cifrado de Contrase√±a',
		prefix_requestHeaders: 'Encabezados de Solicitud',
		prefix_Restricted_Groups: 'Grupos Restringidos',
		prefix_Server_Config: 'Configuraci√≥n del Servidor',
		prefix_Shutdown: 'Apagado',
		prefix_SSL_Validation: 'Validaci√≥n SSL',
		prefix_Tool_Disabled: 'Herramienta Deshabilitada',
		prefix_Tool_Warn: 'Advertencia de Herramienta',
		prefix_URL_Invalid: 'URL Inv√°lida',
		prefix_URL_Warning: 'Advertencia de URL',
		prefix_URL_Warning_V1: 'Advertencia de URL V1',
		prefix_Validation_Err: 'Error de Validaci√≥n',
		prefix_WRITTEN_LOGFILE: 'ARCHIVO_DE_LOG_ESCRITO',
		prefix_unknownCommand: 'comandoDesconocido',
		prefix_get_sourceError: 'Obtener Fuente: Error',
		prefix_get_sourceRequest: 'Obtener Fuente: Solicitud',
		prefix_get_sourceSuccess: 'Obtener Fuente: √âxito',
		prefix_list_groupsError: 'Listar Grupos: Error',
		prefix_list_groupsRequest: 'Listar Grupos: Solicitud',
		prefix_list_groupsSuccess: 'Listar Grupos: √âxito',
		prefix_list_sourcesError: 'Listar Fuentes: Error',
		prefix_list_sourcesRequest: 'Listar Fuentes: Solicitud',
		prefix_list_sourcesSuccess: 'Listar Fuentes: √âxito',
		prefix_responseReceived: 'Respuesta Recibida',
		prefix_store_groupError: 'Almacenar Grupo: Error',
		prefix_store_groupRequest: 'Almacenar Grupo: Solicitud',
		prefix_store_groupSuccess: 'Almacenar Grupo: √âxito',
		prefix_store_user: 'Almacenar Usuario',
		prefix_store_userError: 'Almacenar Usuario: Error',
		prefix_store_userSuccess: 'Almacenar Usuario: √âxito',
		prefix_delete_userSuccess: 'Eliminar Usuario: √âxito',
		prefix_delete_userError: 'Eliminar Usuario: Error',
		prefix_apiRequestError: 'Solicitud de API: Error',
		prefix_create_source: 'Crear Fuente',
		prefix_get_source: 'Obtener Fuente',
		prefix_list_sources: 'Listar Fuentes',
		prefix_edit_source: 'Editar Fuente',
		prefix_edit_sourceSuccess: 'Editar Fuente: √âxito',
		prefix_edit_sourceError: 'Editar Fuente: Error',
		prefix_delete_group: 'Eliminar Grupo',
		prefix_list_groups: 'Listar Grupos',
		prefix_store_group: 'Almacenar Grupo',
		prefix_clientConnected: 'Cliente: Conectado',
		prefix_clientDisconnected: 'Cliente: Desconectado',
		prefix_logReadError: 'Lectura de Log: Error',
		prefix_logChangeError: 'Cambio de Log: Error',
		prefix_logViewerRunning: 'Visualizador de Logs: En Ejecuci√≥n',
		prefix_serverError: 'Servidor: Error',
		prefix_tcpServerError: 'tcpServer: Error',
		prefix_keygenError: 'Keygen: Error',
		prefix_edit_sourceRequest: 'Editar Fuente: Solicitud',
		prefix_delete_sourceRequest: 'Eliminar Fuente: Solicitud',
		prefix_store_userRequest: 'Almacenar Usuario: Solicitud',
		prefix_edit_userRequest: 'Editar Usuario: Solicitud',
		prefix_delete_userRequest: 'Eliminar Usuario: Solicitud',
		prefix_get_chat_infoSuccess: 'Obtener Informaci√≥n del Chat: √âxito',
		prefix_keygen: 'Keygen',
		prefix_list_groupsWarning: 'Listar Grupos: Advertencia'
	},
	// Dutch (nl)
	nl: {
		prefix_All_Funcs: 'Alle Functies',
		prefix_Allow_Keygen: 'Sta Keygen Toe',
		prefix_ANONYMOUS_MODE: 'ANONIEME_MODE',
		prefix_chat: 'Chat',
		prefix_chatApiError: 'Chat: ApiFout',
		prefix_chatRequest: 'Chat: Verzoek',
		prefix_chatSuccess: 'Chat: Succes',
		prefix_chatWarning: 'Chat: Waarschuwing',
		prefix_get_chat_info: 'Chat Info Ophalen',
		prefix_get_chat_infoError: 'Chat Info Ophalen: Fout',
		prefix_continue_chat: 'Chat Doorgaan',
		prefix_continue_chatError: 'Chat Doorgaan: Fout',
		prefix_continue_chatSuccess: 'Chat Doorgaan: Succes',
		prefix_create_sourceError: 'Bron Aanmaken: Fout',
		prefix_create_sourceGroupCheck: 'Bron Aanmaken: GroepControl',
		prefix_create_sourceInvalidGroups: 'Bron Aanmaken: Ongeldige Groepen',
		prefix_create_sourceNoResponse: 'Bron Aanmaken: Geen Reactie',
		prefix_create_sourceResponseError: 'Bron Aanmaken: ReactieFout',
		prefix_create_sourceSuccess: 'Bron Aanmaken: Succes',
		prefix_create_sourceUnknownError: 'Bron Aanmaken: Onbekende Fout',
		prefix_Deact_Funcs: 'Functies Deactiveren',
		prefix_delete_groupError: 'Groep Verwijderen: Fout',
		prefix_delete_groupRequest: 'Groep Verwijderen: Verzoek',
		prefix_delete_groupSuccess: 'Groep Verwijderen: Succes',
		prefix_delete_source: 'Bron Verwijderen',
		prefix_delete_sourceError: 'Bron Verwijderen: Fout',
		prefix_delete_sourceSuccess: 'Bron Verwijderen: Succes',
		prefix_delete_user: 'Gebruiker Verwijderen',
		prefix_edit_user: 'Gebruiker Bewerken',
		prefix_edit_userError: 'Gebruiker Bewerken: Fout',
		prefix_edit_userSuccess: 'Gebruiker Bewerken: Succes',
		prefix_Env_Load_Err: 'Omgeving: LaadFout',
		prefix_File_Path: 'Bestandspad',
		prefix_Handling_Tool_Request: 'Behandelen Hulpmiddelverzoek',
		prefix_Incoming_Message: 'Binnenkomend Bericht',
		prefix_Lang_Warning: 'Taal Waarschuwing',
		prefix_Language: 'Taal',
		prefix_LOG_IPs: 'LOG_IPs',
		prefix_login: 'Inloggen',
		prefix_loginError: 'Inloggen: Fout',
		prefix_loginSuccess: 'Inloggen: Succes',
		prefix_logout: 'Uitloggen',
		prefix_logoutError: 'Uitloggen: Fout',
		prefix_logoutSuccess: 'Uitloggen: Succes',
		prefix_MCP_Error: 'MCP Fout',
		prefix_Missing_Config: 'Configuratie Ontbreekt',
		prefix_Port: 'Poort',
		prefix_Port_Check: 'Poort Controle',
		prefix_Port_Invalid: 'Ongeldige Poort',
		prefix_Port_Validated: 'Poort Gevalideerd',
		prefix_Private_API_URL: 'Priv√© API URL',
		prefix_Proxy_Config: 'Proxy Configuratie',
		prefix_Public_API_URL: 'Publieke API URL',
		prefix_PW_Encryption: 'Wachtwoord Encryptie',
		prefix_requestHeaders: 'Verzoek Headers',
		prefix_Restricted_Groups: 'Beperkte Groepen',
		prefix_Server_Config: 'Server Configuratie',
		prefix_Shutdown: 'Afsluiten',
		prefix_SSL_Validation: 'SSL Validatie',
		prefix_Tool_Disabled: 'Hulpmiddel Uitgeschakeld',
		prefix_Tool_Warn: 'Hulpmiddel Waarschuwing',
		prefix_URL_Invalid: 'Ongeldige URL',
		prefix_URL_Warning: 'URL Waarschuwing',
		prefix_URL_Warning_V1: 'URL Waarschuwing V1',
		prefix_Validation_Err: 'Validatie Fout',
		prefix_WRITTEN_LOGFILE: 'GESCHREVEN_LOGFILE',
		prefix_unknownCommand: 'onbekendCommando',
		prefix_get_sourceError: 'Bron Ophalen: Fout',
		prefix_get_sourceRequest: 'Bron Ophalen: Verzoek',
		prefix_get_sourceSuccess: 'Bron Ophalen: Succes',
		prefix_list_groupsError: 'Groepen Lijst: Fout',
		prefix_list_groupsRequest: 'Groepen Lijst: Verzoek',
		prefix_list_groupsSuccess: 'Groepen Lijst: Succes',
		prefix_list_sourcesError: 'Bronnen Lijst: Fout',
		prefix_list_sourcesRequest: 'Bronnen Lijst: Verzoek',
		prefix_list_sourcesSuccess: 'Bronnen Lijst: Succes',
		prefix_responseReceived: 'Reactie Ontvangen',
		prefix_store_groupError: 'Groep Opslaan: Fout',
		prefix_store_groupRequest: 'Groep Opslaan: Verzoek',
		prefix_store_groupSuccess: 'Groep Opslaan: Succes',
		prefix_store_user: 'Gebruiker Opslaan',
		prefix_store_userError: 'Gebruiker Opslaan: Fout',
		prefix_store_userSuccess: 'Gebruiker Opslaan: Succes',
		prefix_delete_userSuccess: 'Gebruiker Verwijderen: Succes',
		prefix_delete_userError: 'Gebruiker Verwijderen: Fout',
		prefix_apiRequestError: 'API Verzoek: Fout',
		prefix_create_source: 'Bron Aanmaken',
		prefix_get_source: 'Bron Ophalen',
		prefix_list_sources: 'Bronnen Lijst',
		prefix_edit_source: 'Bron Bewerken',
		prefix_edit_sourceSuccess: 'Bron Bewerken: Succes',
		prefix_edit_sourceError: 'Bron Bewerken: Fout',
		prefix_delete_group: 'Groep Verwijderen',
		prefix_list_groups: 'Groepen Lijst',
		prefix_store_group: 'Groep Opslaan',
		prefix_clientConnected: 'Client: Verbonden',
		prefix_clientDisconnected: 'Client: Verbroken',
		prefix_logReadError: 'Log Lezen: Fout',
		prefix_logChangeError: 'Log Wijziging: Fout',
		prefix_logViewerRunning: 'LogViewer: Draait',
		prefix_serverError: 'Server: Fout',
		prefix_tcpServerError: 'tcpServer: Fout',
		prefix_keygenError: 'Keygen: Fout',
		prefix_edit_sourceRequest: 'Bron Bewerken: Verzoek',
		prefix_delete_sourceRequest: 'Bron Verwijderen: Verzoek',
		prefix_store_userRequest: 'Gebruiker Opslaan: Verzoek',
		prefix_edit_userRequest: 'Gebruiker Bewerken: Verzoek',
		prefix_delete_userRequest: 'Gebruiker Verwijderen: Verzoek',
		prefix_get_chat_infoSuccess: 'Chat Info Ophalen: Succes',
		prefix_keygen: 'Keygen',
		prefix_list_groupsWarning: 'Groepen Lijst: Waarschuwing'
	},
	he: 
	    {
		prefix_All_Funcs: '◊õ◊ú ◊î◊§◊ï◊†◊ß◊¶◊ô◊ï◊™',
		prefix_Allow_Keygen: '◊ê◊§◊©◊® ◊ô◊¶◊ô◊®◊™ ◊û◊§◊™◊ó◊ï◊™',
		prefix_ANONYMOUS_MODE: '◊û◊¶◊ë ◊ê◊†◊ï◊†◊ô◊û◊ô',
		prefix_chat: '◊¶◊≥◊ê◊ò',
		prefix_chatApiError: '◊¶◊≥◊ê◊ò: ◊©◊í◊ô◊ê◊™ API',
		prefix_chatRequest: '◊¶◊≥◊ê◊ò: ◊ë◊ß◊©◊î',
		prefix_chatSuccess: '◊¶◊≥◊ê◊ò: ◊î◊¶◊ú◊ó◊î',
		prefix_chatWarning: '◊¶◊≥◊ê◊ò: ◊ê◊ñ◊î◊®◊î',
		prefix_get_chat_info: '◊ß◊ë◊ú ◊û◊ô◊ì◊¢ ◊¢◊ú ◊¶◊≥◊ê◊ò',
		prefix_get_chat_infoError: '◊ß◊ë◊ú ◊û◊ô◊ì◊¢ ◊¢◊ú ◊¶◊≥◊ê◊ò: ◊©◊í◊ô◊ê◊î',
		prefix_continue_chat: '◊î◊û◊©◊ö ◊¶◊≥◊ê◊ò',
		prefix_continue_chatError: '◊î◊û◊©◊ö ◊¶◊≥◊ê◊ò: ◊©◊í◊ô◊ê◊î',
		prefix_continue_chatSuccess: '◊î◊û◊©◊ö ◊¶◊≥◊ê◊ò: ◊î◊¶◊ú◊ó◊î',
		prefix_create_sourceError: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊©◊í◊ô◊ê◊î',
		prefix_create_sourceGroupCheck: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊ë◊ì◊ô◊ß◊™ ◊ß◊ë◊ï◊¶◊î',
		prefix_create_sourceInvalidGroups: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊ß◊ë◊ï◊¶◊ï◊™ ◊ú◊ê ◊ó◊ï◊ß◊ô◊ï◊™',
		prefix_create_sourceNoResponse: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊ê◊ô◊ü ◊™◊í◊ï◊ë◊î',
		prefix_create_sourceResponseError: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊©◊í◊ô◊ê◊™ ◊™◊í◊ï◊ë◊î',
		prefix_create_sourceSuccess: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊î◊¶◊ú◊ó◊î',
		prefix_create_sourceUnknownError: '◊¶◊ï◊® ◊û◊ß◊ï◊®: ◊©◊í◊ô◊ê◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î',
		prefix_Deact_Funcs: '◊ë◊ô◊ò◊ï◊ú ◊§◊ï◊†◊ß◊¶◊ô◊ï◊™',
		prefix_delete_groupError: '◊û◊ó◊ß ◊ß◊ë◊ï◊¶◊î: ◊©◊í◊ô◊ê◊î',
		prefix_delete_groupRequest: '◊û◊ó◊ß ◊ß◊ë◊ï◊¶◊î: ◊ë◊ß◊©◊î',
		prefix_delete_groupSuccess: '◊û◊ó◊ß ◊ß◊ë◊ï◊¶◊î: ◊î◊¶◊ú◊ó◊î',
		prefix_delete_source: '◊û◊ó◊ß ◊û◊ß◊ï◊®',
		prefix_delete_sourceError: '◊û◊ó◊ß ◊û◊ß◊ï◊®: ◊©◊í◊ô◊ê◊î',
		prefix_delete_sourceSuccess: '◊û◊ó◊ß ◊û◊ß◊ï◊®: ◊î◊¶◊ú◊ó◊î',
		prefix_delete_user: '◊û◊ó◊ß ◊û◊©◊™◊û◊©',
		prefix_edit_user: '◊¢◊®◊ï◊ö ◊û◊©◊™◊û◊©',
		prefix_edit_userError: '◊¢◊®◊ï◊ö ◊û◊©◊™◊û◊©: ◊©◊í◊ô◊ê◊î',
		prefix_edit_userSuccess: '◊¢◊®◊ï◊ö ◊û◊©◊™◊û◊©: ◊î◊¶◊ú◊ó◊î',
		prefix_Env_Load_Err: '◊©◊í◊ô◊ê◊™ ◊ò◊¢◊ô◊†◊™ ◊°◊ë◊ô◊ë◊î',
		prefix_File_Path: '◊†◊™◊ô◊ë ◊ß◊ï◊ë◊•',
		prefix_Handling_Tool_Request: '◊û◊ò◊§◊ú ◊ë◊ë◊ß◊©◊™ ◊õ◊ú◊ô',
		prefix_Incoming_Message: '◊î◊ï◊ì◊¢◊î ◊†◊õ◊†◊°◊™',
		prefix_Lang_Warning: '◊ê◊ñ◊î◊®◊™ ◊©◊§◊î',
		prefix_Language: '◊©◊§◊î',
		prefix_LOG_IPs: '◊ô◊ï◊û◊†◊ô IP',
		prefix_login: '◊î◊™◊ó◊ë◊®◊ï◊™',
		prefix_loginError: '◊î◊™◊ó◊ë◊®◊ï◊™: ◊©◊í◊ô◊ê◊î',
		prefix_loginSuccess: '◊î◊™◊ó◊ë◊®◊ï◊™: ◊î◊¶◊ú◊ó◊î',
		prefix_logout: '◊î◊™◊†◊™◊ß◊ï◊™',
		prefix_logoutError: '◊î◊™◊†◊™◊ß◊ï◊™: ◊©◊í◊ô◊ê◊î',
		prefix_logoutSuccess: '◊î◊™◊†◊™◊ß◊ï◊™: ◊î◊¶◊ú◊ó◊î',
		prefix_MCP_Error: '◊©◊í◊ô◊ê◊™ MCP',
		prefix_Missing_Config: '◊™◊¶◊ï◊®◊î ◊ó◊°◊®◊î',
		prefix_Port: '◊§◊ï◊®◊ò',
		prefix_Port_Check: '◊ë◊ì◊ô◊ß◊™ ◊§◊ï◊®◊ò',
		prefix_Port_Invalid: '◊§◊ï◊®◊ò ◊ú◊ê ◊ó◊ï◊ß◊ô',
		prefix_Port_Validated: '◊§◊ï◊®◊ò ◊™◊ß◊ô◊ü',
		prefix_Private_API_URL: '◊õ◊™◊ï◊ë◊™ API ◊§◊®◊ò◊ô◊™',
		prefix_Proxy_Config: '◊™◊¶◊ï◊®◊™ ◊§◊®◊ï◊ß◊°◊ô',
		prefix_Public_API_URL: '◊õ◊™◊ï◊ë◊™ API ◊¶◊ô◊ë◊ï◊®◊ô◊™',
		prefix_PW_Encryption: '◊î◊¶◊§◊†◊™ ◊°◊ô◊°◊û◊î',
		prefix_requestHeaders: '◊õ◊ï◊™◊®◊ï◊™ ◊ë◊ß◊©◊î',
		prefix_Restricted_Groups: '◊ß◊ë◊ï◊¶◊ï◊™ ◊û◊ï◊í◊ë◊ú◊ï◊™',
		prefix_Server_Config: '◊™◊¶◊ï◊®◊™ ◊©◊®◊™',
		prefix_Shutdown: '◊õ◊ô◊ë◊ï◊ô',
		prefix_SSL_Validation: '◊ê◊ô◊û◊ï◊™ SSL',
		prefix_Tool_Disabled: '◊õ◊ú◊ô ◊õ◊ë◊ï◊ô',
		prefix_Tool_Warn: '◊ê◊ñ◊î◊®◊™ ◊õ◊ú◊ô',
		prefix_URL_Invalid: '◊õ◊™◊ï◊ë◊™ URL ◊ú◊ê ◊ó◊ï◊ß◊ô◊™',
		prefix_URL_Warning: '◊ê◊ñ◊î◊®◊™ URL',
		prefix_URL_Warning_V1: '◊ê◊ñ◊î◊®◊™ URL ◊í◊®◊°◊î 1',
		prefix_Validation_Err: '◊©◊í◊ô◊ê◊™ ◊ê◊ô◊û◊ï◊™',
		prefix_WRITTEN_LOGFILE: '◊ß◊ï◊ë◊• ◊ô◊ï◊û◊ü ◊õ◊™◊ï◊ë',
		prefix_unknownCommand: '◊§◊ß◊ï◊ì◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î',
		prefix_get_sourceError: '◊ß◊ë◊ú ◊û◊ß◊ï◊®: ◊©◊í◊ô◊ê◊î',
		prefix_get_sourceRequest: '◊ß◊ë◊ú ◊û◊ß◊ï◊®: ◊ë◊ß◊©◊î',
		prefix_get_sourceSuccess: '◊ß◊ë◊ú ◊û◊ß◊ï◊®: ◊î◊¶◊ú◊ó◊î',
		prefix_list_groupsError: '◊®◊©◊ô◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™: ◊©◊í◊ô◊ê◊î',
		prefix_list_groupsRequest: '◊®◊©◊ô◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™: ◊ë◊ß◊©◊î',
		prefix_list_groupsSuccess: '◊®◊©◊ô◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™: ◊î◊¶◊ú◊ó◊î',
		prefix_list_sourcesError: '◊®◊©◊ô◊û◊™ ◊û◊ß◊ï◊®◊ï◊™: ◊©◊í◊ô◊ê◊î',
		prefix_list_sourcesRequest: '◊®◊©◊ô◊û◊™ ◊û◊ß◊ï◊®◊ï◊™: ◊ë◊ß◊©◊î',
		prefix_list_sourcesSuccess: '◊®◊©◊ô◊û◊™ ◊û◊ß◊ï◊®◊ï◊™: ◊î◊¶◊ú◊ó◊î',
		prefix_responseReceived: '◊™◊í◊ï◊ë◊î ◊î◊™◊ß◊ë◊ú◊î',
		prefix_store_groupError: '◊©◊û◊ï◊® ◊ß◊ë◊ï◊¶◊î: ◊©◊í◊ô◊ê◊î',
		prefix_store_groupRequest: '◊©◊û◊ï◊® ◊ß◊ë◊ï◊¶◊î: ◊ë◊ß◊©◊î',
		prefix_store_groupSuccess: '◊©◊û◊ï◊® ◊ß◊ë◊ï◊¶◊î: ◊î◊¶◊ú◊ó◊î',
		prefix_store_user: '◊©◊û◊ï◊® ◊û◊©◊™◊û◊©',
		prefix_store_userError: '◊©◊û◊ï◊® ◊û◊©◊™◊û◊©: ◊©◊í◊ô◊ê◊î',
		prefix_store_userSuccess: '◊©◊û◊ï◊® ◊û◊©◊™◊û◊©: ◊î◊¶◊ú◊ó◊î',
		prefix_delete_userSuccess: '◊û◊ó◊ß ◊û◊©◊™◊û◊©: ◊î◊¶◊ú◊ó◊î',
		prefix_delete_userError: '◊û◊ó◊ß ◊û◊©◊™◊û◊©: ◊©◊í◊ô◊ê◊î',
		prefix_apiRequestError: '◊ë◊ß◊©◊™ API: ◊©◊í◊ô◊ê◊î',
		prefix_create_source: '◊¶◊ï◊® ◊û◊ß◊ï◊®',
		prefix_get_source: '◊ß◊ë◊ú ◊û◊ß◊ï◊®',
		prefix_list_sources: '◊®◊©◊ô◊û◊™ ◊û◊ß◊ï◊®◊ï◊™',
		prefix_edit_source: '◊¢◊®◊ï◊ö ◊û◊ß◊ï◊®',
		prefix_edit_sourceSuccess: '◊¢◊®◊ï◊ö ◊û◊ß◊ï◊®: ◊î◊¶◊ú◊ó◊î',
		prefix_edit_sourceError: '◊¢◊®◊ï◊ö ◊û◊ß◊ï◊®: ◊©◊í◊ô◊ê◊î',
		prefix_delete_group: '◊û◊ó◊ß ◊ß◊ë◊ï◊¶◊î',
		prefix_list_groups: '◊®◊©◊ô◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™',
		prefix_store_group: '◊©◊û◊ï◊® ◊ß◊ë◊ï◊¶◊î',
		prefix_clientConnected: '◊ú◊ß◊ï◊ó: ◊û◊ó◊ï◊ë◊®',
		prefix_clientDisconnected: '◊ú◊ß◊ï◊ó: ◊û◊†◊ï◊™◊ß',
		prefix_logReadError: '◊ß◊®◊ô◊ê◊™ ◊ô◊ï◊û◊ü: ◊©◊í◊ô◊ê◊î',
		prefix_logChangeError: '◊©◊ô◊†◊ï◊ô ◊ô◊ï◊û◊ü: ◊©◊í◊ô◊ê◊î',
		prefix_logViewerRunning: '◊¶◊ï◊§◊î ◊ô◊ï◊û◊ü: ◊§◊ï◊¢◊ú',
		prefix_serverError: '◊©◊®◊™: ◊©◊í◊ô◊ê◊î',
		prefix_tcpServerError: '◊©◊®◊™ TCP: ◊©◊í◊ô◊ê◊î',
		prefix_keygenError: '◊ô◊¶◊ô◊®◊™ ◊û◊§◊™◊ó: ◊©◊í◊ô◊ê◊î',
		prefix_edit_sourceRequest: '◊¢◊®◊ï◊ö ◊û◊ß◊ï◊®: ◊ë◊ß◊©◊î',
		prefix_delete_sourceRequest: '◊û◊ó◊ß ◊û◊ß◊ï◊®: ◊ë◊ß◊©◊î',
		prefix_store_userRequest: '◊©◊û◊ï◊® ◊û◊©◊™◊û◊©: ◊ë◊ß◊©◊î',
		prefix_edit_userRequest: '◊¢◊®◊ï◊ö ◊û◊©◊™◊û◊©: ◊ë◊ß◊©◊î',
		prefix_delete_userRequest: '◊û◊ó◊ß ◊û◊©◊™◊û◊©: ◊ë◊ß◊©◊î',
		prefix_get_chat_infoSuccess: '◊ß◊ë◊ú ◊û◊ô◊ì◊¢ ◊¢◊ú ◊¶◊≥◊ê◊ò: ◊î◊¶◊ú◊ó◊î',
		prefix_keygen: '◊ô◊¶◊ô◊®◊™ ◊û◊§◊™◊ó',
		prefix_list_groupsWarning: '◊®◊©◊ô◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™: ◊ê◊ñ◊î◊®◊î'
		}
	};

export const messages = {
	de: {
		openaicompAPI: 'ENABLE_OPEN_AI_COMP_API Wert: ${val}',
		createSourceError: 'Fehler beim Erstellen der Quelle: ${error}',
		create_sourceUnknownError: 'Unbekannter Fehler beim Erstellen der Quelle: ${error}',
		returnStatus: 'Status: ${Status}',
		extractedToken: 'Extrahiertes Token: ${token}',
		missingChatId: 'chatId ist erforderlich, um Chat-Informationen abzurufen.',
		missingQuestion: 'Frage in den Argumenten fehlt.',
		ChatInfoRetrieved: 'Chat-Informationen abgerufen: ${chatData}',
		InvalidGroups: 'Ung√ºltige Gruppen: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId ist erforderlich, um eine Quelle zu bearbeiten.',
		sourceIdRequiredRetrieveSource: 'sourceId ist erforderlich, um eine Quelle abzurufen.',
		ConnectionEstablished: 'Verbindung hergestellt',
		ResponseSuccessfullySent: 'Antwort erfolgreich gesendet',
		ConnectionClosed: 'Verbindung geschlossen',
		ServerStopped: 'Server wurde gestoppt',
		responseReceived: 'Antwort empfangen mit Status: ${status}',
		internalServerError: 'Interner Serverfehler',
		tcpServerError: 'Ein Fehler ist im TCP-Server aufgetreten:',
		unknownErrorOccured: 'Ein unbekannter Fehler ist aufgetreten.',
		KeygenRequired: 'Keygen erforderlich',
		unknownCommand: 'Unbekannter Befehl',
		socketEmitLogNotActivated: 'Protokolldatei ist nicht aktiviert.',
		socketEmitLogReadError: 'Fehler beim Lesen der Protokolldatei.',
		deletesourceLog: 'Quelle l√∂schen mit Namen: ${SourceName}',
		sourceIdRequiredDeleteSource: 'sourceId ist erforderlich, um die Quelle zu l√∂schen.',
		listGroupsSuccess: 'Gruppenliste abgerufen: ${GROUPS}',
		toolNotDefinedInConfig: 'Ung√ºltiger Funktionsaufruf: ${warn}',
		toolDisabledLog: 'Funktionsaufruf serverseitig deaktiviert: ${warn}',
		toolDisabledError: 'Funktionsaufruf serverseitig deaktiviert: ${warn}',
		accessRestrictedGroups: 'RESTRICTED_GROUPS Wert: ${val}',
		allFunctionsEnabled: 'Alle Funktionen sind aktiviert',
		allGroupsValid: 'Alle Gruppen sind g√ºltig',
		AllowLoggingSuccess: 'ALLOW_LOGGING ist aktiviert: ${status}',
		anonymousModeSuccess: 'ANONYMOUS_MODE ist aktiviert: ${status}',
		apiErrorDetails: 'API Fehler: Status: ${status}, Daten: ${data}',
		apiRequestError: 'API Anforderungsfehler: ${error}',
		apiUrlInvalid: 'Ung√ºltige API_URL',
		apiUrlValidated: 'API_URL erfolgreich validiert: ${url}',
		apiUrlWarning: 'Warnung: API_URL beginnt nicht mit \"https://\". Die URL wird angepasst.',
		apiUrlWarningV1: 'Warnung: API_URL endet nicht mit "/api/v1". Die URL wird angepasst.',
		authFailed: 'Authentifizierung fehlgeschlagen.',
		authStarted: 'Authentifizierung gestartet.',
		availableGroups: 'Verf√ºgbare Gruppen: ${availableGroups}',
		chatApiErrorDefault: 'Fehler w√§hrend der Chat-Anfrage.',
		chatApiError: 'Fehler in der Chat-API-Anfrage: ${error}',
		chatResponseSuccess: 'Chat-Antwort empfangen: ${data}',
		checkingGroups: 'Gruppen werden √ºberpr√ºft: ${groups}',
		clientConnected: 'WebSocket-Client verbunden',
		clientDisconnected: 'WebSocket-Client getrennt',
		connection: {
			new: 'Neue Verbindung akzeptiert von ${ip}:${port}',
			established: 'Verbindung hergestellt',
			closed: 'Verbindung geschlossen: ${ip}:${port}',
			dataReceived: 'Daten empfangen von ${ip}:${port}: ${data}'
		},
		errors: {
			processMessage: 'Fehler beim Verarbeiten der Nachricht: ${error}',
			invalidMessage: 'Ung√ºltiges Nachrichtenformat',
			socketError: 'Socket-Fehler bei ${ip}:${port}: ${error}',
			serverError: 'Serverfehler: ${error}'
		},
		server: {
			running: 'Server l√§uft auf Port ${port}',
			stopped: 'Server wurde gestoppt'
		},
		continueConversationError: 'Fehler beim Fortsetzen des Gespr√§chs.',
		conversationContinuation: 'Gespr√§ch wird fortgesetzt, ID: ${chatId}',
		conversationSuccess: 'Gespr√§ch erfolgreich fortgesetzt: ${data}',
		createGroupSuccess: 'Gruppe erfolgreich erstellt: ${data}',
		createSourceLog: 'Quelle bearbeiten mit ID: ${sourceId}, Titel: ${title}',
		createSourceSuccess: 'Quelle erfolgreich erstellt: ${data}',
		createUserError: 'Fehler beim Erstellen des Benutzers: ${error}',
		createUserLog: 'Neuen Benutzer erstellen: ${payload}',
		createUserSuccess: 'Benutzer erfolgreich erstellt: ${data}',
		deactivatedFunctions: 'Deaktivierte Funktionen:',
		deleteGroupInternalError: 'Interner Fehler beim L√∂schen der Gruppe.',
		deleteGroupLog: 'Gruppe l√∂schen mit Namen: ${groupName}',
		deleteGroupSuccessLog: 'Gruppe erfolgreich gel√∂scht: ${data}',
		deleteGroupText: 'Gruppe \"${groupName}\" wurde erfolgreich gel√∂scht.',
		deleteSourceError: 'Fehler beim L√∂schen der Quelle: ${error}',
		deleteSourceFailedTryAgain: 'L√∂schen der Quelle fehlgeschlagen. Bitte versuchen Sie es sp√§ter erneut.',
		deleteUserError: 'Fehler beim L√∂schen des Benutzers: ${error}',
		deleteUserLog: 'Benutzer l√∂schen mit Namen: ${UserName}',
		deleteUserSuccess: 'Benutzer erfolgreich gel√∂scht: ${data}',
		decryptPwdError: 'Das Passwort konnte nicht entschl√ºsselt werden.',
		decryptionError: 'Entschl√ºsselungsfehler.',
		dataReceivedMsg: 'Daten empfangen: ${data}',
		emailRequiredForDelete: 'E-Mail ist erforderlich, um einen Benutzer zu l√∂schen.',
		emailRequiredForEdit: 'Benutzer-E-Mail ist erforderlich, um den Datensatz zu bearbeiten.',
		editSourceError: 'Fehler beim Bearbeiten der Quelle: ${error}',
		editSourceLog: 'Quelle bearbeiten mit ID: ${sourceId}, Titel: ${title}',
		editSourceSuccess: 'Quelle erfolgreich bearbeitet: ${data}',
		editUserError: 'Fehler beim Bearbeiten des Benutzers: ${error}',
		editUserSuccess: 'Benutzer erfolgreich bearbeitet: ${data}',
		encryptPwdError: 'Das Passwort konnte nicht verschl√ºsselt werden.',
		encryptionDisabled: 'Deaktiviert',
		encryptionEnabled: 'Aktiviert',
		encryptionError: 'Verschl√ºsselungsfehler.',
		errorHandlingRequest: 'Fehler bei der Bearbeitung der Anfrage: ${error}',
		errorProcessingMsg: 'Fehler bei der Verarbeitung der Nachricht: ${error}',
		fetchChatInfoError: 'Fehler beim Abrufen der Chat-Informationen: ${error}',
		fetchGroupsError: 'Fehler beim Abrufen der Gruppen: ${error}',
		fetchGroupsErrorBackup: 'Fehler beim Abrufen der Gruppen.',
		fetchGroupsErrorPrefix: 'Fehler beim Abrufen der Gruppen:',
		fetchSourcesError: 'Fehler beim Abrufen der Quellen.',
		fetchingSources: 'Quellen f√ºr Gruppe: ${groupName} werden abgerufen.',
		fileReadErrorTitle: 'Fehler beim Lesen der Datei.',
		functionDisabled: 'deaktiviert',
		genericServerErrorPrefix: 'Fehler:',
		gotGetSourceResponse: 'Antwort f√ºr get_source erhalten: ${data}',
		gotListGroupsResponse: 'Antwort f√ºr list_groups erhalten: ${response}',
		gotListSourcesResponse: 'Antwort f√ºr list_sources erhalten: ${data}',
		groupFetchError: 'Fehler beim Abrufen der Gruppen: Bitte versuchen Sie es sp√§ter erneut.',
		groupNameRequired: 'Gruppenname ist f√ºr diese Anfrage erforderlich.',
		groupValidationError: 'Fehler bei der Validierung der Gruppe: ${error}',
		groupValidationErrorPrefix: 'Fehler: ${error}',
		handlingToolRequest: 'Bearbeite Tool-Anfrage: ${tool}',
		headers: 'Header: ${headers}',
		incomingMessage: 'Eingehende Nachricht: ${MESSAGE}',
		invalidArgumentsError: 'Fehler: Keine g√ºltigen Argumente gefunden in der Eingabe: ${input}',
		invalidGroups: 'Ung√ºltige Gruppen: ${groups}',
		invalidGroupsError: 'Ung√ºltige Gruppen: ${invalidGroups}',
		invalidGroupsLog: 'Ung√ºltig: ${groups}',
		invalidMessage: 'Ung√ºltige Nachricht',
		invalidOrEmptyRequest: 'Ung√ºltige Nachricht oder leere Anfrage.',
		keygenDisabled: 'Deaktiviert',
		keygenEnabled: 'Aktiviert',
		keygenErrorPrefix: 'Fehler bei der Keygen-Anfrage:',
		keygenSuccess: 'Keygen erfolgreich abgeschlossen.',
		langNotSupported: 'Sprache \"${lang}\" wird nicht unterst√ºtzt. Fallback zu Englisch.',
		loginEmailPasswordRequired: 'Anmeldung fehlgeschlagen: E-Mail und Passwort sind erforderlich.',
		loginError: 'Anmeldefehler: ${error}',
		loginErrorPrefix: 'Fehler: ${error}',
		loginMissingCredentials: 'Anmeldung fehlgeschlagen: E-Mail und Passwort sind erforderlich.',
		loginMissingCredentialsAlternative: 'Anmeldung fehlgeschlagen: E-Mail und Passwort sind erforderlich.',
		loginResponse: 'Anmeldeantwort',
		loginSuccess: 'Anmeldung erfolgreich: ${data}',
		loginTokenReceived: 'Token empfangen: ${token}',
		LogIpsSuccess: 'LOG_IPs ist aktiviert: ${status}',
		logChangeError: 'Fehler bei der Verarbeitung von Logdatei-√Ñnderungen: ${error}',
		logReadError: 'Fehler beim Lesen der Logdatei: ${error}',
		logViewerRunning: 'Log-Viewer l√§uft unter http://localhost:${port}',
		logoutError: 'Fehler beim Logout: ${error}',
		logoutFailedTryAgain: 'Logout fehlgeschlagen. Bitte versuchen Sie es sp√§ter erneut.',
		logoutSuccess: 'Logout erfolgreich: ${data}',
		makingGetSourceRequest: 'get_source Anfrage erstellen: ${args}',
		makingListGroupsRequest: 'list_groups Anfrage erstellen',
		makingListSourcesRequest: 'list_sources Anfrage erstellen: ${args}',
		mcpVersion: 'Version:',
		mcpPort: 'Port:',
		mcpStartTime: 'Startzeit:',
		mcpLicense: 'Lizenz:',
		method: 'Methode: ${method}',
		missingArgumentsError: 'Fehlende Argumente: ${args}',
		missingChatParams: 'Fehlende erforderliche Parameter: chatId und/oder question.',
		missingCommandParameter: 'Fehlender Befehlsparameter in der Nachricht.',
		missingConfigError: 'Fehlende .json Konfigurationsvariable: ${key}',
		missingGroupNameAndDesc: 'Fehlende erforderliche Parameter: groupName und Beschreibung.',
		missingGroupNameParam: 'Fehlender erforderlicher Parameter: groupName.',
		missingGroupParameterDelete: 'L√∂schen: Fehlender erforderlicher Parameter: groupName.',
		missingGroupParameterStore: 'Speichern: Fehlender erforderlicher Parameter: groupName.',
		missingNameAndContent: 'Fehlende erforderliche Parameter: Name und Inhalt.',
		missingNameEmailPwd: 'Fehlende erforderliche Parameter: Name, E-Mail oder Passwort.',
		missingParametersError: 'Fehlende Parameter: ${parameters}',
		missingParameterError: 'Fehlender erforderlicher Parameter: ${parameter}.',
		missingTokenAuth: 'Token fehlt',
		missingTokenError: 'Token fehlt. Bitte melden Sie sich an und versuchen Sie es erneut.',
		missingTokenGroups: 'Token fehlt. Gruppen k√∂nnen nicht validiert werden.',
		missingToolName: 'Name der Funktion fehlt',
		missingUriParameter: 'URI-Parameter fehlt.',
		noChatData: 'Keine Daten f√ºr den angegebenen Chat gefunden.',
		noDescriptionProvided: 'Keine Beschreibung angegeben',
		noErrorMessage: 'Keine Fehlermeldung.',
		noServerResponse: 'Keine Antwort vom Server erhalten.',
		passwordEncEnabled: 'Passwortverschl√ºsselung ist aktiviert.',
		passwordIsRequired: 'Passwort ist erforderlich.',
		payload: 'Payload: ${payload}',
		portInUse: 'Portfehler: Port ${PORT} ist bereits in Benutzung.',
		portInvalid: 'Portfehler: PORT muss eine Zahl zwischen 1 und 65535 sein.',
		portValidated: 'PORT erfolgreich validiert: ${port}',
		proxyAuthMissing: 'Proxy-Authentifizierungsdaten fehlen.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Konflikt: usePublic wurde auf false gesetzt, da Gruppen angegeben sind.',
		requestError: 'Anforderungsfehler: ${error}',
		requestSent: 'Anfrage gesendet',
		restrictedGroupsError: "Fehler: Ung√ºltige RESTRICTED_GROUPS Konfiguration. Muss 'true' oder 'false' sein. Aktueller Wert: ${value}",
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS ist aktiviert: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS aktiviert. Verf√ºgbare Gruppen sind eingeschr√§nkt.',
		responseError: 'Antwortfehler: ${error}',
		responseSentSuccess: 'Status: Erfolg',
		serverError: 'Server konnte nicht gestartet werden: ${error}',
		serverListeningOnPort: 'Server h√∂rt auf Port ${port}',
		serverRunning: 'Server l√§uft auf Port ${port}',
		serverShutdownLog: 'Server heruntergefahren',
		serverStartedLog: 'Server gestartet.',
		serverStoppedLog: 'Server gestoppt',
		sendingChatRequest: 'Chat-Anfrage an API senden',
		sourcesRetrieved: 'Quellen abgerufen: ${data}',
		startingServerWithConfig: 'Server wird mit folgender Konfiguration gestartet:',
		sslValidationSet: '${symbol} SSL-Validierung ist eingestellt auf: ${value}',
		socketErrorPrefix: 'Fehler:',
		storeGroupLog: 'Neue Gruppe speichern mit Namen: ${groupName} und Beschreibung: ${description}',
		storeGroupSuccess: 'Gruppe erfolgreich gespeichert: ${data}',
		storegroupError: 'Fehler beim Erstellen der Gruppe: ${error}',
		storeGroupText: 'Gruppe \"${groupName}\" erfolgreich mit ID: ${id} gespeichert.',
		unknownAddress: 'Unbekannte IP',
		unknownCommandError: 'Unbekannter Befehl: ${cmd}',
		unknownError: 'Unbekannter Fehler',
		unknownPort: 'Unbekannter Port',
		unknownTool: 'Unbekanntes Tool: ${toolName}',
		tokenMissing: 'Token fehlt.'
	},
    en: {
        deleteChatsSuccess: "All chat history has been successfully deleted.",
        deleteChatsError: "An error occurred while deleting chat history: ${error}.",
        missingAuthToken: "Authorization token is missing or invalid.",
        deleteChatsUnauthorized: "You are not authorized to delete chat history.",
        deleteChatsServerIssue: "A server error occurred while processing the request.",
        deleteChatsNotAllowed: "Deleting chat history is not allowed for this user.",
        missingChatId: "Chat ID is missing. Please provide a valid chat ID.",
        chatDeleted: "Chat with ID ${chatId} has been successfully deleted.",
        deleteChatError: "An error occurred while deleting chat with ID ${chatId}: ${error}.",
        missingAuthToken: "Authorization token is missing or invalid.",
        deleteChatUnauthorized: "You are not authorized to delete this chat.",
        deleteChatServerIssue: "A server error occurred while processing the request.",
        deleteChatNotAllowed: "Deleting this chat is not allowed.",
		toolDisabledLog: formatMessage(templates.error, { action: 'Function call disabled server-side:', details: '${toolName}' }),
		toolDisabledError: formatMessage(templates.error, { action: 'Function call disabled server-side:', details: '${toolName}' }),
        emailRequiredForReactivate: "An email address is required to reactivate a user.",
        reactivateUserLog: "Starting reactivation process for user: ${UserName}.",
        reactivateUserSuccess: "User reactivated successfully: ${data}.",
        reactivateUserError: "Error reactivating user: ${error}. Please try again later.",
        
        // NEW ***************************************************
        openaicompAPI: 'ENABLE_OPEN_AI_COMP_API value: ${val}',
		createSourceError: 'Error creating source: ${error}',
		create_sourceUnknownError: 'Unknown error creating source: ${error}',
		returnStatus: 'Status: ${Status}',
		extractedToken: 'Extracted Token: ${token}',
		missingChatId: 'chatId is required to retrieve chat information.',
		missingQuestion: 'Missing question in the arguments.',
		ChatInfoRetrieved: 'Chat information retrieved: ${chatData}',
		InvalidGroups: 'Invalid groups: ${GROUPS}',
		sourceIdRequiredEditSource: "sourceId is required to edit a source.",
		sourceIdRequiredRetrieveSource: 'sourceId is required to retrieve a source.',
		ConnectionEstablished: 'Connection established',
		ResponseSuccessfullySent: 'Response successfully sent',
		ConnectionClosed: 'Connection closed',
		ServerStopped: 'Server has been stopped',
		responseReceived: 'Response received with status: ${status}',
		internalServerError: 'Internal Server error',
		tcpServerError: 'An error occurred in the TCP server:',
		unknownErrorOccured: 'An unknown error occurred.',
		KeygenRequired: 'Keygen required',
		unknownCommand: 'Unknown Command',
		socketEmitLogNotActivated: 'Log file is not activated.',
		socketEmitLogReadError: 'Error reading Log file.',
		deletesourceLog: formatMessage(templates.info, { action: 'Delete Source', details: 'with name: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'sourceId is required to delete source.',
		listGroupsSuccess: 'Groups list retrieved: ${GROUPS}',
		//Existing ones
		toolNotDefinedInConfig: formatMessage(templates.error, { action: 'Invalid function call', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: 'RESTRICTED_GROUPS Value', details: '${val}' }),
        allFunctionsEnabled: formatMessage(templates.success, { action: 'All functions are enabled', details: '' }),
        allGroupsValid: formatMessage(templates.success, { action: 'All groups are valid', details: '' }),
        AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: 'is enabled: ${status}' }),
        anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: 'is enabled: ${status}' }),
        apiErrorDetails: formatMessage(templates.error, { action: 'API Error', details: 'Status: ${status}, Data: ${data}' }),
        apiRequestError: formatMessage(templates.error, { action: 'API Request Error', details: '${error}' }),
        apiUrlInvalid: formatMessage(templates.error, { action: 'Invalid API_URL', details: '' }),
        apiUrlValidated: formatMessage(templates.success, { action: 'API_URL successfully validated', details: '${url}' }),
        apiUrlWarning: formatMessage(templates.warning, { action: 'Warning', details: 'API_URL does not start with "https://". The URL is being adjusted.' }),
        apiUrlWarningV1: formatMessage(templates.warning, { action: 'Warning', details: 'API_URL does not end with "/api/v1". The URL is being adjusted.' }),
        authFailed: 'Authentication failed.',
        authStarted: 'Authentication started.',
        availableGroups: formatMessage(templates.success, { action: 'Available Groups', details: '${availableGroups}' }),
        chatApiErrorDefault: 'Error during chat request.',
        chatApiError: formatMessage(templates.error, { action: 'Error in Chat API request', details: '${error}' }),
        chatResponseSuccess: formatMessage(templates.success, { action: 'Chat response received', details: '${data}' }),
        checkingGroups: formatMessage(templates.info, { action: 'Checking groups', details: '${groups}' }),
        clientConnected: formatMessage(templates.info, { action: 'WebSocket client connected', details: '' }),
        clientDisconnected: formatMessage(templates.info, { action: 'WebSocket client disconnected', details: '' }),
        connection: {
            new: formatMessage(templates.info, { action: 'New connection accepted', details: 'from ${ip}:${port}' }),
            established: formatMessage(templates.success, { action: 'Connection established', details: '' }),
            closed: formatMessage(templates.info, { action: 'Connection closed', details: '${ip}:${port}' }),
            dataReceived: formatMessage(templates.info, { action: 'Data received', details: 'from ${ip}:${port}: ${data}' }),
        },
        errors: {
            processMessage: formatMessage(templates.error, { action: 'Error processing message', details: '${error}' }),
            invalidMessage: formatMessage(templates.error, { action: 'Invalid message format', details: '' }),
            socketError: formatMessage(templates.error, { action: 'Socket error', details: 'at ${ip}:${port}: ${error}' }),
            serverError: formatMessage(templates.error, { action: 'Server error', details: '${error}' }),
        },
        server: {
            running: formatMessage(templates.success, { action: 'Server is running', details: 'on port ${port}' }),
            stopped: formatMessage(templates.info, { action: 'Server has been stopped', details: '' }),
        },
        continueConversationError: formatMessage(templates.error, { action: 'Error continuing conversation', details: '' }),
        conversationContinuation: formatMessage(templates.success, { action: 'Conversation is continuing', details: 'ID: ${chatId}' }),
        conversationSuccess: formatMessage(templates.success, { action: 'Conversation successfully continued', details: '${data}' }),
        createGroupSuccess: formatMessage(templates.success, { action: 'Group successfully created', details: '${data}' }),
        createSourceLog: 'Editing source with ID: ${sourceId}, Title: ${title}',
        createSourceSuccess: 'Source successfully created: ${data}',
        createUserError: 'Error creating user: ${error}',
        createUserLog: 'Creating new user: ${payload}',
        createUserSuccess: 'User successfully created: ${data}',
        deactivatedFunctions: 'Deactivated functions:',
        deleteGroupInternalError: 'Internal error deleting group.',
        deleteGroupLog: formatMessage(templates.info, { action: 'Deleting group', details: 'with name: ${groupName}' }),
        deleteGroupSuccessLog: formatMessage(templates.success, { action: 'Group successfully deleted', details: '${data}' }),
        deleteGroupText: 'Group "${groupName}" was successfully deleted.',
        deleteSourceError: 'Error deleting source: ${error}',
        deleteSourceFailedTryAgain: 'Deleting the source failed. Please try again later.',
        deleteUserError: 'Error deleting user: ${error}',
        deleteUserLog: formatMessage(templates.info, { action: 'Deleting user', details: 'with name: ${UserName}' }),
        deleteUserSuccess: 'User successfully deleted: ${data}',
        decryptPwdError: 'The password could not be decrypted.',
        decryptionError: 'Decryption error.',
        dataReceivedMsg: 'Data received: ${data}',
        emailRequiredForDelete: 'Email is required to delete a user.',
        emailRequiredForEdit: 'User email is required to edit the record.',
        editSourceError: 'Error editing source: ${error}',
        editSourceLog: 'Editing source with ID: ${sourceId}, Title: ${title}',
        editSourceSuccess: 'Source successfully edited: ${data}',
        editUserError: 'Error editing user: ${error}',
        editUserSuccess: 'User successfully edited: ${data}',
        encryptPwdError: 'The password could not be encrypted.',
        encryptionDisabled: 'Disabled',
        encryptionEnabled: 'Enabled',
        encryptionError: 'Encryption error.',
        errorHandlingRequest: formatMessage(templates.error, { action: 'Error handling request', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: 'Error processing message:', details: '${error}' }),
        fetchChatInfoError: 'Error fetching chat information: ${error}',
        fetchGroupsError: formatMessage(templates.error, { action: 'Error fetching groups', details: '${error}' }),
        fetchGroupsErrorBackup: 'Error fetching groups.',
        fetchGroupsErrorPrefix: 'Error fetching groups:',
        fetchSourcesError: formatMessage(templates.error, { action: 'Error fetching sources', details: '' }),
        fetchingSources: formatMessage(templates.info, { action: 'Fetching sources for group: ${groupName}', details: '' }),
        fileReadErrorTitle: 'Error reading file.',
        functionDisabled: 'disabled',
        genericServerErrorPrefix: 'Error:',
        gotGetSourceResponse: formatMessage(templates.success, { action: 'Received response for get_source', details: '${data}' }),
        gotListGroupsResponse: formatMessage(templates.success, { action: 'Received response for list_groups', details: '${response}' }),
        gotListSourcesResponse: formatMessage(templates.success, { action: 'Received response for list_sources', details: '${data}' }),
        groupFetchError: 'Error fetching groups: Please try again later.',
        groupNameRequired: 'Group name is required for this request.',
        groupValidationError: 'Error validating group: ${error}',
        groupValidationErrorPrefix: 'Error: ${error}',
        handlingToolRequest: 'Handling tool request: ${tool}',
        headers: 'Headers: ${headers}',
        incomingMessage: 'Incoming message: ${MESSAGE}',
        invalidArgumentsError: 'Error: No valid arguments found in input: ${input}',
        invalidGroups: 'Invalid groups: ${groups}',
        invalidGroupsError: 'Invalid groups: ${invalidGroups}',
        invalidGroupsLog: 'Invalid: ${groups}',
        invalidMessage: 'Invalid message',
        invalidOrEmptyRequest: 'Invalid message or empty request.',
        keygenDisabled: 'Disabled',
        keygenEnabled: 'Enabled',
        keygenErrorPrefix: 'Error with keygen request:',
        keygenSuccess: 'Keygen completed successfully.',
        langNotSupported: 'Language "${lang}" is not supported. Falling back to English.',
        loginEmailPasswordRequired: 'Login failed: Email and password are required.',
        loginError: formatMessage(templates.error, { action: 'Login error', details: '${error}' }),
        loginErrorPrefix: 'Error: ${error}',
        loginMissingCredentials: 'Login failed: Email and password are required.',
        loginMissingCredentialsAlternative: 'Login failed: Email and password are required.',
        loginResponse: 'Login response',
        loginSuccess: formatMessage(templates.success, { action: 'Login successful', details: '${data}' }),
        loginTokenReceived: 'Token received: ${token}',
        LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: 'is enabled: ${status}' }),
        logChangeError: 'Error processing log file changes: ${error}',
        logReadError: 'Error reading log file: ${error}',
        logViewerRunning: 'Log viewer is running at http://localhost:${port}',
        logoutError: 'Error during logout: ${error}',
        logoutFailedTryAgain: 'Logout failed. Please try again later.',
        logoutSuccess: 'Logout successful: ${data}',
        makingGetSourceRequest: 'Creating get_source request: ${args}',
        makingListGroupsRequest: 'Creating list_groups request',
        makingListSourcesRequest: 'Creating list_sources request: ${args}',
        mcpVersion: 'Version:',
        mcpPort: 'Port:',
        mcpStartTime: 'Start time:',
        mcpLicense: 'License:',
        method: 'Method: ${method}',
        missingArgumentsError: 'Missing arguments: ${args}',
        missingChatParams: 'Missing required parameters: chatId and/or question.',
        missingCommandParameter: 'Missing command parameter in the message.',
        missingConfigError: 'Missing .json configuration variable: ${key}',
        missingGroupNameAndDesc: 'Missing required parameters: groupName and description.',
        missingGroupNameParam: 'Missing required parameter: groupName.',
        missingGroupParameterDelete: 'Delete: Missing required parameter: groupName.',
        missingGroupParameterStore: 'Store: Missing required parameter: groupName.',
        missingNameAndContent: 'Missing required parameters: name and content.',
        missingNameEmailPwd: 'Missing required parameters: name, email, or password.',
        missingParametersError: formatMessage(templates.error, { action: 'Missing parameters', details: '${parameters}' }),
        missingParameterError: 'Missing required parameter: ${parameter}.',
        missingTokenAuth: 'Missing token',
        missingTokenError: 'Token missing. Please log in and try again.',
        missingTokenGroups: 'Token missing. Groups cannot be validated.',
        missingToolName: 'Missing tool name',
        missingUriParameter: 'Missing URI parameter.',
        noChatData: 'No data found for the specified chat.',
        noDescriptionProvided: 'No description provided',
        noErrorMessage: 'No error message.',
        noServerResponse: 'No response received from server.',
        passwordEncEnabled: 'Password encryption is enabled.',
        passwordIsRequired: 'Password is required.',
        payload: 'Payload: ${payload}',
        portInUse: 'Port error: Port ${PORT} is already in use.',
        portInvalid: 'Port error: PORT must be a number between 1 and 65535.',
        portValidated: 'PORT successfully validated: ${port}',
        proxyAuthMissing: 'Proxy authentication data missing.',
        proxyUseProxy: 'USE_PROXY: ${val}',
        publicGroupsConflictWarning: 'Conflict: usePublic has been set to false because groups are specified.',
        requestError: 'Request error: ${error}',
        requestSent: 'Request sent',
        restrictedGroupsError: 'Error: Invalid RESTRICTED_GROUPS configuration. Must be \'true\' or \'false\'. Current value: ${value}',
        restrictedGroupsSuccess: 'RESTRICTED_GROUPS is enabled: ${status}',
        restrictedGroupsWarning: 'RESTRICTED_GROUPS enabled. Available groups are restricted.',
        responseError: 'Response error: ${error}',
        // responseReceived: formatMessage(templates.success, { action: 'Response received', details: '${response}' }),
        responseSentSuccess: formatMessage(templates.success, { action: 'Status', details: 'Success' }),
        serverError: formatMessage(templates.error, { action: 'Server could not be started', details: '${error}' }),
        serverListeningOnPort: 'Server listening on port ${port}',
        serverRunning: 'Server is running on port ${port}',
        serverShutdownLog: 'Server shutdown',
        serverStartedLog: 'Server started.',
        serverStoppedLog: 'Server stopped',
        sendingChatRequest: 'Sending chat request to API',
        sourcesRetrieved: formatMessage(templates.success, { action: 'Sources retrieved', details: '${data}' }),
        startingServerWithConfig: 'Starting server with the following configuration:',
        sslValidationSet: '${symbol} SSL validation is set to: ${value}',
        socketErrorPrefix: 'Error:',
        storeGroupLog: 'Storing a new group with name: ${groupName} and description: ${description}',
        storeGroupSuccess: 'Group successfully stored: ${data}',
        storegroupError: 'Error creating group: ${error}',
        storeGroupText: 'Group "${groupName}" successfully stored with ID: ${id}.',
        unknownAddress: 'Unknown IP',
        unknownCommandError: formatMessage(templates.error, { action: 'Unknown command', details: '${cmd}' }),
        unknownError: formatMessage(templates.error, { action: 'Unknown error', details: '' }),
        unknownPort: 'Unknown port',
        unknownTool: 'Unknown tool: ${toolName}',
        tokenMissing: 'Token missing.',
    },
    pt: {
		createSourceError: 'Erro ao criar a fonte: ${error}',
		create_sourceUnknownError: 'Erro desconhecido ao criar a fonte: ${error}',
		returnStatus: 'Status: ${Status}',
		extractedToken: 'Token extra√≠do: ${token}',
		missingChatId: 'chatId √© necess√°rio para recuperar informa√ß√µes do chat.',
		missingQuestion: 'Pergunta ausente nos argumentos.',
		ChatInfoRetrieved: 'Informa√ß√µes do chat recuperadas: ${chatData}',
		InvalidGroups: 'Grupos inv√°lidos: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId √© necess√°rio para editar uma fonte.',
		sourceIdRequiredRetrieveSource: 'sourceId √© necess√°rio para recuperar uma fonte.',
		ConnectionEstablished: 'Conex√£o estabelecida',
		ResponseSuccessfullySent: 'Resposta enviada com sucesso',
		ConnectionClosed: 'Conex√£o fechada',
		ServerStopped: 'Servidor foi parado',
		responseReceived: 'Resposta recebida com status: ${status}',
		internalServerError: 'Erro interno do servidor',
		tcpServerError: 'Ocorreu um erro no servidor TCP:',
		unknownErrorOccured: 'Ocorreu um erro desconhecido.',
		KeygenRequired: 'Keygen necess√°rio',
		unknownCommand: 'Comando desconhecido',
		socketEmitLogNotActivated: 'Arquivo de log n√£o est√° ativado.',
		socketEmitLogReadError: 'Erro ao ler o arquivo de log.',
		deletesourceLog: 'Excluir fonte com nome: ${SourceName}',
		sourceIdRequiredDeleteSource: 'sourceId √© necess√°rio para excluir a fonte.',
		listGroupsSuccess: 'Lista de grupos recuperada: ${GROUPS}',
		toolNotDefinedInConfig: 'Chamada de fun√ß√£o inv√°lida: ${warn}',
		toolDisabledLog: 'Chamada de fun√ß√£o desativada no servidor: ${warn}',
		toolDisabledError: 'Chamada de fun√ß√£o desativada no servidor: ${warn}',
		accessRestrictedGroups: 'Valor de RESTRICTED_GROUPS: ${val}',
		allFunctionsEnabled: 'Todas as fun√ß√µes est√£o habilitadas',
		allGroupsValid: 'Todos os grupos s√£o v√°lidos',
		AllowLoggingSuccess: 'ALLOW_LOGGING est√° habilitado: ${status}',
		anonymousModeSuccess: 'ANONYMOUS_MODE est√° habilitado: ${status}',
		apiErrorDetails: 'Erro na API: Status: ${status}, Dados: ${data}',
		apiRequestError: 'Erro na solicita√ß√£o da API: ${error}',
		apiUrlInvalid: 'API_URL inv√°lida',
		apiUrlValidated: 'API_URL validada com sucesso: ${url}',
		apiUrlWarning: 'Aviso: API_URL n√£o come√ßa com \"https://\". A URL est√° sendo ajustada.',
		apiUrlWarningV1: 'Aviso: API_URL n√£o termina com \"/api/v1\". A URL est√° sendo ajustada.',
		authFailed: 'Autentica√ß√£o falhou.',
		authStarted: 'Autentica√ß√£o iniciada.',
		availableGroups: 'Grupos dispon√≠veis: ${availableGroups}',
		chatApiErrorDefault: 'Erro durante a solicita√ß√£o de chat.',
		chatApiError: 'Erro na solicita√ß√£o da API de chat: ${error}',
		chatResponseSuccess: 'Resposta do chat recebida: ${data}',
		checkingGroups: 'Verificando grupos: ${groups}',
		clientConnected: 'Cliente WebSocket conectado',
		clientDisconnected: 'Cliente WebSocket desconectado',
		connection: {
			new: 'Nova conex√£o aceita de ${ip}:${port}',
			established: 'Conex√£o estabelecida',
			closed: 'Conex√£o fechada: ${ip}:${port}',
			dataReceived: 'Dados recebidos de ${ip}:${port}: ${data}'
		},
		errors: {
			processMessage: 'Erro ao processar mensagem: ${error}',
			invalidMessage: 'Formato de mensagem inv√°lido',
			socketError: 'Erro de socket em ${ip}:${port}: ${error}',
			serverError: 'Erro do servidor: ${error}'
		},
		server: {
			running: 'Servidor est√° rodando na porta ${port}',
			stopped: 'Servidor foi parado'
		},
		continueConversationError: 'Erro ao continuar a conversa.',
		conversationContinuation: 'Conversa est√° continuando, ID: ${chatId}',
		conversationSuccess: 'Conversa continuada com sucesso: ${data}',
		createGroupSuccess: 'Grupo criado com sucesso: ${data}',
		createSourceLog: 'Editar fonte com ID: ${sourceId}, T√≠tulo: ${title}',
		createSourceSuccess: 'Fonte criada com sucesso: ${data}',
		createUserError: 'Erro ao criar usu√°rio: ${error}',
		createUserLog: 'Criando novo usu√°rio: ${payload}',
		createUserSuccess: 'Usu√°rio criado com sucesso: ${data}',
		deactivatedFunctions: 'Fun√ß√µes desativadas:',
		deleteGroupInternalError: 'Erro interno ao excluir o grupo.',
		deleteGroupLog: 'Excluir grupo com nome: ${groupName}',
		deleteGroupSuccessLog: 'Grupo exclu√≠do com sucesso: ${data}',
		deleteGroupText: 'Grupo \"${groupName}\" foi exclu√≠do com sucesso.',
		deleteSourceError: 'Erro ao excluir a fonte: ${error}',
		deleteSourceFailedTryAgain: 'Excluir a fonte falhou. Por favor, tente novamente mais tarde.',
		deleteUserError: 'Erro ao excluir usu√°rio: ${error}',
		deleteUserLog: 'Excluir usu√°rio com nome: ${UserName}',
		deleteUserSuccess: 'Usu√°rio exclu√≠do com sucesso: ${data}',
		decryptPwdError: 'A senha n√£o p√¥de ser descriptografada.',
		decryptionError: 'Erro de descriptografia.',
		dataReceivedMsg: 'Dados recebidos: ${data}',
		emailRequiredForDelete: 'E-mail √© necess√°rio para excluir um usu√°rio.',
		emailRequiredForEdit: 'E-mail do usu√°rio √© necess√°rio para editar o registro.',
		editSourceError: 'Erro ao editar a fonte: ${error}',
		editSourceLog: 'Editar fonte com ID: ${sourceId}, T√≠tulo: ${title}',
		editSourceSuccess: 'Fonte editada com sucesso: ${data}',
		editUserError: 'Erro ao editar usu√°rio: ${error}',
		editUserSuccess: 'Usu√°rio editado com sucesso: ${data}',
		encryptPwdError: 'A senha n√£o p√¥de ser criptografada.',
		encryptionDisabled: 'Desativado',
		encryptionEnabled: 'Ativado',
		encryptionError: 'Erro de criptografia.',
		errorHandlingRequest: 'Erro ao processar a solicita√ß√£o: ${error}',
		errorProcessingMsg: 'Erro ao processar a mensagem: ${error}',
		fetchChatInfoError: 'Erro ao buscar informa√ß√µes do chat: ${error}',
		fetchGroupsError: 'Erro ao buscar grupos: ${error}',
		fetchGroupsErrorBackup: 'Erro ao buscar grupos.',
		fetchGroupsErrorPrefix: 'Erro ao buscar grupos:',
		fetchSourcesError: 'Erro ao buscar fontes.',
		fetchingSources: 'Buscando fontes para o grupo: ${groupName}',
		fileReadErrorTitle: 'Erro ao ler o arquivo.',
		functionDisabled: 'desativado',
		genericServerErrorPrefix: 'Erro:',
		gotGetSourceResponse: 'Resposta para get_source recebida: ${data}',
		gotListGroupsResponse: 'Resposta para list_groups recebida: ${response}',
		gotListSourcesResponse: 'Resposta para list_sources recebida: ${data}',
		groupFetchError: 'Erro ao buscar grupos: Por favor, tente novamente mais tarde.',
		groupNameRequired: 'Nome do grupo √© necess√°rio para esta solicita√ß√£o.',
		groupValidationError: 'Erro ao validar o grupo: ${error}',
		groupValidationErrorPrefix: 'Erro: ${error}',
		handlingToolRequest: 'Processando solicita√ß√£o da ferramenta: ${tool}',
		headers: 'Headers: ${headers}',
		incomingMessage: 'Mensagem recebida: ${MESSAGE}',
		invalidArgumentsError: 'Erro: Nenhum argumento v√°lido encontrado na entrada: ${input}',
		invalidGroups: 'Grupos inv√°lidos: ${groups}',
		invalidGroupsError: 'Grupos inv√°lidos: ${invalidGroups}',
		invalidGroupsLog: 'Inv√°lido: ${groups}',
		invalidMessage: 'Mensagem inv√°lida',
		invalidOrEmptyRequest: 'Mensagem inv√°lida ou solicita√ß√£o vazia.',
		keygenDisabled: 'Desativado',
		keygenEnabled: 'Ativado',
		keygenErrorPrefix: 'Erro na solicita√ß√£o de keygen:',
		keygenSuccess: 'Keygen conclu√≠do com sucesso.',
		langNotSupported: 'Idioma \"${lang}\" n√£o √© suportado. Usando ingl√™s como padr√£o.',
		loginEmailPasswordRequired: 'Falha no login: E-mail e senha s√£o necess√°rios.',
		loginError: 'Erro no login: ${error}',
		loginErrorPrefix: 'Erro: ${error}',
		loginMissingCredentials: 'Falha no login: E-mail e senha s√£o necess√°rios.',
		loginMissingCredentialsAlternative: 'Falha no login: E-mail e senha s√£o necess√°rios.',
		loginResponse: 'Resposta de login',
		loginSuccess: 'Login bem-sucedido: ${data}',
		loginTokenReceived: 'Token recebido: ${token}',
		LogIpsSuccess: 'LOG_IPs est√° habilitado: ${status}',
		logChangeError: 'Erro ao processar altera√ß√µes no arquivo de log: ${error}',
		logReadError: 'Erro ao ler o arquivo de log: ${error}',
		logViewerRunning: 'Visualizador de log est√° rodando em http://localhost:${port}',
		logoutError: 'Erro ao sair: ${error}',
		logoutFailedTryAgain: 'Logout falhou. Por favor, tente novamente mais tarde.',
		logoutSuccess: 'Logout bem-sucedido: ${data}',
		makingGetSourceRequest: 'Criando solicita√ß√£o get_source: ${args}',
		makingListGroupsRequest: 'Criando solicita√ß√£o list_groups',
		makingListSourcesRequest: 'Criando solicita√ß√£o list_sources: ${args}',
		mcpVersion: 'Vers√£o:',
		mcpPort: 'Porta:',
		mcpStartTime: 'Hora de in√≠cio:',
		mcpLicense: 'Licen√ßa:',
		method: 'M√©todo: ${method}',
		missingArgumentsError: 'Faltam argumentos: ${args}',
		missingChatParams: 'Faltam par√¢metros obrigat√≥rios: chatId e/ou question.',
		missingCommandParameter: 'Par√¢metro de comando faltando na mensagem.',
		missingConfigError: 'Vari√°vel de configura√ß√£o .json faltando: ${key}',
		missingGroupNameAndDesc: 'Faltam par√¢metros obrigat√≥rios: groupName e descri√ß√£o.',
		missingGroupNameParam: 'Par√¢metro obrigat√≥rio faltando: groupName.',
		missingGroupParameterDelete: 'Excluir: Par√¢metro obrigat√≥rio faltando: groupName.',
		missingGroupParameterStore: 'Armazenar: Par√¢metro obrigat√≥rio faltando: groupName.',
		missingNameAndContent: 'Faltam par√¢metros obrigat√≥rios: nome e conte√∫do.',
		missingNameEmailPwd: 'Faltam par√¢metros obrigat√≥rios: nome, e-mail ou senha.',
		missingParametersError: 'Faltam par√¢metros: ${parameters}',
		missingParameterError: 'Par√¢metro obrigat√≥rio faltando: ${parameter}.',
		missingTokenAuth: 'Token ausente',
		missingTokenError: 'Token ausente. Por favor, fa√ßa login e tente novamente.',
		missingTokenGroups: 'Token ausente. Grupos n√£o podem ser validados.',
		missingToolName: 'Nome da ferramenta faltando',
		missingUriParameter: 'Par√¢metro URI faltando.',
		noChatData: 'Nenhum dado encontrado para o chat especificado.',
		noDescriptionProvided: 'Nenhuma descri√ß√£o fornecida',
		noErrorMessage: 'Nenhuma mensagem de erro.',
		noServerResponse: 'Nenhuma resposta recebida do servidor.',
		passwordEncEnabled: 'Criptografia de senha est√° habilitada.',
		passwordIsRequired: 'Senha √© necess√°ria.',
		payload: 'Payload: ${payload}',
		portInUse: 'Erro de porta: Porta ${PORT} j√° est√° em uso.',
		portInvalid: 'Erro de porta: PORT deve ser um n√∫mero entre 1 e 65535.',
		portValidated: 'PORT validado com sucesso: ${port}',
		proxyAuthMissing: 'Dados de autentica√ß√£o de proxy ausentes.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Conflito: usePublic foi definido como false porque grupos foram especificados.',
		requestError: 'Erro na solicita√ß√£o: ${error}',
		requestSent: 'Solicita√ß√£o enviada',
		restrictedGroupsError: "Erro: Configura√ß√£o RESTRICTED_GROUPS inv√°lida. Deve ser 'true' ou 'false'. Valor atual: ${value}",
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS est√° habilitado: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS habilitado. Grupos dispon√≠veis est√£o restritos.',
		responseError: 'Erro na resposta: ${error}',
		responseSentSuccess: 'Status: Sucesso',
		serverError: 'Servidor n√£o p√¥de ser iniciado: ${error}',
		serverListeningOnPort: 'Servidor ouvindo na porta ${port}',
		serverRunning: 'Servidor est√° rodando na porta ${port}',
		serverShutdownLog: 'Servidor desligado',
		serverStartedLog: 'Servidor iniciado.',
		serverStoppedLog: 'Servidor parado',
		sendingChatRequest: 'Enviando solicita√ß√£o de chat para API',
		sourcesRetrieved: 'Fontes recuperadas: ${data}',
		startingServerWithConfig: 'Iniciando servidor com a seguinte configura√ß√£o:',
		sslValidationSet: '${symbol} Valida√ß√£o SSL est√° definida para: ${value}',
		socketErrorPrefix: 'Erro:',
		storeGroupLog: 'Armazenando novo grupo com nome: ${groupName} e descri√ß√£o: ${description}',
		storeGroupSuccess: 'Grupo armazenado com sucesso: ${data}',
		storegroupError: 'Erro ao criar grupo: ${error}',
		storeGroupText: 'Grupo \"${groupName}\" armazenado com sucesso com ID: ${id}.',
		unknownAddress: 'IP desconhecido',
		unknownCommandError: 'Comando desconhecido: ${cmd}',
		unknownError: 'Erro desconhecido',
		unknownPort: 'Porta desconhecida',
		unknownTool: 'Ferramenta desconhecida: ${toolName}',
		tokenMissing: 'Token ausente.'
    },
	// Spanish (es)
	es: {
		createSourceError: 'Error al crear la fuente: ${error}',
		create_sourceUnknownError: 'Error desconocido al crear la fuente: ${error}',
		returnStatus: 'Estado: ${Status}',
		extractedToken: 'Token extra√≠do: ${token}',
		missingChatId: 'Se requiere chatId para recuperar la informaci√≥n del chat.',
		missingQuestion: 'Falta la pregunta en los argumentos.',
		ChatInfoRetrieved: 'Informaci√≥n del chat recuperada: ${chatData}',
		InvalidGroups: 'Grupos inv√°lidos: ${GROUPS}',
		sourceIdRequiredEditSource: 'Se requiere sourceId para editar una fuente.',
		sourceIdRequiredRetrieveSource: 'Se requiere sourceId para recuperar una fuente.',
		ConnectionEstablished: 'Conexi√≥n establecida',
		ResponseSuccessfullySent: 'Respuesta enviada con √©xito',
		ConnectionClosed: 'Conexi√≥n cerrada',
		ServerStopped: 'El servidor ha sido detenido',
		responseReceived: 'Respuesta recibida con estado: ${status}',
		internalServerError: 'Error interno del servidor',
		tcpServerError: 'Ocurri√≥ un error en el servidor TCP:',
		unknownErrorOccured: 'Ocurri√≥ un error desconocido.',
		KeygenRequired: 'Se requiere generaci√≥n de clave',
		unknownCommand: 'Comando desconocido',
		socketEmitLogNotActivated: 'El archivo de registro no est√° activado.',
		socketEmitLogReadError: 'Error al leer el archivo de registro.',
		deletesourceLog: formatMessage(templates.info, { action: 'Eliminar Fuente', details: 'con nombre: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'Se requiere sourceId para eliminar la fuente.',
		listGroupsSuccess: 'Lista de grupos recuperada: ${GROUPS}',
		toolNotDefinedInConfig: formatMessage(templates.error, { action: 'Llamada a funci√≥n inv√°lida', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: 'Llamada a funci√≥n deshabilitada en el servidor:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: 'Llamada a funci√≥n deshabilitada en el servidor:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: 'Valor de RESTRICTED_GROUPS', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: 'Todas las funciones est√°n habilitadas', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: 'Todos los grupos son v√°lidos', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: 'est√° habilitado: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: 'est√° habilitado: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: 'Error de API', details: 'Estado: ${status}, Datos: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: 'Error en la solicitud de API', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: 'API_URL inv√°lido', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'API_URL validado con √©xito', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: 'Advertencia', details: 'API_URL no comienza con "https://". La URL est√° siendo ajustada.' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: 'Advertencia', details: 'API_URL no termina con "/api/v1". La URL est√° siendo ajustada.' }),
		authFailed: 'Autenticaci√≥n fallida.',
		authStarted: 'Autenticaci√≥n iniciada.',
		availableGroups: formatMessage(templates.success, { action: 'Grupos disponibles', details: '${availableGroups}' }),
		chatApiErrorDefault: 'Error durante la solicitud de chat.',
		chatApiError: formatMessage(templates.error, { action: 'Error en la solicitud de Chat API', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: 'Respuesta de chat recibida', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: 'Verificando grupos', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: 'Cliente WebSocket conectado', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: 'Cliente WebSocket desconectado', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: 'Nueva conexi√≥n aceptada', details: 'de ${ip}:${port}' }),
			established: formatMessage(templates.success, { action: 'Conexi√≥n establecida', details: '' }),
			closed: formatMessage(templates.info, { action: 'Conexi√≥n cerrada', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: 'Datos recibidos', details: 'de ${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: 'Error al procesar el mensaje', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: 'Formato de mensaje inv√°lido', details: '' }),
			socketError: formatMessage(templates.error, { action: 'Error de socket', details: 'en ${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: 'Error del servidor', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: 'El servidor est√° en funcionamiento', details: 'en el puerto ${port}' }),
			stopped: formatMessage(templates.info, { action: 'El servidor ha sido detenido', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: 'Error al continuar la conversaci√≥n', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: 'La conversaci√≥n contin√∫a', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: 'La conversaci√≥n se ha continuado con √©xito', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: 'Grupo creado con √©xito', details: '${data}' }),
		createSourceLog: 'Editando fuente con ID: ${sourceId}, T√≠tulo: ${title}',
		createSourceSuccess: 'Fuente creada con √©xito: ${data}',
		createUserError: 'Error al crear el usuario: ${error}',
		createUserLog: 'Creando nuevo usuario: ${payload}',
		createUserSuccess: 'Usuario creado con √©xito: ${data}',
		deactivatedFunctions: 'Funciones desactivadas:',
		deleteGroupInternalError: 'Error interno al eliminar el grupo.',
		deleteGroupLog: formatMessage(templates.info, { action: 'Eliminando grupo', details: 'con nombre: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: 'Grupo eliminado con √©xito', details: '${data}' }),
		deleteGroupText: 'El grupo "${groupName}" ha sido eliminado con √©xito.',
		deleteSourceError: 'Error al eliminar la fuente: ${error}',
		deleteSourceFailedTryAgain: 'La eliminaci√≥n de la fuente fall√≥. Por favor, int√©ntelo de nuevo m√°s tarde.',
		deleteUserError: 'Error al eliminar el usuario: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: 'Eliminando usuario', details: 'con nombre: ${UserName}' }),
		deleteUserSuccess: 'Usuario eliminado con √©xito: ${data}',
		decryptPwdError: 'No se pudo descifrar la contrase√±a.',
		decryptionError: 'Error de descifrado.',
		dataReceivedMsg: 'Datos recibidos: ${data}',
		emailRequiredForDelete: 'Se requiere correo electr√≥nico para eliminar un usuario.',
		emailRequiredForEdit: 'Se requiere correo electr√≥nico del usuario para editar el registro.',
		editSourceError: 'Error al editar la fuente: ${error}',
		editSourceLog: 'Editando fuente con ID: ${sourceId}, T√≠tulo: ${title}',
		editSourceSuccess: 'Fuente editada con √©xito: ${data}',
		editUserError: 'Error al editar el usuario: ${error}',
		editUserSuccess: 'Usuario editado con √©xito: ${data}',
		encryptPwdError: 'No se pudo cifrar la contrase√±a.',
		encryptionDisabled: 'Deshabilitado',
		encryptionEnabled: 'Habilitado',
		encryptionError: 'Error de cifrado.',
		errorHandlingRequest: formatMessage(templates.error, { action: 'Error al manejar la solicitud', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: 'Error al procesar el mensaje:', details: '${error}' }),
		fetchChatInfoError: 'Error al obtener la informaci√≥n del chat: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: 'Error al obtener los grupos', details: '${error}' }),
		fetchGroupsErrorBackup: 'Error al obtener los grupos.',
		fetchGroupsErrorPrefix: 'Error al obtener los grupos:',
		fetchSourcesError: formatMessage(templates.error, { action: 'Error al obtener las fuentes', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: 'Obteniendo fuentes para el grupo: ${groupName}', details: '' }),
		fileReadErrorTitle: 'Error al leer el archivo.',
		functionDisabled: 'deshabilitado',
		genericServerErrorPrefix: 'Error:',
		gotGetSourceResponse: formatMessage(templates.success, { action: 'Respuesta de get_source recibida', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: 'Respuesta de list_groups recibida', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: 'Respuesta de list_sources recibida', details: '${data}' }),
		groupFetchError: 'Error al obtener los grupos: Por favor, int√©ntelo de nuevo m√°s tarde.',
		groupNameRequired: 'Se requiere el nombre del grupo para esta solicitud.',
		groupValidationError: 'Error al validar el grupo: ${error}',
		groupValidationErrorPrefix: 'Error: ${error}',
		handlingToolRequest: 'Manejando solicitud de herramienta: ${tool}',
		headers: 'Encabezados: ${headers}',
		incomingMessage: 'Mensaje entrante: ${MESSAGE}',
		invalidArgumentsError: 'Error: No se encontraron argumentos v√°lidos en la entrada: ${input}',
		invalidGroups: 'Grupos inv√°lidos: ${groups}',
		invalidGroupsError: 'Grupos inv√°lidos: ${invalidGroups}',
		invalidGroupsLog: 'Inv√°lidos: ${groups}',
		invalidMessage: 'Mensaje inv√°lido',
		invalidOrEmptyRequest: 'Mensaje inv√°lido o solicitud vac√≠a.',
		keygenDisabled: 'Deshabilitado',
		keygenEnabled: 'Habilitado',
		keygenErrorPrefix: 'Error con la solicitud de generaci√≥n de clave:',
		keygenSuccess: 'Generaci√≥n de clave completada con √©xito.',
		langNotSupported: 'El idioma "${lang}" no es compatible. Volviendo a ingl√©s.',
		loginEmailPasswordRequired: 'Inicio de sesi√≥n fallido: Se requieren correo electr√≥nico y contrase√±a.',
		loginError: formatMessage(templates.error, { action: 'Error de inicio de sesi√≥n', details: '${error}' }),
		loginErrorPrefix: 'Error: ${error}',
		loginMissingCredentials: 'Inicio de sesi√≥n fallido: Se requieren correo electr√≥nico y contrase√±a.',
		loginMissingCredentialsAlternative: 'Inicio de sesi√≥n fallido: Se requieren correo electr√≥nico y contrase√±a.',
		loginResponse: 'Respuesta de inicio de sesi√≥n',
		loginSuccess: formatMessage(templates.success, { action: 'Inicio de sesi√≥n exitoso', details: '${data}' }),
		loginTokenReceived: 'Token recibido: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: 'est√° habilitado: ${status}' }),
		logChangeError: 'Error al procesar cambios en el archivo de registro: ${error}',
		logReadError: 'Error al leer el archivo de registro: ${error}',
		logViewerRunning: 'El visor de registros est√° funcionando en http://localhost:${port}',
		logoutError: 'Error al cerrar sesi√≥n: ${error}',
		logoutFailedTryAgain: 'El cierre de sesi√≥n fall√≥. Por favor, int√©ntelo de nuevo m√°s tarde.',
		logoutSuccess: 'Cierre de sesi√≥n exitoso: ${data}',
		makingGetSourceRequest: 'Creando solicitud get_source: ${args}',
		makingListGroupsRequest: 'Creando solicitud list_groups',
		makingListSourcesRequest: 'Creando solicitud list_sources: ${args}',
		mcpVersion: 'Versi√≥n:',
		mcpPort: 'Puerto:',
		mcpStartTime: 'Hora de inicio:',
		mcpLicense: 'Licencia:',
		method: 'M√©todo: ${method}',
		missingArgumentsError: 'Faltan argumentos: ${args}',
		missingChatParams: 'Faltan par√°metros requeridos: chatId y/o pregunta.',
		missingCommandParameter: 'Falta el par√°metro de comando en el mensaje.',
		missingConfigError: 'Falta la variable de configuraci√≥n .json: ${key}',
		missingGroupNameAndDesc: 'Faltan par√°metros requeridos: nombre del grupo y descripci√≥n.',
		missingGroupNameParam: 'Falta el par√°metro requerido: nombre del grupo.',
		missingGroupParameterDelete: 'Eliminar: Falta el par√°metro requerido: nombre del grupo.',
		missingGroupParameterStore: 'Almacenar: Falta el par√°metro requerido: nombre del grupo.',
		missingNameAndContent: 'Faltan par√°metros requeridos: nombre y contenido.',
		missingNameEmailPwd: 'Faltan par√°metros requeridos: nombre, correo electr√≥nico o contrase√±a.',
		missingParametersError: formatMessage(templates.error, { action: 'Par√°metros faltantes', details: '${parameters}' }),
		missingParameterError: 'Falta el par√°metro requerido: ${parameter}.',
		missingTokenAuth: 'Falta el token',
		missingTokenError: 'Token faltante. Por favor, inicie sesi√≥n e int√©ntelo de nuevo.',
		missingTokenGroups: 'Token faltante. No se pueden validar los grupos.',
		missingToolName: 'Falta el nombre de la herramienta',
		missingUriParameter: 'Falta el par√°metro URI.',
		noChatData: 'No se encontraron datos para el chat especificado.',
		noDescriptionProvided: 'No se proporcion√≥ descripci√≥n',
		noErrorMessage: 'No hay mensaje de error.',
		noServerResponse: 'No se recibi√≥ respuesta del servidor.',
		passwordEncEnabled: 'El cifrado de la contrase√±a est√° habilitado.',
		passwordIsRequired: 'Se requiere contrase√±a.',
		payload: 'Carga √∫til: ${payload}',
		portInUse: 'Error de puerto: El puerto ${PORT} ya est√° en uso.',
		portInvalid: 'Error de puerto: PORT debe ser un n√∫mero entre 1 y 65535.',
		portValidated: 'PORT validado con √©xito: ${port}',
		proxyAuthMissing: 'Faltan datos de autenticaci√≥n del proxy.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Conflicto: usePublic se ha establecido en falso porque se especificaron grupos.',
		requestError: 'Error de solicitud: ${error}',
		requestSent: 'Solicitud enviada',
		restrictedGroupsError: 'Error: Configuraci√≥n de RESTRICTED_GROUPS inv√°lida. Debe ser \'true\' o \'false\'. Valor actual: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS est√° habilitado: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS est√° habilitado. Los grupos disponibles est√°n restringidos.',
		responseError: 'Error en la respuesta: ${error}',
		responseSentSuccess: formatMessage(templates.success, { action: 'Estado', details: '√âxito' }),
		serverError: formatMessage(templates.error, { action: 'No se pudo iniciar el servidor', details: '${error}' }),
		serverListeningOnPort: 'Servidor escuchando en el puerto ${port}',
		serverRunning: 'El servidor est√° funcionando en el puerto ${port}',
		serverShutdownLog: 'Servidor apagado',
		serverStartedLog: 'Servidor iniciado.',
		serverStoppedLog: 'Servidor detenido',
		sendingChatRequest: 'Enviando solicitud de chat a API',
		sourcesRetrieved: formatMessage(templates.success, { action: 'Fuentes recuperadas', details: '${data}' }),
		startingServerWithConfig: 'Iniciando el servidor con la siguiente configuraci√≥n:',
		sslValidationSet: '${symbol} La validaci√≥n SSL est√° establecida en: ${value}',
		socketErrorPrefix: 'Error:',
		storeGroupLog: 'Almacenando un nuevo grupo con nombre: ${groupName} y descripci√≥n: ${description}',
		storeGroupSuccess: 'Grupo almacenado con √©xito: ${data}',
		storegroupError: 'Error al crear el grupo: ${error}',
		storeGroupText: 'El grupo "${groupName}" ha sido almacenado con √©xito con ID: ${id}.',
		unknownAddress: 'IP desconocida',
		unknownCommandError: formatMessage(templates.error, { action: 'Comando desconocido', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: 'Error desconocido', details: '' }),
		unknownPort: 'Puerto desconocido',
		unknownTool: 'Herramienta desconocida: ${toolName}',
		tokenMissing: 'Token faltante.',
	},
    nl: {
		createSourceError: 'Fout bij het aanmaken van bron: ${error}',
		create_sourceUnknownError: 'Onbekende fout bij het aanmaken van bron: ${error}',
		returnStatus: 'Status: ${Status}',
		extractedToken: 'Extracted Token: ${token}',
		missingChatId: 'chatId is vereist om chatinformatie op te halen.',
		missingQuestion: 'Vraag ontbreekt in de argumenten.',
		ChatInfoRetrieved: 'Chatinformatie opgehaald: ${chatData}',
		InvalidGroups: 'Ongeldige groepen: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId is vereist om een bron te bewerken.',
		sourceIdRequiredRetrieveSource: 'sourceId is vereist om een bron op te halen.',
		ConnectionEstablished: 'Verbinding tot stand gebracht',
		ResponseSuccessfullySent: 'Antwoord succesvol verzonden',
		ConnectionClosed: 'Verbinding gesloten',
		ServerStopped: 'Server is gestopt',
		responseReceived: 'Antwoord ontvangen met status: ${status}',
		internalServerError: 'Interne serverfout',
		tcpServerError: 'Er is een fout opgetreden in de TCP-server:',
		unknownErrorOccured: 'Er is een onbekende fout opgetreden.',
		KeygenRequired: 'Keygen vereist',
		unknownCommand: 'Onbekend commando',
		socketEmitLogNotActivated: 'Logbestand is niet geactiveerd.',
		socketEmitLogReadError: 'Fout bij het lezen van logbestand.',
		deletesourceLog: 'Bron verwijderen: met naam: ${SourceName}',
		sourceIdRequiredDeleteSource: 'sourceId is vereist om bron te verwijderen.',
		listGroupsSuccess: 'Groepenlijst opgehaald: ${GROUPS}',
		// Existing ones
		toolNotDefinedInConfig: 'Ongeldige functiebaanroep: ${warn}',
		toolDisabledLog: 'Functieaanroep uitgeschakeld aan serverzijde: ${warn}',
		toolDisabledError: 'Functieaanroep uitgeschakeld aan serverzijde: ${warn}',
		accessRestrictedGroups: 'RESTRICTED_GROUPS Waarde: ${val}',
		allFunctionsEnabled: 'Alle functies zijn ingeschakeld',
		allGroupsValid: 'Alle groepen zijn geldig',
		AllowLoggingSuccess: 'ALLOW_LOGGING is ingeschakeld: ${status}',
		anonymousModeSuccess: 'ANONYMOUS_MODE is ingeschakeld: ${status}',
		apiErrorDetails: 'API-fout: Status: ${status}, Data: ${data}',
		apiRequestError: 'API-aanvraagfout: ${error}',
		apiUrlInvalid: 'Ongeldige API_URL',
		apiUrlValidated: 'API_URL succesvol gevalideerd: ${url}',
		apiUrlWarning: 'Waarschuwing: API_URL begint niet met "https://". De URL wordt aangepast.',
		apiUrlWarningV1: 'Waarschuwing: API_URL eindigt niet met "/api/v1". De URL wordt aangepast.',
		authFailed: 'Authenticatie mislukt.',
		authStarted: 'Authenticatie gestart.',
		availableGroups: 'Beschikbare groepen: ${availableGroups}',
		chatApiErrorDefault: 'Fout tijdens chatverzoek.',
		chatApiError: 'Fout in Chat API-aanvraag: ${error}',
		chatResponseSuccess: 'Chatantwoord ontvangen: ${data}',
		checkingGroups: 'Groepen controleren: ${groups}',
		clientConnected: 'WebSocket-client verbonden',
		clientDisconnected: 'WebSocket-client verbroken',
		connection: {
			new: 'Nieuwe verbinding geaccepteerd van ${ip}:${port}',
			established: 'Verbinding tot stand gebracht',
			closed: 'Verbinding gesloten ${ip}:${port}',
			dataReceived: 'Gegevens ontvangen van ${ip}:${port}: ${data}',
		},
		errors: {
			processMessage: 'Fout bij verwerken van bericht: ${error}',
			invalidMessage: 'Ongeldig berichtformaat',
			socketError: 'Socketfout bij ${ip}:${port}: ${error}',
			serverError: 'Serverfout: ${error}',
		},
		server: {
			running: 'Server draait op poort ${port}',
			stopped: 'Server is gestopt',
		},
		continueConversationError: 'Fout bij het voortzetten van gesprek',
		conversationContinuation: 'Gesprek wordt voortgezet ID: ${chatId}',
		conversationSuccess: 'Gesprek succesvol voortgezet: ${data}',
		createGroupSuccess: 'Groep succesvol aangemaakt: ${data}',
		createSourceLog: 'Bron bewerken met ID: ${sourceId}, Titel: ${title}',
		createSourceSuccess: 'Bron succesvol aangemaakt: ${data}',
		createUserError: 'Fout bij aanmaken gebruiker: ${error}',
		createUserLog: 'Nieuwe gebruiker aanmaken: ${payload}',
		createUserSuccess: 'Gebruiker succesvol aangemaakt: ${data}',
		deactivatedFunctions: 'Gedeactiveerde functies:',
		deleteGroupInternalError: 'Interne fout bij het verwijderen van groep.',
		deleteGroupLog: 'Groep verwijderen met naam: ${groupName}',
		deleteGroupSuccessLog: 'Groep succesvol verwijderd: ${data}',
		deleteGroupText: 'Groep "${groupName}" is succesvol verwijderd.',
		deleteSourceError: 'Fout bij verwijderen van bron: ${error}',
		deleteSourceFailedTryAgain: 'Verwijderen van bron mislukt. Probeer het later opnieuw.',
		deleteUserError: 'Fout bij verwijderen van gebruiker: ${error}',
		deleteUserLog: 'Gebruiker verwijderen met naam: ${UserName}',
		deleteUserSuccess: 'Gebruiker succesvol verwijderd: ${data}',
		decryptPwdError: 'Het wachtwoord kon niet worden gedecrypteerd.',
		decryptionError: 'Decryptiefout.',
		dataReceivedMsg: 'Gegevens ontvangen: ${data}',
		emailRequiredForDelete: 'E-mail is vereist om een gebruiker te verwijderen.',
		emailRequiredForEdit: 'Gebruikers-e-mail is vereist om het record te bewerken.',
		editSourceError: 'Fout bij bewerken van bron: ${error}',
		editSourceLog: 'Bron bewerken met ID: ${sourceId}, Titel: ${title}',
		editSourceSuccess: 'Bron succesvol bewerkt: ${data}',
		editUserError: 'Fout bij bewerken van gebruiker: ${error}',
		editUserSuccess: 'Gebruiker succesvol bewerkt: ${data}',
		encryptPwdError: 'Het wachtwoord kon niet worden versleuteld.',
		encryptionDisabled: 'Uitgeschakeld',
		encryptionEnabled: 'Ingeschakeld',
		encryptionError: 'Encryptiefout.',
		errorHandlingRequest: 'Fout bij afhandelen van verzoek: ${error}',
		errorProcessingMsg: 'Fout bij verwerken van bericht: ${error}',
		fetchChatInfoError: 'Fout bij ophalen van chatinformatie: ${error}',
		fetchGroupsError: 'Fout bij ophalen van groepen: ${error}',
		fetchGroupsErrorBackup: 'Fout bij ophalen van groepen.',
		fetchGroupsErrorPrefix: 'Fout bij ophalen van groepen:',
		fetchSourcesError: 'Fout bij ophalen van bronnen:',
		fetchingSources: 'Bronnen ophalen voor groep: ${groupName}',
		fileReadErrorTitle: 'Fout bij lezen van bestand.',
		functionDisabled: 'uitgeschakeld',
		genericServerErrorPrefix: 'Fout:',
		gotGetSourceResponse: 'Antwoord ontvangen voor get_source: ${data}',
		gotListGroupsResponse: 'Antwoord ontvangen voor list_groups: ${response}',
		gotListSourcesResponse: 'Antwoord ontvangen voor list_sources: ${data}',
		groupFetchError: 'Fout bij ophalen van groepen: Probeer het later opnieuw.',
		groupNameRequired: 'Groepsnaam is vereist voor dit verzoek.',
		groupValidationError: 'Fout bij valideren van groep: ${error}',
		groupValidationErrorPrefix: 'Fout: ${error}',
		handlingToolRequest: 'Toolverzoek afhandelen: ${tool}',
		headers: 'Headers: ${headers}',
		incomingMessage: 'Binnenkomend bericht: ${MESSAGE}',
		invalidArgumentsError: 'Fout: Geen geldige argumenten gevonden in invoer: ${input}',
		invalidGroups: 'Ongeldige groepen: ${groups}',
		invalidGroupsError: 'Ongeldige groepen: ${invalidGroups}',
		invalidGroupsLog: 'Ongeldig: ${groups}',
		invalidMessage: 'Ongeldig bericht',
		invalidOrEmptyRequest: 'Ongeldig bericht of leeg verzoek.',
		keygenDisabled: 'Uitgeschakeld',
		keygenEnabled: 'Ingeschakeld',
		keygenErrorPrefix: 'Fout met keygen-aanvraag:',
		keygenSuccess: 'Keygen succesvol voltooid.',
		langNotSupported: 'Taal "${lang}" wordt niet ondersteund. Terugval naar Engels.',
		loginEmailPasswordRequired: 'Inloggen mislukt: E-mail en wachtwoord zijn vereist.',
		loginError: 'Loginfout: ${error}',
		loginErrorPrefix: 'Fout: ${error}',
		loginMissingCredentials: 'Inloggen mislukt: E-mail en wachtwoord zijn vereist.',
		loginMissingCredentialsAlternative: 'Inloggen mislukt: E-mail en wachtwoord zijn vereist.',
		loginResponse: 'Loginrespons',
		loginSuccess: 'Inloggen succesvol: ${data}',
		loginTokenReceived: 'Token ontvangen: ${token}',
		LogIpsSuccess: 'LOG_IPs is ingeschakeld: ${status}',
		logChangeError: 'Fout bij verwerken van logbestandwijzigingen: ${error}',
		logReadError: 'Fout bij lezen van logbestand: ${error}',
		logViewerRunning: 'Logviewer draait op http://localhost:${port}',
		logoutError: 'Fout tijdens uitloggen: ${error}',
		logoutFailedTryAgain: 'Uitloggen mislukt. Probeer het later opnieuw.',
		logoutSuccess: 'Uitloggen succesvol: ${data}',
		makingGetSourceRequest: 'get_source-aanvraag aanmaken: ${args}',
		makingListGroupsRequest: 'list_groups-aanvraag aanmaken',
		makingListSourcesRequest: 'list_sources-aanvraag aanmaken: ${args}',
		mcpVersion: 'Versie:',
		mcpPort: 'Poort:',
		mcpStartTime: 'Starttijd:',
		mcpLicense: 'Licentie:',
		method: 'Methode: ${method}',
		missingArgumentsError: 'Ontbrekende argumenten: ${args}',
		missingChatParams: 'Ontbrekende vereiste parameters: chatId en/of vraag.',
		missingCommandParameter: 'Ontbrekende commando-parameter in het bericht.',
		missingConfigError: 'Ontbrekende .json-configuratievariabele: ${key}',
		missingGroupNameAndDesc: 'Ontbrekende vereiste parameters: groupName en beschrijving.',
		missingGroupNameParam: 'Ontbrekende vereiste parameter: groupName.',
		missingGroupParameterDelete: 'Verwijderen: Ontbrekende vereiste parameter: groupName.',
		missingGroupParameterStore: 'Opslaan: Ontbrekende vereiste parameter: groupName.',
		missingNameAndContent: 'Ontbrekende vereiste parameters: naam en inhoud.',
		missingNameEmailPwd: 'Ontbrekende vereiste parameters: naam, e-mail of wachtwoord.',
		missingParametersError: 'Ontbrekende parameters: ${parameters}',
		missingParameterError: 'Ontbrekende vereiste parameter: ${parameter}.',
		missingTokenAuth: 'Token ontbreekt',
		missingTokenError: 'Token ontbreekt. Log in en probeer het opnieuw.',
		missingTokenGroups: 'Token ontbreekt. Groepen kunnen niet worden gevalideerd.',
		missingToolName: 'Functienaam ontbreekt',
		missingUriParameter: 'URI-parameter ontbreekt.',
		noChatData: 'Geen gegevens gevonden voor de opgegeven chat.',
		noDescriptionProvided: 'Geen beschrijving opgegeven',
		noErrorMessage: 'Geen foutmelding.',
		noServerResponse: 'Geen antwoord ontvangen van server.',
		passwordEncEnabled: 'Wachtwoordversleuteling is ingeschakeld.',
		passwordIsRequired: 'Wachtwoord is vereist.',
		payload: 'Payload: ${payload}',
		portInUse: 'Poortfout: Poort ${PORT} is al in gebruik.',
		portInvalid: 'Poortfout: PORT moet een nummer zijn tussen 1 en 65535.',
		portValidated: 'PORT succesvol gevalideerd: ${port}',
		proxyAuthMissing: 'Proxy-authenticatiegegevens ontbreken.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Conflict: usePublic is ingesteld op false omdat groepen zijn opgegeven.',
		requestError: 'Verzoekfout: ${error}',
		requestSent: 'Verzoek verzonden',
		restrictedGroupsError: 'Fout: Ongeldige RESTRICTED_GROUPS-configuratie. Moet \'true\' of \'false\' zijn. Huidige waarde: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS is ingeschakeld: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS ingeschakeld. Beschikbare groepen zijn beperkt.',
		responseError: 'Antwoordfout: ${error}',
		responseSentSuccess: 'Status: Succes',
		serverError: 'Server kon niet worden gestart: ${error}',
		serverListeningOnPort: 'Server luistert op poort ${port}',
		serverRunning: 'Server draait op poort ${port}',
		serverShutdownLog: 'Server uitgeschakeld',
		serverStartedLog: 'Server gestart.',
		serverStoppedLog: 'Server gestopt',
		sendingChatRequest: 'Chatverzoek verzenden naar API',
		sourcesRetrieved: 'Bronnen opgehaald: ${data}',
		startingServerWithConfig: 'Server starten met de volgende configuratie:',
		sslValidationSet: '${symbol} SSL-validatie is ingesteld op: ${value}',
		socketErrorPrefix: 'Fout:',
		storeGroupLog: 'Nieuwe groep opslaan met naam: ${groupName} en beschrijving: ${description}',
		storeGroupSuccess: 'Groep succesvol opgeslagen: ${data}',
		storegroupError: 'Fout bij aanmaken van groep: ${error}',
		storeGroupText: 'Groep "${groupName}" succesvol opgeslagen met ID: ${id}.',
		unknownAddress: 'Onbekend IP',
		unknownCommandError: 'Onbekend commando: ${cmd}',
		unknownError: 'Onbekende fout',
		unknownPort: 'Onbekende poort',
		unknownTool: 'Onbekend hulpmiddel: ${toolName}',
		tokenMissing: 'Token ontbreekt.',
	},
    fi: {
		createSourceError: 'Virhe l√§hteen luomisessa: ${error}',
		create_sourceUnknownError: 'Tuntematon virhe l√§hteen luomisessa: ${error}',
		returnStatus: 'Tila: ${Status}',
		extractedToken: 'Poistettu tunnus: ${token}',
		missingChatId: 'chatId tarvitaan keskustelutietojen hakemiseen.',
		missingQuestion: 'Kysymys puuttuu argumenteista.',
		ChatInfoRetrieved: 'Keskustelutiedot haettu: ${chatData}',
		InvalidGroups: 'Virheelliset ryhm√§t: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId tarvitaan l√§hteen muokkaamiseen.',
		sourceIdRequiredRetrieveSource: 'sourceId tarvitaan l√§hteen hakemiseen.',
		ConnectionEstablished: 'Yhteys muodostettu',
		ResponseSuccessfullySent: 'Vastaus l√§hetetty onnistuneesti',
		ConnectionClosed: 'Yhteys suljettu',
		ServerStopped: 'Palvelin on pys√§ytetty',
		responseReceived: 'Vastaus vastaanotettu tilalla: ${status}',
		internalServerError: 'Sis√§inen palvelinvirhe',
		tcpServerError: 'TCP-palvelimessa tapahtui virhe:',
		unknownErrorOccured: 'Tuntematon virhe tapahtui.',
		KeygenRequired: 'Avaingeneraattori vaaditaan',
		unknownCommand: 'Tuntematon komento',
		socketEmitLogNotActivated: 'Lokitiedosto ei ole aktivoitu.',
		socketEmitLogReadError: 'Virhe luettaessa lokitiedostoa.',
		deletesourceLog: 'L√§hteen poisto: nimi: ${SourceName}',
		sourceIdRequiredDeleteSource: 'sourceId tarvitaan l√§hteen poistamiseen.',
		listGroupsSuccess: 'Ryhm√§lista haettu: ${GROUPS}',
		// Existing ones
		toolNotDefinedInConfig: 'Virheellinen toiminnon kutsu: ${warn}',
		toolDisabledLog: 'Toiminnon kutsu estetty palvelimen puolella: ${warn}',
		toolDisabledError: 'Toiminnon kutsu estetty palvelimen puolella: ${warn}',
		accessRestrictedGroups: 'RESTRICTED_GROUPS arvo: ${val}',
		allFunctionsEnabled: 'Kaikki toiminnot ovat k√§yt√∂ss√§',
		allGroupsValid: 'Kaikki ryhm√§t ovat kelvollisia',
		AllowLoggingSuccess: 'ALLOW_LOGGING on k√§yt√∂ss√§: ${status}',
		anonymousModeSuccess: 'ANONYMOUS_MODE on k√§yt√∂ss√§: ${status}',
		apiErrorDetails: 'API-virhe: Tila: ${status}, Tiedot: ${data}',
		apiRequestError: 'API-pyynn√∂n virhe: ${error}',
		apiUrlInvalid: 'Virheellinen API_URL',
		apiUrlValidated: 'API_URL validoitu onnistuneesti: ${url}',
		apiUrlWarning: 'Varoitus: API_URL ei ala "https://". URL mukautetaan.',
		apiUrlWarningV1: 'Varoitus: API_URL ei p√§√§ty "/api/v1". URL mukautetaan.',
		authFailed: 'Autentikointi ep√§onnistui.',
		authStarted: 'Autentikointi aloitettu.',
		availableGroups: 'Saatavilla olevat ryhm√§t: ${availableGroups}',
		chatApiErrorDefault: 'Virhe keskustelupyynn√∂ss√§.',
		chatApiError: 'Virhe Chat API -pyynn√∂ss√§: ${error}',
		chatResponseSuccess: 'Keskusteluvastaus vastaanotettu: ${data}',
		checkingGroups: 'Ryhmien tarkistus: ${groups}',
		clientConnected: 'WebSocket-asiakas yhdistetty',
		clientDisconnected: 'WebSocket-asiakas katkaistu',
		connection: {
			new: 'Uusi yhteys hyv√§ksytty: ${ip}:${port}',
			established: 'Yhteys muodostettu',
			closed: 'Yhteys suljettu ${ip}:${port}',
			dataReceived: 'Data vastaanotettu ${ip}:${port}: ${data}',
		},
		errors: {
			processMessage: 'Virhe viestin k√§sittelyss√§: ${error}',
			invalidMessage: 'Virheellinen viestimuoto',
			socketError: 'Socket-virhe osoitteessa ${ip}:${port}: ${error}',
			serverError: 'Palvelinvirhe: ${error}',
		},
		server: {
			running: 'Palvelin toimii portissa ${port}',
			stopped: 'Palvelin on pys√§ytetty',
		},
		continueConversationError: 'Virhe keskustelun jatkamisessa',
		conversationContinuation: 'Keskustelu jatkuu ID: ${chatId}',
		conversationSuccess: 'Keskustelu jatkettu onnistuneesti: ${data}',
		createGroupSuccess: 'Ryhm√§ luotu onnistuneesti: ${data}',
		createSourceLog: 'L√§hteen muokkaus ID: ${sourceId}, Otsikko: ${title}',
		createSourceSuccess: 'L√§hde luotu onnistuneesti: ${data}',
		createUserError: 'Virhe k√§ytt√§j√§n luomisessa: ${error}',
		createUserLog: 'Uuden k√§ytt√§j√§n luominen: ${payload}',
		createUserSuccess: 'K√§ytt√§j√§ luotu onnistuneesti: ${data}',
		deactivatedFunctions: 'Pois k√§yt√∂st√§ olevat toiminnot:',
		deleteGroupInternalError: 'Sis√§inen virhe ryhm√§n poistossa.',
		deleteGroupLog: 'Ryhm√§n poistaminen nimell√§: ${groupName}',
		deleteGroupSuccessLog: 'Ryhm√§n poistaminen onnistui: ${data}',
		deleteGroupText: 'Ryhm√§ "${groupName}" poistettu onnistuneesti.',
		deleteSourceError: 'Virhe l√§hteen poistossa: ${error}',
		deleteSourceFailedTryAgain: 'L√§hteen poistaminen ep√§onnistui. Yrit√§ uudelleen my√∂hemmin.',
		deleteUserError: 'Virhe k√§ytt√§j√§n poistossa: ${error}',
		deleteUserLog: 'K√§ytt√§j√§n poistaminen nimell√§: ${UserName}',
		deleteUserSuccess: 'K√§ytt√§j√§ poistettu onnistuneesti: ${data}',
		decryptPwdError: 'Salasana ei voitu purkaa.',
		decryptionError: 'Purkamisvirhe.',
		dataReceivedMsg: 'Data vastaanotettu: ${data}',
		emailRequiredForDelete: 'S√§hk√∂posti tarvitaan k√§ytt√§j√§n poistamiseen.',
		emailRequiredForEdit: 'K√§ytt√§j√§n s√§hk√∂posti tarvitaan tietueen muokkaamiseen.',
		editSourceError: 'Virhe l√§hteen muokkauksessa: ${error}',
		editSourceLog: 'L√§hteen muokkaus ID: ${sourceId}, Otsikko: ${title}',
		editSourceSuccess: 'L√§hde muokattu onnistuneesti: ${data}',
		editUserError: 'Virhe k√§ytt√§j√§n muokkauksessa: ${error}',
		editUserSuccess: 'K√§ytt√§j√§ muokattu onnistuneesti: ${data}',
		encryptPwdError: 'Salasanaa ei voitu salata.',
		encryptionDisabled: 'Pois k√§yt√∂st√§',
		encryptionEnabled: 'K√§yt√∂ss√§',
		encryptionError: 'Salauksen virhe.',
		errorHandlingRequest: 'Virhe pyynn√∂n k√§sittelyss√§: ${error}',
		errorProcessingMsg: 'Virhe viestin k√§sittelyss√§: ${error}',
		fetchChatInfoError: 'Virhe keskustelutietojen hakemisessa: ${error}',
		fetchGroupsError: 'Virhe ryhmien hakemisessa: ${error}',
		fetchGroupsErrorBackup: 'Virhe ryhmien hakemisessa.',
		fetchGroupsErrorPrefix: 'Virhe ryhmien hakemisessa:',
		fetchSourcesError: 'Virhe l√§hteiden hakemisessa:',
		fetchingSources: 'Haetaan l√§hteit√§ ryhm√§lle: ${groupName}',
		fileReadErrorTitle: 'Virhe tiedoston lukemisessa.',
		functionDisabled: 'pois k√§yt√∂st√§',
		genericServerErrorPrefix: 'Virhe:',
		gotGetSourceResponse: 'Vastaus vastaanotettu get_source: ${data}',
		gotListGroupsResponse: 'Vastaus vastaanotettu list_groups: ${response}',
		gotListSourcesResponse: 'Vastaus vastaanotettu list_sources: ${data}',
		groupFetchError: 'Virhe ryhmien hakemisessa: Yrit√§ uudelleen my√∂hemmin.',
		groupNameRequired: 'Ryhm√§nimi vaaditaan t√§t√§ pyynt√∂√§ varten.',
		groupValidationError: 'Virhe ryhm√§n validoinnissa: ${error}',
		groupValidationErrorPrefix: 'Virhe: ${error}',
		handlingToolRequest: 'K√§sitell√§√§n ty√∂kalupyynt√∂√§: ${tool}',
		headers: 'Otsikot: ${headers}',
		incomingMessage: 'Saapuva viesti: ${MESSAGE}',
		invalidArgumentsError: 'Virhe: Ei kelvollisia argumentteja sy√∂tteess√§: ${input}',
		invalidGroups: 'Virheelliset ryhm√§t: ${groups}',
		invalidGroupsError: 'Virheelliset ryhm√§t: ${invalidGroups}',
		invalidGroupsLog: 'Virheellinen: ${groups}',
		invalidMessage: 'Virheellinen viesti',
		invalidOrEmptyRequest: 'Virheellinen viesti tai tyhj√§ pyynt√∂.',
		keygenDisabled: 'Pois k√§yt√∂st√§',
		keygenEnabled: 'K√§yt√∂ss√§',
		keygenErrorPrefix: 'Virhe keygen-pyynn√∂ss√§:',
		keygenSuccess: 'Keygen suoritettu onnistuneesti.',
		langNotSupported: 'Kielt√§ "${lang}" ei tueta. Palataan englantiin.',
		loginEmailPasswordRequired: 'Kirjautuminen ep√§onnistui: S√§hk√∂posti ja salasana vaaditaan.',
		loginError: 'Kirjautumisvirhe: ${error}',
		loginErrorPrefix: 'Virhe: ${error}',
		loginMissingCredentials: 'Kirjautuminen ep√§onnistui: S√§hk√∂posti ja salasana vaaditaan.',
		loginMissingCredentialsAlternative: 'Kirjautuminen ep√§onnistui: S√§hk√∂posti ja salasana vaaditaan.',
		loginResponse: 'Kirjautumisvastaus',
		loginSuccess: 'Kirjautuminen onnistui: ${data}',
		loginTokenReceived: 'Tunnus vastaanotettu: ${token}',
		LogIpsSuccess: 'LOG_IPs on k√§yt√∂ss√§: ${status}',
		logChangeError: 'Virhe lokitiedoston muutosten k√§sittelyss√§: ${error}',
		logReadError: 'Virhe lokitiedoston lukemisessa: ${error}',
		logViewerRunning: 'Lokien katseluohjelma on k√§ynniss√§ osoitteessa http://localhost:${port}',
		logoutError: 'Virhe uloskirjautumisessa: ${error}',
		logoutFailedTryAgain: 'Uloskirjautuminen ep√§onnistui. Yrit√§ my√∂hemmin uudelleen.',
		logoutSuccess: 'Uloskirjautuminen onnistui: ${data}',
		makingGetSourceRequest: 'Luodaan get_source-pyynt√∂√§: ${args}',
		makingListGroupsRequest: 'Luodaan list_groups-pyynt√∂√§',
		makingListSourcesRequest: 'Luodaan list_sources-pyynt√∂√§: ${args}',
		mcpVersion: 'Versio:',
		mcpPort: 'Portti:',
		mcpStartTime: 'K√§ynnistysaika:',
		mcpLicense: 'Lisenssi:',
		method: 'Menetelm√§: ${method}',
		missingArgumentsError: 'Puuttuvat argumentit: ${args}',
		missingChatParams: 'Pakolliset parametrit puuttuvat: chatId ja/tai kysymys.',
		missingCommandParameter: 'Komentoparametri puuttuu viestiss√§.',
		missingConfigError: 'Puuttuva .json-konfiguraatiomuuttuja: ${key}',
		missingGroupNameAndDesc: 'Pakolliset parametrit puuttuvat: groupName ja kuvaus.',
		missingGroupNameParam: 'Pakollinen parametri puuttuu: groupName.',
		missingGroupParameterDelete: 'Poista: Pakollinen parametri puuttuu: groupName.',
		missingGroupParameterStore: 'Tallenna: Pakollinen parametri puuttuu: groupName.',
		missingNameAndContent: 'Pakolliset parametrit puuttuvat: nimi ja sis√§lt√∂.',
		missingNameEmailPwd: 'Pakolliset parametrit puuttuvat: nimi, s√§hk√∂posti tai salasana.',
		missingParametersError: 'Puuttuvat parametrit: ${parameters}',
		missingParameterError: 'Pakollinen parametri puuttuu: ${parameter}.',
		missingTokenAuth: 'Token puuttuu',
		missingTokenError: 'Token puuttuu. Kirjaudu sis√§√§n ja yrit√§ uudelleen.',
		missingTokenGroups: 'Token puuttuu. Ryhmi√§ ei voida validoida.',
		missingToolName: 'Ty√∂kalun nimi puuttuu',
		missingUriParameter: 'URI-parametri puuttuu.',
		noChatData: 'Ei l√∂ytynyt tietoja m√§√§ritetyst√§ keskustelusta.',
		noDescriptionProvided: 'Kuvausta ei annettu',
		noErrorMessage: 'Virheviesti√§ ei ole.',
		noServerResponse: 'Palvelimelta ei ole vastaanotettu vastausta.',
		passwordEncEnabled: 'Salasanan salaus on k√§yt√∂ss√§.',
		passwordIsRequired: 'Salasana on pakollinen.',
		payload: 'Payload: ${payload}',
		portInUse: 'Porttivirhe: Portti ${PORT} on jo k√§yt√∂ss√§.',
		portInvalid: 'Porttivirhe: PORTin tulee olla numero v√§lill√§ 1 ja 65535.',
		portValidated: 'PORT validoitu onnistuneesti: ${port}',
		proxyAuthMissing: 'Proxy-todennustiedot puuttuvat.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Konflikti: usePublic on asetettu ep√§todeksi, koska ryhmi√§ on m√§√§ritelty.',
		requestError: 'Pyynt√∂virhe: ${error}',
		requestSent: 'Pyynt√∂ l√§hetetty',
		restrictedGroupsError: 'Virhe: RESTRICTED_GROUPS -konfiguraatio on virheellinen. Sen tulee olla \'true\' tai \'false\'. Nykyinen arvo: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS on k√§yt√∂ss√§: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS on k√§yt√∂ss√§. Saatavilla olevat ryhm√§t ovat rajoitettuja.',
		responseError: 'Vastausvirhe: ${error}',
		responseSentSuccess: 'Tila: Onnistunut',
		serverError: 'Palvelinta ei voitu k√§ynnist√§√§: ${error}',
		serverListeningOnPort: 'Palvelin kuuntelee portissa ${port}',
		serverRunning: 'Palvelin toimii portissa ${port}',
		serverShutdownLog: 'Palvelin sammutettu',
		serverStartedLog: 'Palvelin k√§ynnistetty.',
		serverStoppedLog: 'Palvelin pys√§ytetty',
		sendingChatRequest: 'L√§hetet√§√§n keskustelupyynt√∂√§ API:lle',
		sourcesRetrieved: 'L√§hteet haettu: ${data}',
		startingServerWithConfig: 'K√§ynnistet√§√§n palvelin seuraavalla konfiguraatiolla:',
		sslValidationSet: '${symbol} SSL-validointi on asetettu: ${value}',
		socketErrorPrefix: 'Virhe:',
		storeGroupLog: 'Tallennetaan uusi ryhm√§ nimell√§: ${groupName} ja kuvauksella: ${description}',
		storeGroupSuccess: 'Ryhm√§ tallennettu onnistuneesti: ${data}',
		storegroupError: 'Virhe ryhm√§n luomisessa: ${error}',
		storeGroupText: 'Ryhm√§ "${groupName}" tallennettu onnistuneesti ID:ll√§: ${id}.',
		unknownAddress: 'Tuntematon IP',
		unknownCommandError: 'Tuntematon komento: ${cmd}',
		unknownError: 'Tuntematon virhe',
		unknownPort: 'Tuntematon portti',
		unknownTool: 'Tuntematon ty√∂kalu: ${toolName}',
		tokenMissing: 'Token puuttuu.',
    },
	fr: {
		createSourceError: 'Erreur lors de la cr√©ation de la source : ${error}',
		create_sourceUnknownError: 'Erreur inconnue lors de la cr√©ation de la source : ${error}',
		returnStatus: 'Statut : ${Status}',
		extractedToken: 'Jeton extrait : ${token}',
		missingChatId: 'chatId est requis pour r√©cup√©rer les informations du chat.',
		missingQuestion: 'Question manquante dans les arguments.',
		ChatInfoRetrieved: 'Informations du chat r√©cup√©r√©es : ${chatData}',
		InvalidGroups: 'Groupes invalides : ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId est requis pour modifier une source.',
		sourceIdRequiredRetrieveSource: 'sourceId est requis pour r√©cup√©rer une source.',
		ConnectionEstablished: 'Connexion √©tablie',
		ResponseSuccessfullySent: 'R√©ponse envoy√©e avec succ√®s',
		ConnectionClosed: 'Connexion ferm√©e',
		ServerStopped: 'Le serveur a √©t√© arr√™t√©',
		responseReceived: 'R√©ponse re√ßue avec le statut : ${status}',
		internalServerError: 'Erreur interne du serveur',
		tcpServerError: 'Une erreur est survenue dans le serveur TCP :',
		unknownErrorOccured: 'Une erreur inconnue est survenue.',
		KeygenRequired: 'G√©n√©ration de cl√© requise',
		unknownCommand: 'Commande inconnue',
		socketEmitLogNotActivated: 'Le fichier de journal n\'est pas activ√©.',
		socketEmitLogReadError: 'Erreur de lecture du fichier de journal.',
		deletesourceLog: 'Supprimer la source avec le nom : ${SourceName}',
		sourceIdRequiredDeleteSource: 'sourceId est requis pour supprimer la source.',
		listGroupsSuccess: 'Liste des groupes r√©cup√©r√©e : ${GROUPS}',
		// Existing ones
		toolNotDefinedInConfig: 'Appel de fonction invalide : ${warn}',
		toolDisabledLog: 'Appel de fonction d√©sactiv√© c√¥t√© serveur : ${warn}',
		toolDisabledError: 'Appel de fonction d√©sactiv√© c√¥t√© serveur : ${warn}',
		accessRestrictedGroups: 'Valeur RESTRICTED_GROUPS : ${val}',
		allFunctionsEnabled: 'Toutes les fonctions sont activ√©es',
		allGroupsValid: 'Tous les groupes sont valides',
		AllowLoggingSuccess: 'ALLOW_LOGGING est activ√© : ${status}',
		anonymousModeSuccess: 'ANONYMOUS_MODE est activ√© : ${status}',
		apiErrorDetails: 'Erreur API : Statut : ${status}, Donn√©es : ${data}',
		apiRequestError: 'Erreur de requ√™te API : ${error}',
		apiUrlInvalid: 'API_URL invalide',
		apiUrlValidated: 'API_URL valid√© avec succ√®s : ${url}',
		apiUrlWarning: 'Attention : API_URL ne commence pas par "https://". L\'URL est en cours d\'ajustement.',
		apiUrlWarningV1: 'Attention : API_URL ne se termine pas par "/api/v1". L\'URL est en cours d\'ajustement.',
		authFailed: 'Authentification √©chou√©e.',
		authStarted: 'Authentification d√©marr√©e.',
		availableGroups: 'Groupes disponibles : ${availableGroups}',
		chatApiErrorDefault: 'Erreur lors de la requ√™te de chat.',
		chatApiError: 'Erreur dans la requ√™te Chat API : ${error}',
		chatResponseSuccess: 'R√©ponse du chat re√ßue : ${data}',
		checkingGroups: 'V√©rification des groupes : ${groups}',
		clientConnected: 'Client WebSocket connect√©',
		clientDisconnected: 'Client WebSocket d√©connect√©',
		connection: {
			new: 'Nouvelle connexion accept√©e de ${ip}:${port}',
			established: 'Connexion √©tablie',
			closed: 'Connexion ferm√©e ${ip}:${port}',
			dataReceived: 'Donn√©es re√ßues de ${ip}:${port} : ${data}',
		},
		errors: {
			processMessage: 'Erreur lors du traitement du message : ${error}',
			invalidMessage: 'Format de message invalide',
			socketError: 'Erreur de socket chez ${ip}:${port} : ${error}',
			serverError: 'Erreur du serveur : ${error}',
		},
		server: {
			running: 'Le serveur est en cours d\'ex√©cution sur le port ${port}',
			stopped: 'Le serveur a √©t√© arr√™t√©',
		},
		continueConversationError: 'Erreur lors de la poursuite de la conversation',
		conversationContinuation: 'Conversation en cours de poursuite ID : ${chatId}',
		conversationSuccess: 'Conversation poursuivie avec succ√®s : ${data}',
		createGroupSuccess: 'Groupe cr√©√© avec succ√®s : ${data}',
		createSourceLog: 'Modification de la source avec ID : ${sourceId}, Titre : ${title}',
		createSourceSuccess: 'Source cr√©√©e avec succ√®s : ${data}',
		createUserError: 'Erreur lors de la cr√©ation de l\'utilisateur : ${error}',
		createUserLog: 'Cr√©ation d\'un nouvel utilisateur : ${payload}',
		createUserSuccess: 'Utilisateur cr√©√© avec succ√®s : ${data}',
		deactivatedFunctions: 'Fonctions d√©sactiv√©es :',
		deleteGroupInternalError: 'Erreur interne lors de la suppression du groupe.',
		deleteGroupLog: 'Suppression du groupe avec le nom : ${groupName}',
		deleteGroupSuccessLog: 'Groupe supprim√© avec succ√®s : ${data}',
		deleteGroupText: 'Le groupe "${groupName}" a √©t√© supprim√© avec succ√®s.',
		deleteSourceError: 'Erreur lors de la suppression de la source : ${error}',
		deleteSourceFailedTryAgain: 'La suppression de la source a √©chou√©. Veuillez r√©essayer plus tard.',
		deleteUserError: 'Erreur lors de la suppression de l\'utilisateur : ${error}',
		deleteUserLog: 'Suppression de l\'utilisateur avec le nom : ${UserName}',
		deleteUserSuccess: 'Utilisateur supprim√© avec succ√®s : ${data}',
		decryptPwdError: 'Le mot de passe n\'a pas pu √™tre d√©crypt√©.',
		decryptionError: 'Erreur de d√©cryptage.',
		dataReceivedMsg: 'Donn√©es re√ßues : ${data}',
		emailRequiredForDelete: 'L\'e-mail est requis pour supprimer un utilisateur.',
		emailRequiredForEdit: 'L\'e-mail de l\'utilisateur est requis pour modifier l\'enregistrement.',
		editSourceError: 'Erreur lors de la modification de la source : ${error}',
		editSourceLog: 'Modification de la source avec ID : ${sourceId}, Titre : ${title}',
		editSourceSuccess: 'Source modifi√©e avec succ√®s : ${data}',
		editUserError: 'Erreur lors de la modification de l\'utilisateur : ${error}',
		editUserSuccess: 'Utilisateur modifi√© avec succ√®s : ${data}',
		encryptPwdError: 'Le mot de passe n\'a pas pu √™tre crypt√©.',
		encryptionDisabled: 'D√©sactiv√©',
		encryptionEnabled: 'Activ√©',
		encryptionError: 'Erreur de cryptage.',
		errorHandlingRequest: 'Erreur lors du traitement de la requ√™te : ${error}',
		errorProcessingMsg: 'Erreur lors du traitement du message : ${error}',
		fetchChatInfoError: 'Erreur lors de la r√©cup√©ration des informations du chat : ${error}',
		fetchGroupsError: 'Erreur lors de la r√©cup√©ration des groupes : ${error}',
		fetchGroupsErrorBackup: 'Erreur lors de la r√©cup√©ration des groupes.',
		fetchGroupsErrorPrefix: 'Erreur lors de la r√©cup√©ration des groupes :',
		fetchSourcesError: 'Erreur lors de la r√©cup√©ration des sources :',
		fetchingSources: 'R√©cup√©ration des sources pour le groupe : ${groupName}',
		fileReadErrorTitle: 'Erreur lors de la lecture du fichier.',
		functionDisabled: 'd√©sactiv√©',
		genericServerErrorPrefix: 'Erreur :',
		gotGetSourceResponse: 'R√©ponse re√ßue pour get_source : ${data}',
		gotListGroupsResponse: 'R√©ponse re√ßue pour list_groups : ${response}',
		gotListSourcesResponse: 'R√©ponse re√ßue pour list_sources : ${data}',
		groupFetchError: 'Erreur lors de la r√©cup√©ration des groupes : Veuillez r√©essayer plus tard.',
		groupNameRequired: 'Le nom du groupe est requis pour cette requ√™te.',
		groupValidationError: 'Erreur lors de la validation du groupe : ${error}',
		groupValidationErrorPrefix: 'Erreur : ${error}',
		handlingToolRequest: 'Traitement de la requ√™te de l\'outil : ${tool}',
		headers: 'En-t√™tes : ${headers}',
		incomingMessage: 'Message entrant : ${MESSAGE}',
		invalidArgumentsError: 'Erreur : Aucun argument valide trouv√© dans l\'entr√©e : ${input}',
		invalidGroups: 'Groupes invalides : ${groups}',
		invalidGroupsError: 'Groupes invalides : ${invalidGroups}',
		invalidGroupsLog: 'Invalide : ${groups}',
		invalidMessage: 'Message invalide',
		invalidOrEmptyRequest: 'Message invalide ou requ√™te vide.',
		keygenDisabled: 'D√©sactiv√©',
		keygenEnabled: 'Activ√©',
		keygenErrorPrefix: 'Erreur lors de la demande de keygen :',
		keygenSuccess: 'Keygen termin√© avec succ√®s.',
		langNotSupported: 'La langue "${lang}" n\'est pas prise en charge. Passage √† l\'anglais.',
		loginEmailPasswordRequired: '√âchec de la connexion : E-mail et mot de passe requis.',
		loginError: 'Erreur de connexion : ${error}',
		loginErrorPrefix: 'Erreur : ${error}',
		loginMissingCredentials: '√âchec de la connexion : E-mail et mot de passe requis.',
		loginMissingCredentialsAlternative: '√âchec de la connexion : E-mail et mot de passe requis.',
		loginResponse: 'R√©ponse de connexion',
		loginSuccess: 'Connexion r√©ussie : ${data}',
		loginTokenReceived: 'Jeton re√ßu : ${token}',
		LogIpsSuccess: 'LOG_IPs est activ√© : ${status}',
		logChangeError: 'Erreur lors du traitement des modifications du fichier journal : ${error}',
		logReadError: 'Erreur lors de la lecture du fichier journal : ${error}',
		logViewerRunning: 'Le visualiseur de journal est en cours d\'ex√©cution sur http://localhost:${port}',
		logoutError: 'Erreur lors de la d√©connexion : ${error}',
		logoutFailedTryAgain: 'D√©connexion √©chou√©e. Veuillez r√©essayer plus tard.',
		logoutSuccess: 'D√©connexion r√©ussie : ${data}',
		makingGetSourceRequest: 'Cr√©ation de la demande get_source : ${args}',
		makingListGroupsRequest: 'Cr√©ation de la demande list_groups',
		makingListSourcesRequest: 'Cr√©ation de la demande list_sources : ${args}',
		mcpVersion: 'Version :',
		mcpPort: 'Port :',
		mcpStartTime: 'Heure de d√©marrage :',
		mcpLicense: 'Licence :',
		method: 'M√©thode : ${method}',
		missingArgumentsError: 'Arguments manquants : ${args}',
		missingChatParams: 'Param√®tres requis manquants : chatId et/ou question.',
		missingCommandParameter: 'Param√®tre de commande manquant dans le message.',
		missingConfigError: 'Variable de configuration .json manquante : ${key}',
		missingGroupNameAndDesc: 'Param√®tres requis manquants : groupName et description.',
		missingGroupNameParam: 'Param√®tre requis manquant : groupName.',
		missingGroupParameterDelete: 'Supprimer : Param√®tre requis manquant : groupName.',
		missingGroupParameterStore: 'Enregistrer : Param√®tre requis manquant : groupName.',
		missingNameAndContent: 'Param√®tres requis manquants : nom et contenu.',
		missingNameEmailPwd: 'Param√®tres requis manquants : nom, e-mail ou mot de passe.',
		missingParametersError: 'Param√®tres manquants : ${parameters}',
		missingParameterError: 'Param√®tre requis manquant : ${parameter}.',
		missingTokenAuth: 'Token manquant',
		missingTokenError: 'Token manquant. Veuillez vous connecter et r√©essayer.',
		missingTokenGroups: 'Token manquant. Les groupes ne peuvent pas √™tre valid√©s.',
		missingToolName: 'Nom de l\'outil manquant',
		missingUriParameter: 'Param√®tre URI manquant.',
		noChatData: 'Aucune donn√©e trouv√©e pour le chat sp√©cifi√©.',
		noDescriptionProvided: 'Aucune description fournie',
		noErrorMessage: 'Aucun message d\'erreur.',
		noServerResponse: 'Aucune r√©ponse re√ßue du serveur.',
		passwordEncEnabled: 'Le chiffrement des mots de passe est activ√©.',
		passwordIsRequired: 'Le mot de passe est requis.',
		payload: 'Charge utile : ${payload}',
		portInUse: 'Erreur de port : le port ${PORT} est d√©j√† utilis√©.',
		portInvalid: 'Erreur de port : PORT doit √™tre un nombre entre 1 et 65535.',
		portValidated: 'PORT valid√© avec succ√®s : ${port}',
		proxyAuthMissing: 'Donn√©es d\'authentification proxy manquantes.',
		proxyUseProxy: 'USE_PROXY : ${val}',
		publicGroupsConflictWarning: 'Conflit : usePublic a √©t√© d√©fini sur false car des groupes sont sp√©cifi√©s.',
		requestError: 'Erreur de requ√™te : ${error}',
		requestSent: 'Requ√™te envoy√©e',
		restrictedGroupsError: 'Erreur : Configuration RESTRICTED_GROUPS invalide. Doit √™tre \'true\' ou \'false\'. Valeur actuelle : ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS est activ√© : ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS activ√©. Les groupes disponibles sont restreints.',
		responseError: 'Erreur de r√©ponse : ${error}',
		responseSentSuccess: 'Statut : Succ√®s',
		serverError: 'Le serveur n\'a pas pu √™tre d√©marr√© : ${error}',
		serverListeningOnPort: 'Le serveur √©coute sur le port ${port}',
		serverRunning: 'Le serveur fonctionne sur le port ${port}',
		serverShutdownLog: 'Arr√™t du serveur',
		serverStartedLog: 'Serveur d√©marr√©.',
		serverStoppedLog: 'Serveur arr√™t√©',
		sendingChatRequest: 'Envoi de la requ√™te de chat √† l\'API',
		sourcesRetrieved: 'Sources r√©cup√©r√©es : ${data}',
		startingServerWithConfig: 'D√©marrage du serveur avec la configuration suivante :',
		sslValidationSet: '${symbol} La validation SSL est d√©finie sur : ${value}',
		socketErrorPrefix: 'Erreur :',
		storeGroupLog: 'Enregistrement d\'un nouveau groupe avec le nom : ${groupName} et la description : ${description}',
		storeGroupSuccess: 'Groupe enregistr√© avec succ√®s : ${data}',
		storegroupError: 'Erreur lors de la cr√©ation du groupe : ${error}',
		storeGroupText: 'Groupe "${groupName}" enregistr√© avec succ√®s avec l\'ID : ${id}.',
		unknownAddress: 'IP inconnue',
		unknownCommandError: 'Commande inconnue : ${cmd}',
		unknownError: 'Erreur inconnue',
		unknownPort: 'Port inconnu',
		unknownTool: 'Outil inconnu : ${toolName}',
		tokenMissing: 'Token manquant.',
	},
	sv: {
		createSourceError: 'Fel vid skapande av k√§lla: ${error}',
		create_sourceUnknownError: 'Ok√§nt fel vid skapande av k√§lla: ${error}',
		returnStatus: 'Status: ${Status}',
		extractedToken: 'Extraherad token: ${token}',
		missingChatId: 'chatId kr√§vs f√∂r att h√§mta chattinformation.',
		missingQuestion: 'Fr√•ga saknas i argumenten.',
		ChatInfoRetrieved: 'Chattinformation h√§mtad: ${chatData}',
		InvalidGroups: 'Ogiltiga grupper: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId kr√§vs f√∂r att redigera en k√§lla.',
		sourceIdRequiredRetrieveSource: 'sourceId kr√§vs f√∂r att h√§mta en k√§lla.',
		ConnectionEstablished: 'Anslutning etablerad',
		ResponseSuccessfullySent: 'Svar skickat framg√•ngsrikt',
		ConnectionClosed: 'Anslutning st√§ngd',
		ServerStopped: 'Servern har stoppats',
		responseReceived: 'Svar mottaget med status: ${status}',
		internalServerError: 'Internt serverfel',
		tcpServerError: 'Ett fel uppstod i TCP-servern:',
		unknownErrorOccured: 'Ett ok√§nt fel uppstod.',
		KeygenRequired: 'Keygen kr√§vs',
		unknownCommand: 'Ok√§nt kommando',
		socketEmitLogNotActivated: 'Loggfil √§r inte aktiverad.',
		socketEmitLogReadError: 'Fel vid l√§sning av loggfil.',
		deletesourceLog: formatMessage(templates.info, { action: 'Ta bort k√§lla', details: 'med namn: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'sourceId kr√§vs f√∂r att ta bort k√§lla.',
		listGroupsSuccess: 'Grupplista h√§mtad: ${GROUPS}',
		// Existing ones
		toolNotDefinedInConfig: formatMessage(templates.error, { action: 'Ogiltigt funktionsanrop', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: 'Funktionsanrop inaktiverat p√• serversidan:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: 'Funktionsanrop inaktiverat p√• serversidan:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: 'RESTRICTED_GROUPS V√§rde', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: 'Alla funktioner √§r aktiverade', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: 'Alla grupper √§r giltiga', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: '√§r aktiverat: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: '√§r aktiverat: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: 'API-fel', details: 'Status: ${status}, Data: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: 'API-f√∂rfr√•gningsfel', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: 'Ogiltig API_URL', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'API_URL validerad framg√•ngsrikt', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: 'Varning', details: 'API_URL b√∂rjar inte med "https://". URL:en justeras.' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: 'Varning', details: 'API_URL slutar inte med "/api/v1". URL:en justeras.' }),
		authFailed: 'Autentisering misslyckades.',
		authStarted: 'Autentisering p√•b√∂rjad.',
		availableGroups: formatMessage(templates.success, { action: 'Tillg√§ngliga grupper', details: '${availableGroups}' }),
		chatApiErrorDefault: 'Fel under chattf√∂rfr√•gan.',
		chatApiError: formatMessage(templates.error, { action: 'Fel i Chat API-f√∂rfr√•gan', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: 'Chatt svar mottaget', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: 'Kontrollerar grupper', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: 'WebSocket-klient ansluten', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: 'WebSocket-klient fr√•nkopplad', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: 'Ny anslutning accepterad', details: 'fr√•n ${ip}:${port}' }),
			established: formatMessage(templates.success, { action: 'Anslutning etablerad', details: '' }),
			closed: formatMessage(templates.info, { action: 'Anslutning st√§ngd', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: 'Data mottagen', details: 'fr√•n ${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: 'Fel vid bearbetning av meddelande', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: 'Ogiltigt meddelandeformat', details: '' }),
			socketError: formatMessage(templates.error, { action: 'Socketfel', details: 'vid ${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: 'Serverfel', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: 'Servern k√∂rs', details: 'p√• port ${port}' }),
			stopped: formatMessage(templates.info, { action: 'Servern har stoppats', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: 'Fel vid forts√§ttning av konversation', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: 'Konversation forts√§tter', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: 'Konversation framg√•ngsrikt fortsatt', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: 'Grupp skapad framg√•ngsrikt', details: '${data}' }),
		createSourceLog: 'Redigerar k√§lla med ID: ${sourceId}, Titel: ${title}',
		createSourceSuccess: 'K√§lla skapad framg√•ngsrikt: ${data}',
		createUserError: 'Fel vid skapande av anv√§ndare: ${error}',
		createUserLog: 'Skapar ny anv√§ndare: ${payload}',
		createUserSuccess: 'Anv√§ndare skapad framg√•ngsrikt: ${data}',
		deactivatedFunctions: 'Inaktiverade funktioner:',
		deleteGroupInternalError: 'Internt fel vid borttagning av grupp.',
		deleteGroupLog: formatMessage(templates.info, { action: 'Tar bort grupp', details: 'med namn: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: 'Grupp borttagen framg√•ngsrikt', details: '${data}' }),
		deleteGroupText: 'Grupp "${groupName}" har tagits bort framg√•ngsrikt.',
		deleteSourceError: 'Fel vid borttagning av k√§lla: ${error}',
		deleteSourceFailedTryAgain: 'Borttagning av k√§llan misslyckades. F√∂rs√∂k igen senare.',
		deleteUserError: 'Fel vid borttagning av anv√§ndare: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: 'Tar bort anv√§ndare', details: 'med namn: ${UserName}' }),
		deleteUserSuccess: 'Anv√§ndare borttagen framg√•ngsrikt: ${data}',
		decryptPwdError: 'L√∂senordet kunde inte avkrypteras.',
		decryptionError: 'Avkrypteringsfel.',
		dataReceivedMsg: 'Data mottagen: ${data}',
		emailRequiredForDelete: 'E-post kr√§vs f√∂r att ta bort en anv√§ndare.',
		emailRequiredForEdit: 'Anv√§ndarens e-post kr√§vs f√∂r att redigera posten.',
		editSourceError: 'Fel vid redigering av k√§lla: ${error}',
		editSourceLog: 'Redigerar k√§lla med ID: ${sourceId}, Titel: ${title}',
		editSourceSuccess: 'K√§lla redigerad framg√•ngsrikt: ${data}',
		editUserError: 'Fel vid redigering av anv√§ndare: ${error}',
		editUserSuccess: 'Anv√§ndare redigerad framg√•ngsrikt: ${data}',
		encryptPwdError: 'L√∂senordet kunde inte krypteras.',
		encryptionDisabled: 'Inaktiverat',
		encryptionEnabled: 'Aktiverat',
		encryptionError: 'Krypteringsfel.',
		errorHandlingRequest: formatMessage(templates.error, { action: 'Fel vid hantering av f√∂rfr√•gan', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: 'Fel vid bearbetning av meddelande:', details: '${error}' }),
		fetchChatInfoError: 'Fel vid h√§mtning av chattinformation: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: 'Fel vid h√§mtning av grupper', details: '${error}' }),
		fetchGroupsErrorBackup: 'Fel vid h√§mtning av grupper.',
		fetchGroupsErrorPrefix: 'Fel vid h√§mtning av grupper:',
		fetchSourcesError: formatMessage(templates.error, { action: 'Fel vid h√§mtning av k√§llor', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: 'H√§mtar k√§llor f√∂r grupp: ${groupName}', details: '' }),
		fileReadErrorTitle: 'Fel vid l√§sning av fil.',
		functionDisabled: 'inaktiverad',
		genericServerErrorPrefix: 'Fel:',
		gotGetSourceResponse: formatMessage(templates.success, { action: 'Mottog svar f√∂r get_source', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: 'Mottog svar f√∂r list_groups', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: 'Mottog svar f√∂r list_sources', details: '${data}' }),
		groupFetchError: 'Fel vid h√§mtning av grupper: F√∂rs√∂k igen senare.',
		groupNameRequired: 'Gruppnamn kr√§vs f√∂r denna f√∂rfr√•gan.',
		groupValidationError: 'Fel vid validering av grupp: ${error}',
		groupValidationErrorPrefix: 'Fel: ${error}',
		handlingToolRequest: 'Hantera verktygsf√∂rfr√•gan: ${tool}',
		headers: 'Headers: ${headers}',
		incomingMessage: 'Inkommande meddelande: ${MESSAGE}',
		invalidArgumentsError: 'Fel: Inga giltiga argument hittades i inmatningen: ${input}',
		invalidGroups: 'Ogiltiga grupper: ${groups}',
		invalidGroupsError: 'Ogiltiga grupper: ${invalidGroups}',
		invalidGroupsLog: 'Ogiltiga: ${groups}',
		invalidMessage: 'Ogiltigt meddelande',
		invalidOrEmptyRequest: 'Ogiltigt meddelande eller tom f√∂rfr√•gan.',
		keygenDisabled: 'Inaktiverat',
		keygenEnabled: 'Aktiverat',
		keygenErrorPrefix: 'Fel med keygen-f√∂rfr√•gan:',
		keygenSuccess: 'Keygen slutf√∂rd framg√•ngsrikt.',
		langNotSupported: 'Spr√•ket "${lang}" st√∂ds inte. √Öterg√•r till engelska.',
		loginEmailPasswordRequired: 'Inloggning misslyckades: E-post och l√∂senord kr√§vs.',
		loginError: formatMessage(templates.error, { action: 'Inloggningsfel', details: '${error}' }),
		loginErrorPrefix: 'Fel: ${error}',
		loginMissingCredentials: 'Inloggning misslyckades: E-post och l√∂senord kr√§vs.',
		loginMissingCredentialsAlternative: 'Inloggning misslyckades: E-post och l√∂senord kr√§vs.',
		loginResponse: 'Inloggningssvar',
		loginSuccess: formatMessage(templates.success, { action: 'Inloggning lyckades', details: '${data}' }),
		loginTokenReceived: 'Token mottagen: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: '√§r aktiverat: ${status}' }),
		logChangeError: 'Fel vid bearbetning av loggfil√§ndringar: ${error}',
		logReadError: 'Fel vid l√§sning av loggfil: ${error}',
		logViewerRunning: 'Loggv√§rmare k√∂rs p√• http://localhost:${port}',
		logoutError: 'Fel vid utloggning: ${error}',
		logoutFailedTryAgain: 'Utloggning misslyckades. F√∂rs√∂k igen senare.',
		logoutSuccess: 'Utloggning lyckades: ${data}',
		makingGetSourceRequest: 'Skapar get_source-f√∂rfr√•gan: ${args}',
		makingListGroupsRequest: 'Skapar list_groups-f√∂rfr√•gan',
		makingListSourcesRequest: 'Skapar list_sources-f√∂rfr√•gan: ${args}',
		mcpVersion: 'Version:',
		mcpPort: 'Port:',
		mcpStartTime: 'Starttid:',
		mcpLicense: 'Licens:',
		method: 'Metod: ${method}',
		missingArgumentsError: 'Saknade argument: ${args}',
		missingChatParams: 'Saknade n√∂dv√§ndiga parametrar: chatId och/eller fr√•ga.',
		missingCommandParameter: 'Saknas kommandoparameter i meddelandet.',
		missingConfigError: 'Saknas .json-konfigurationsvariabel: ${key}',
		missingGroupNameAndDesc: 'Saknade n√∂dv√§ndiga parametrar: groupName och beskrivning.',
		missingGroupNameParam: 'Saknad n√∂dv√§ndig parameter: groupName.',
		missingGroupParameterDelete: 'Ta bort: Saknad n√∂dv√§ndig parameter: groupName.',
		missingGroupParameterStore: 'Spara: Saknad n√∂dv√§ndig parameter: groupName.',
		missingNameAndContent: 'Saknade n√∂dv√§ndiga parametrar: namn och inneh√•ll.',
		missingNameEmailPwd: 'Saknade n√∂dv√§ndiga parametrar: namn, e-post eller l√∂senord.',
		missingParametersError: formatMessage(templates.error, { action: 'Saknade parametrar', details: '${parameters}' }),
		missingParameterError: 'Saknad n√∂dv√§ndig parameter: ${parameter}.',
		missingTokenAuth: 'Token saknas',
		missingTokenError: 'Token saknas. V√§nligen logga in och f√∂rs√∂k igen.',
		missingTokenGroups: 'Token saknas. Grupper kan inte valideras.',
		missingToolName: 'Verktygsnamn saknas',
		missingUriParameter: 'Saknad URI-parameter.',
		noChatData: 'Ingen data hittades f√∂r den angivna chatten.',
		noDescriptionProvided: 'Ingen beskrivning angiven',
		noErrorMessage: 'Inget felmeddelande.',
		noServerResponse: 'Ingen respons mottagen fr√•n servern.',
		passwordEncEnabled: 'L√∂senordskryptering √§r aktiverad.',
		passwordIsRequired: 'L√∂senord kr√§vs.',
		payload: 'Payload: ${payload}',
		portInUse: 'Portfel: Port ${PORT} anv√§nds redan.',
		portInvalid: 'Portfel: PORT m√•ste vara ett nummer mellan 1 och 65535.',
		portValidated: 'PORT validerad framg√•ngsrikt: ${port}',
		proxyAuthMissing: 'Proxyautentiseringsdata saknas.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Konflikt: usePublic har st√§llts in p√• falskt eftersom grupper specificeras.',
		requestError: 'F√∂rfr√•gningsfel: ${error}',
		requestSent: 'F√∂rfr√•gan skickad',
		restrictedGroupsError: 'Fel: Ogiltig RESTRICTED_GROUPS-konfiguration. M√•ste vara \'true\' eller \'false\'. Nuvarande v√§rde: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS √§r aktiverat: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS aktiverat. Tillg√§ngliga grupper √§r begr√§nsade.',
		responseError: 'Svarsfel: ${error}',
		// responseReceived: formatMessage(templates.success, { action: 'Response received', details: '${response}' }),
		responseSentSuccess: formatMessage(templates.success, { action: 'Status', details: 'Framg√•ng' }),
		serverError: formatMessage(templates.error, { action: 'Servern kunde inte startas', details: '${error}' }),
		serverListeningOnPort: 'Servern lyssnar p√• port ${port}',
		serverRunning: 'Servern k√∂rs p√• port ${port}',
		serverShutdownLog: 'Serverst√§ngning',
		serverStartedLog: 'Servern startad.',
		serverStoppedLog: 'Servern stoppad',
		sendingChatRequest: 'Skickar chattf√∂rfr√•gan till API',
		sourcesRetrieved: formatMessage(templates.success, { action: 'K√§llor h√§mtade', details: '${data}' }),
		startingServerWithConfig: 'Startar server med f√∂ljande konfiguration:',
		sslValidationSet: '${symbol} SSL-validering √§r inst√§lld p√•: ${value}',
		socketErrorPrefix: 'Fel:',
		storeGroupLog: 'Lagrar en ny grupp med namn: ${groupName} och beskrivning: ${description}',
		storeGroupSuccess: 'Grupp lagrad framg√•ngsrikt: ${data}',
		storegroupError: 'Fel vid skapande av grupp: ${error}',
		storeGroupText: 'Grupp "${groupName}" lagrad framg√•ngsrikt med ID: ${id}.',
		unknownAddress: 'Ok√§nd IP',
		unknownCommandError: formatMessage(templates.error, { action: 'Ok√§nt kommando', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: 'Ok√§nt fel', details: '' }),
		unknownPort: 'Ok√§nd port',
		unknownTool: 'Ok√§nt verktyg: ${toolName}',
		tokenMissing: 'Token saknas.',
	},
	// Bulgarian (bg)
	bg: {
		createSourceError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫–∞: ${error}',
		create_sourceUnknownError: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫–∞: ${error}',
		returnStatus: '–°—Ç–∞—Ç—É—Å: ${Status}',
		extractedToken: '–ò–∑–≤–ª–µ—á–µ–Ω —Ç–æ–∫–µ–Ω: ${token}',
		missingChatId: 'chatId –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∑–∞ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —á–∞—Ç–∞.',
		missingQuestion: '–õ–∏–ø—Å–≤–∞ –≤—ä–ø—Ä–æ—Å –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ç–µ.',
		ChatInfoRetrieved: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —á–∞—Ç–∞ –µ –∏–∑–≤–ª–µ—á–µ–Ω–∞: ${chatData}',
		InvalidGroups: '–ù–µ–≤–∞–ª–∏–¥–Ω–∏ –≥—Ä—É–ø–∏: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫.',
		sourceIdRequiredRetrieveSource: 'sourceId –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∑–∞ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫.',
		ConnectionEstablished: '–í—Ä—ä–∑–∫–∞—Ç–∞ –µ —É—Å—Ç–∞–Ω–æ–≤–µ–Ω–∞',
		ResponseSuccessfullySent: '–û—Ç–≥–æ–≤–æ—Ä—ä—Ç –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω —É—Å–ø–µ—à–Ω–æ',
		ConnectionClosed: '–í—Ä—ä–∑–∫–∞—Ç–∞ –µ –∑–∞—Ç–≤–æ—Ä–µ–Ω–∞',
		ServerStopped: '–°—ä—Ä–≤—ä—Ä—ä—Ç –µ —Å–ø—Ä—è–Ω',
		responseReceived: '–û—Ç–≥–æ–≤–æ—Ä—ä—Ç –µ –ø–æ–ª—É—á–µ–Ω —Å—ä—Å —Å—Ç–∞—Ç—É—Å: ${status}',
		internalServerError: '–í—ä—Ç—Ä–µ—à–Ω–∞ —Å—ä—Ä–≤—ä—Ä–Ω–∞ –≥—Ä–µ—à–∫–∞',
		tcpServerError: '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –≤ TCP —Å—ä—Ä–≤—ä—Ä–∞:',
		unknownErrorOccured: '–í—ä–∑–Ω–∏–∫–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –≥—Ä–µ—à–∫–∞.',
		KeygenRequired: '–ò–∑–∏—Å–∫–≤–∞ —Å–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–ª—é—á',
		unknownCommand: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –∫–æ–º–∞–Ω–¥–∞',
		socketEmitLogNotActivated: '–§–∞–π–ª—ä—Ç —Å –ª–æ–≥–æ–≤–µ –Ω–µ –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω.',
		socketEmitLogReadError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ —Ñ–∞–π–ª —Å –ª–æ–≥–æ–≤–µ.',
		deletesourceLog: formatMessage(templates.info, { action: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫', details: '—Å –∏–º–µ: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'sourceId –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫.',
		listGroupsSuccess: '–°–ø–∏—Å—ä–∫—ä—Ç —Å –≥—Ä—É–ø–∏ –µ –∏–∑–≤–ª–µ—á–µ–Ω: ${GROUPS}',
		toolNotDefinedInConfig: formatMessage(templates.error, { action: '–ù–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ–≤–∏–∫ –∑–∞ —Ñ—É–Ω–∫—Ü–∏—è', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: '–ü–æ–≤–∏–∫ –∑–∞ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω –æ—Ç —Å—Ç—Ä–∞–Ω–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: '–ü–æ–≤–∏–∫ –∑–∞ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω –æ—Ç —Å—Ç—Ä–∞–Ω–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: '–°—Ç–æ–π–Ω–æ—Å—Ç –Ω–∞ RESTRICTED_GROUPS', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: '–í—Å–∏—á–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–∏', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: '–í—Å–∏—á–∫–∏ –≥—Ä—É–ø–∏ —Å–∞ –≤–∞–ª–∏–¥–Ω–∏', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: '–µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: '–µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: 'API –≥—Ä–µ—à–∫–∞', details: '–°—Ç–∞—Ç—É—Å: ${status}, –î–∞–Ω–Ω–∏: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ API –∑–∞—è–≤–∫–∞', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: '–ù–µ–≤–∞–ª–∏–¥–µ–Ω API_URL', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'API_URL –µ –≤–∞–ª–∏–¥–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', details: 'API_URL –Ω–µ –∑–∞–ø–æ—á–≤–∞ —Å "https://". URL –∞–¥—Ä–µ—Å—ä—Ç —Å–µ –∫–æ—Ä–∏–≥–∏—Ä–∞.' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', details: 'API_URL –Ω–µ –∑–∞–≤—ä—Ä—à–≤–∞ —Å "/api/v1". URL –∞–¥—Ä–µ—Å—ä—Ç —Å–µ –∫–æ—Ä–∏–≥–∏—Ä–∞.' }),
		authFailed: '–ê–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è—Ç–∞ –µ –Ω–µ—É—Å–ø–µ—à–Ω–∞.',
		authStarted: '–ê–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è—Ç–∞ –µ –∑–∞–ø–æ—á–Ω–∞–ª–∞.',
		availableGroups: formatMessage(templates.success, { action: '–ù–∞–ª–∏—á–Ω–∏ –≥—Ä—É–ø–∏', details: '${availableGroups}' }),
		chatApiErrorDefault: '–ì—Ä–µ—à–∫–∞ –ø–æ –≤—Ä–µ–º–µ –Ω–∞ —á–∞—Ç –∑–∞—è–≤–∫–∞.',
		chatApiError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–∞—Ç API –∑–∞—è–≤–∫–∞', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: '–ß–∞—Ç –æ—Ç–≥–æ–≤–æ—Ä –ø–æ–ª—É—á–µ–Ω', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–∏—Ç–µ', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: 'WebSocket –∫–ª–∏–µ–Ω—Ç –µ —Å–≤—ä—Ä–∑–∞–Ω', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: 'WebSocket –∫–ª–∏–µ–Ω—Ç –µ –ø—Ä–µ–∫—ä—Å–Ω–∞–ª –≤—Ä—ä–∑–∫–∞—Ç–∞', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: '–ù–æ–≤–∞ –≤—Ä—ä–∑–∫–∞ –µ –ø—Ä–∏–µ—Ç–∞', details: '–æ—Ç ${ip}:${port}' }),
			established: formatMessage(templates.success, { action: '–í—Ä—ä–∑–∫–∞—Ç–∞ –µ —É—Å—Ç–∞–Ω–æ–≤–µ–Ω–∞', details: '' }),
			closed: formatMessage(templates.info, { action: '–í—Ä—ä–∑–∫–∞—Ç–∞ –µ –∑–∞—Ç–≤–æ—Ä–µ–Ω–∞', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: '–î–∞–Ω–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∏', details: '–æ—Ç ${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: '–ù–µ–≤–∞–ª–∏–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ', details: '' }),
			socketError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –≤ —Å–æ–∫–µ—Ç–∞', details: '–Ω–∞ ${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: '–°—ä—Ä–≤—ä—Ä–Ω–∞ –≥—Ä–µ—à–∫–∞', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: '–°—ä—Ä–≤—ä—Ä—ä—Ç —Ä–∞–±–æ—Ç–∏', details: '–Ω–∞ –ø–æ—Ä—Ç ${port}' }),
			stopped: formatMessage(templates.info, { action: '–°—ä—Ä–≤—ä—Ä—ä—Ç –µ —Å–ø—Ä—è–Ω', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: '–†–∞–∑–≥–æ–≤–æ—Ä—ä—Ç –ø—Ä–æ–¥—ä–ª–∂–∞–≤–∞', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: '–†–∞–∑–≥–æ–≤–æ—Ä—ä—Ç –µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥—ä–ª–∂–µ–Ω', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: '–ì—Ä—É–ø–∞—Ç–∞ –µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω–∞', details: '${data}' }),
		createSourceLog: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫ —Å ID: ${sourceId}, –ó–∞–≥–ª–∞–≤–∏–µ: ${title}',
		createSourceSuccess: '–ò–∑—Ç–æ—á–Ω–∏–∫—ä—Ç –µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω: ${data}',
		createUserError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${error}',
		createUserLog: '–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${payload}',
		createUserSuccess: '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω: ${data}',
		deactivatedFunctions: '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏:',
		deleteGroupInternalError: '–í—ä—Ç—Ä–µ—à–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∞.',
		deleteGroupLog: formatMessage(templates.info, { action: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∞', details: '—Å –∏–º–µ: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: '–ì—Ä—É–ø–∞—Ç–∞ –µ —É—Å–ø–µ—à–Ω–æ –∏–∑—Ç—Ä–∏—Ç–∞', details: '${data}' }),
		deleteGroupText: '–ì—Ä—É–ø–∞—Ç–∞ "${groupName}" –µ —É—Å–ø–µ—à–Ω–æ –∏–∑—Ç—Ä–∏—Ç–∞.',
		deleteSourceError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫: ${error}',
		deleteSourceFailedTryAgain: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ—Ç–æ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫–∞ —Å–µ –ø—Ä–æ–≤–∞–ª–∏. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –ø–æ-–∫—ä—Å–Ω–æ.',
		deleteUserError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª', details: '—Å –∏–º–µ: ${UserName}' }),
		deleteUserSuccess: '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ —É—Å–ø–µ—à–Ω–æ –∏–∑—Ç—Ä–∏—Ç: ${data}',
		decryptPwdError: '–ü–∞—Ä–æ–ª–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –¥–µ–∫—Ä–∏–ø—Ç–∏—Ä–∞–Ω–∞.',
		decryptionError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –¥–µ–∫—Ä–∏–ø—Ü–∏—è.',
		dataReceivedMsg: '–î–∞–Ω–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∏: ${data}',
		emailRequiredForDelete: '–ò–º–µ–π–ª –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª.',
		emailRequiredForEdit: '–ò–º–µ–π–ª –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å–∞.',
		editSourceError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫: ${error}',
		editSourceLog: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏–∫ —Å ID: ${sourceId}, –ó–∞–≥–ª–∞–≤–∏–µ: ${title}',
		editSourceSuccess: '–ò–∑—Ç–æ—á–Ω–∏–∫—ä—Ç –µ —É—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω: ${data}',
		editUserError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${error}',
		editUserSuccess: '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ —É—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω: ${data}',
		encryptPwdError: '–ü–∞—Ä–æ–ª–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –∫—Ä–∏–ø—Ç–∏—Ä–∞–Ω–∞.',
		encryptionDisabled: '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–æ',
		encryptionEnabled: '–ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–æ',
		encryptionError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∫—Ä–∏–ø—Ç–∏—Ä–∞–Ω–µ.',
		errorHandlingRequest: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ:', details: '${error}' }),
		fetchChatInfoError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —á–∞—Ç–∞: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏', details: '${error}' }),
		fetchGroupsErrorBackup: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏.',
		fetchGroupsErrorPrefix: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏:',
		fetchSourcesError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: '–ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∏–∑—Ç–æ—á–Ω–∏—Ü–∏ –∑–∞ –≥—Ä—É–ø–∞: ${groupName}', details: '' }),
		fileReadErrorTitle: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ —Ñ–∞–π–ª.',
		functionDisabled: '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–æ',
		genericServerErrorPrefix: '–ì—Ä–µ—à–∫–∞:',
		gotGetSourceResponse: formatMessage(templates.success, { action: '–ü–æ–ª—É—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –∑–∞ get_source', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: '–ü–æ–ª—É—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –∑–∞ list_groups', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: '–ü–æ–ª—É—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –∑–∞ list_sources', details: '${data}' }),
		groupFetchError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∏: –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –ø–æ-–∫—ä—Å–Ω–æ.',
		groupNameRequired: '–ò–º–µ –Ω–∞ –≥—Ä—É–ø–∞ –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞ —Ç–∞–∑–∏ –∑–∞—è–≤–∫–∞.',
		groupValidationError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –≥—Ä—É–ø–∞: ${error}',
		groupValidationErrorPrefix: '–ì—Ä–µ—à–∫–∞: ${error}',
		handlingToolRequest: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${tool}',
		headers: '–ó–∞–≥–ª–∞–≤–∫–∏: ${headers}',
		incomingMessage: '–í—Ö–æ–¥—è—â–æ —Å—ä–æ–±—â–µ–Ω–∏–µ: ${MESSAGE}',
		invalidArgumentsError: '–ì—Ä–µ—à–∫–∞: –ù–µ —Å–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –≤–∞–ª–∏–¥–Ω–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –≤ –≤—Ö–æ–¥–∞: ${input}',
		invalidGroups: '–ù–µ–≤–∞–ª–∏–¥–Ω–∏ –≥—Ä—É–ø–∏: ${groups}',
		invalidGroupsError: '–ù–µ–≤–∞–ª–∏–¥–Ω–∏ –≥—Ä—É–ø–∏: ${invalidGroups}',
		invalidGroupsLog: '–ù–µ–≤–∞–ª–∏–¥–Ω–∏: ${groups}',
		invalidMessage: '–ù–µ–≤–∞–ª–∏–¥–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ',
		invalidOrEmptyRequest: '–ù–µ–≤–∞–ª–∏–¥–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∞–∑–Ω–∞ –∑–∞—è–≤–∫–∞.',
		keygenDisabled: '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–æ',
		keygenEnabled: '–ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–æ',
		keygenErrorPrefix: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤–∫–∞ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–ª—é—á:',
		keygenSuccess: '–ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–ª—é—á –µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤—ä—Ä—à–µ–Ω–æ.',
		langNotSupported: '–ï–∑–∏–∫ "${lang}" –Ω–µ –µ –ø–æ–¥–¥—ä—Ä–∂–∞–Ω. –í—Ä—ä—â–∞–Ω–µ –∫—ä–º –∞–Ω–≥–ª–∏–π—Å–∫–∏.',
		loginEmailPasswordRequired: '–í–ª–∏–∑–∞–Ω–µ—Ç–æ –µ –Ω–µ—É—Å–ø–µ—à–Ω–æ: –ò–º–µ–π–ª –∏ –ø–∞—Ä–æ–ª–∞ —Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏.',
		loginError: formatMessage(templates.error, { action: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–ª–∏–∑–∞–Ω–µ', details: '${error}' }),
		loginErrorPrefix: '–ì—Ä–µ—à–∫–∞: ${error}',
		loginMissingCredentials: '–í–ª–∏–∑–∞–Ω–µ—Ç–æ –µ –Ω–µ—É—Å–ø–µ—à–Ω–æ: –ò–º–µ–π–ª –∏ –ø–∞—Ä–æ–ª–∞ —Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏.',
		loginMissingCredentialsAlternative: '–í–ª–∏–∑–∞–Ω–µ—Ç–æ –µ –Ω–µ—É—Å–ø–µ—à–Ω–æ: –ò–º–µ–π–ª –∏ –ø–∞—Ä–æ–ª–∞ —Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏.',
		loginResponse: '–û—Ç–≥–æ–≤–æ—Ä –ø—Ä–∏ –≤–ª–∏–∑–∞–Ω–µ',
		loginSuccess: formatMessage(templates.success, { action: '–í–ª–∏–∑–∞–Ω–µ—Ç–æ –µ —É—Å–ø–µ—à–Ω–æ', details: '${data}' }),
		loginTokenReceived: '–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: '–µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω: ${status}' }),
		logChangeError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –ø—Ä–æ–º–µ–Ω–∏ –≤—ä–≤ —Ñ–∞–π–ª–∞ —Å –ª–æ–≥–æ–≤–µ: ${error}',
		logReadError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ —Ñ–∞–π–ª —Å –ª–æ–≥–æ–≤–µ: ${error}',
		logViewerRunning: '–ü—Ä–µ–≥–ª–µ–¥–∞—á—ä—Ç –Ω–∞ –ª–æ–≥–æ–≤–µ —Ä–∞–±–æ—Ç–∏ –Ω–∞ http://localhost:${port}',
		logoutError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ª–∏–∑–∞–Ω–µ: ${error}',
		logoutFailedTryAgain: '–ò–∑–ª–∏–∑–∞–Ω–µ—Ç–æ –µ –Ω–µ—É—Å–ø–µ—à–Ω–æ. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –ø–æ-–∫—ä—Å–Ω–æ.',
		logoutSuccess: '–ò–∑–ª–∏–∑–∞–Ω–µ—Ç–æ –µ —É—Å–ø–µ—à–Ω–æ: ${data}',
		makingGetSourceRequest: '–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ get_source –∑–∞—è–≤–∫–∞: ${args}',
		makingListGroupsRequest: '–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ list_groups –∑–∞—è–≤–∫–∞',
		makingListSourcesRequest: '–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ list_sources –∑–∞—è–≤–∫–∞: ${args}',
		mcpVersion: '–í–µ—Ä—Å–∏—è:',
		mcpPort: '–ü–æ—Ä—Ç:',
		mcpStartTime: '–í—Ä–µ–º–µ –Ω–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ:',
		mcpLicense: '–õ–∏—Ü–µ–Ω–∑:',
		method: '–ú–µ—Ç–æ–¥: ${method}',
		missingArgumentsError: '–õ–∏–ø—Å–≤–∞—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–∏: ${args}',
		missingChatParams: '–õ–∏–ø—Å–≤–∞—Ç –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: chatId –∏/–∏–ª–∏ –≤—ä–ø—Ä–æ—Å.',
		missingCommandParameter: '–õ–∏–ø—Å–≤–∞ –∫–æ–º–∞–Ω–¥–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä –≤ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ.',
		missingConfigError: '–õ–∏–ø—Å–≤–∞ .json –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∞ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞: ${key}',
		missingGroupNameAndDesc: '–õ–∏–ø—Å–≤–∞—Ç –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: –∏–º–µ –Ω–∞ –≥—Ä—É–ø–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.',
		missingGroupNameParam: '–õ–∏–ø—Å–≤–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä: –∏–º–µ –Ω–∞ –≥—Ä—É–ø–∞.',
		missingGroupParameterDelete: '–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ: –õ–∏–ø—Å–≤–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä: –∏–º–µ –Ω–∞ –≥—Ä—É–ø–∞.',
		missingGroupParameterStore: '–°—ä—Ö—Ä–∞–Ω—è–≤–∞–Ω–µ: –õ–∏–ø—Å–≤–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä: –∏–º–µ –Ω–∞ –≥—Ä—É–ø–∞.',
		missingNameAndContent: '–õ–∏–ø—Å–≤–∞—Ç –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: –∏–º–µ –∏ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ.',
		missingNameEmailPwd: '–õ–∏–ø—Å–≤–∞—Ç –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: –∏–º–µ, –∏–º–µ–π–ª –∏–ª–∏ –ø–∞—Ä–æ–ª–∞.',
		missingParametersError: formatMessage(templates.error, { action: '–õ–∏–ø—Å–≤–∞—â–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏', details: '${parameters}' }),
		missingParameterError: '–õ–∏–ø—Å–≤–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä: ${parameter}.',
		missingTokenAuth: '–õ–∏–ø—Å–≤–∞ —Ç–æ–∫–µ–Ω',
		missingTokenError: '–¢–æ–∫–µ–Ω—ä—Ç –ª–∏–ø—Å–≤–∞. –ú–æ–ª—è, –≤–ª–µ–∑—Ç–µ –∏ –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.',
		missingTokenGroups: '–¢–æ–∫–µ–Ω—ä—Ç –ª–∏–ø—Å–≤–∞. –ì—Ä—É–ø–∏—Ç–µ –Ω–µ –º–æ–≥–∞—Ç –¥–∞ –±—ä–¥–∞—Ç –≤–∞–ª–∏–¥–∏—Ä–∞–Ω–∏.',
		missingToolName: '–õ–∏–ø—Å–≤–∞ –∏–º–µ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç',
		missingUriParameter: '–õ–∏–ø—Å–≤–∞ URI –ø–∞—Ä–∞–º–µ—Ç—ä—Ä.',
		noChatData: '–ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ –ø–æ—Å–æ—á–µ–Ω–∏—è —á–∞—Ç.',
		noDescriptionProvided: '–ù–µ –µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ',
		noErrorMessage: '–ù—è–º–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞.',
		noServerResponse: '–ù–µ –µ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç —Å—ä—Ä–≤—ä—Ä–∞.',
		passwordEncEnabled: '–ü–∞—Ä–æ–ª–Ω–æ—Ç–æ –∫—Ä–∏–ø—Ç–∏—Ä–∞–Ω–µ –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–æ.',
		passwordIsRequired: '–ü–∞—Ä–æ–ª–∞—Ç–∞ –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞.',
		payload: '–ù–æ—Å–∏—Ç–µ–ª: ${payload}',
		portInUse: '–ü–æ—Ä—Ç –≥—Ä–µ—à–∫–∞: –ü–æ—Ä—Ç ${PORT} –≤–µ—á–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞.',
		portInvalid: '–ü–æ—Ä—Ç –≥—Ä–µ—à–∫–∞: PORT —Ç—Ä—è–±–≤–∞ –¥–∞ –µ —á–∏—Å–ª–æ –º–µ–∂–¥—É 1 –∏ 65535.',
		portValidated: 'PORT –µ –≤–∞–ª–∏–¥–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ: ${port}',
		proxyAuthMissing: '–õ–∏–ø—Å–≤–∞—Ç –¥–∞–Ω–Ω–∏ –∑–∞ –ø—Ä–æ–∫—Å–∏ –∞–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: '–ö–æ–Ω—Ñ–ª–∏–∫—Ç: usePublic –µ –∑–∞–¥–∞–¥–µ–Ω–æ –Ω–∞ false, —Ç—ä–π –∫–∞—Ç–æ —Å–∞ –ø–æ—Å–æ—á–µ–Ω–∏ –≥—Ä—É–ø–∏.',
		requestError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤–∫–∞: ${error}',
		requestSent: '–ó–∞—è–≤–∫–∞—Ç–∞ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞',
		restrictedGroupsError: '–ì—Ä–µ—à–∫–∞: –ù–µ–≤–∞–ª–∏–¥–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ RESTRICTED_GROUPS. –¢—Ä—è–±–≤–∞ –¥–∞ –µ \'true\' –∏–ª–∏ \'false\'. –¢–µ–∫—É—â–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω. –ù–∞–ª–∏—á–Ω–∏—Ç–µ –≥—Ä—É–ø–∏ —Å–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏.',
		responseError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ—Ç–≥–æ–≤–æ—Ä: ${error}',
		responseSentSuccess: formatMessage(templates.success, { action: '–°—Ç–∞—Ç—É—Å', details: '–£—Å–ø–µ—Ö' }),
		serverError: formatMessage(templates.error, { action: '–°—ä—Ä–≤—ä—Ä—ä—Ç –Ω–µ –º–æ–∂–∞ –¥–∞ –±—ä–¥–µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω', details: '${error}' }),
		serverListeningOnPort: '–°—ä—Ä–≤—ä—Ä—ä—Ç —Å–ª—É—à–∞ –Ω–∞ –ø–æ—Ä—Ç ${port}',
		serverRunning: '–°—ä—Ä–≤—ä—Ä—ä—Ç —Ä–∞–±–æ—Ç–∏ –Ω–∞ –ø–æ—Ä—Ç ${port}',
		serverShutdownLog: '–°—ä—Ä–≤—ä—Ä—ä—Ç –µ —Å–ø—Ä—è–Ω',
		serverStartedLog: '–°—ä—Ä–≤—ä—Ä—ä—Ç –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω.',
		serverStoppedLog: '–°—ä—Ä–≤—ä—Ä—ä—Ç –µ —Å–ø—Ä—è–Ω',
		sendingChatRequest: '–ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ —á–∞—Ç –∑–∞—è–≤–∫–∞ –∫—ä–º API',
		sourcesRetrieved: formatMessage(templates.success, { action: '–ò–∑—Ç–æ—á–Ω–∏—Ü–∏—Ç–µ —Å–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏', details: '${data}' }),
		startingServerWithConfig: '–°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä—Ä–≤—ä—Ä —Å —Å–ª–µ–¥–Ω–∞—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:',
		sslValidationSet: '${symbol} SSL –≤–∞–ª–∏–¥–∞—Ü–∏—è—Ç–∞ –µ –∑–∞–¥–∞–¥–µ–Ω–∞ –Ω–∞: ${value}',
		socketErrorPrefix: '–ì—Ä–µ—à–∫–∞:',
		storeGroupLog: '–°—ä—Ö—Ä–∞–Ω—è–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞ –≥—Ä—É–ø–∞ —Å –∏–º–µ: ${groupName} –∏ –æ–ø–∏—Å–∞–Ω–∏–µ: ${description}',
		storeGroupSuccess: '–ì—Ä—É–ø–∞—Ç–∞ –µ —É—Å–ø–µ—à–Ω–æ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∞: ${data}',
		storegroupError: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –≥—Ä—É–ø–∞: ${error}',
		storeGroupText: '–ì—Ä—É–ø–∞—Ç–∞ "${groupName}" –µ —É—Å–ø–µ—à–Ω–æ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID: ${id}.',
		unknownAddress: '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω IP',
		unknownCommandError: formatMessage(templates.error, { action: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –∫–æ–º–∞–Ω–¥–∞', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –≥—Ä–µ—à–∫–∞', details: '' }),
		unknownPort: '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω –ø–æ—Ä—Ç',
		unknownTool: '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${toolName}',
		tokenMissing: '–¢–æ–∫–µ–Ω—ä—Ç –ª–∏–ø—Å–≤–∞.',
    },
    he: {
		createSourceError: '◊©◊í◊ô◊ê◊î ◊ë◊ô◊¶◊ô◊®◊™ ◊î◊û◊ß◊ï◊®: ${error}',
		create_sourceUnknownError: '◊©◊í◊ô◊ê◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î ◊ë◊ô◊¶◊ô◊®◊™ ◊î◊û◊ß◊ï◊®: ${error}',
		returnStatus: '◊°◊ò◊ò◊ï◊°: ${Status}',
		extractedToken: '◊ò◊ï◊ß◊ü ◊©◊î◊ï◊§◊ß: ${token}',
		missingChatId: 'chatId ◊†◊ì◊®◊© ◊õ◊ì◊ô ◊ú◊ê◊ó◊ñ◊® ◊û◊ô◊ì◊¢ ◊¶\'◊ê◊ò.',
		missingQuestion: '◊î◊©◊ê◊ú◊î ◊ó◊°◊®◊î ◊ë◊ê◊®◊í◊ï◊û◊†◊ò◊ô◊ù.',
		ChatInfoRetrieved: '◊û◊ô◊ì◊¢ ◊¶\'◊ê◊ò ◊†◊©◊ú◊£: ${chatData}',
		InvalidGroups: '◊ß◊ë◊ï◊¶◊ï◊™ ◊ú◊ê ◊ó◊ï◊ß◊ô◊ï◊™: ${GROUPS}',
		sourceIdRequiredEditSource: 'sourceId ◊†◊ì◊®◊© ◊ú◊¢◊®◊ô◊õ◊™ ◊û◊ß◊ï◊®.',
		sourceIdRequiredRetrieveSource: 'sourceId ◊†◊ì◊®◊© ◊ú◊ê◊ó◊ñ◊ï◊® ◊û◊ß◊ï◊®.',
		ConnectionEstablished: '◊î◊ó◊ô◊ë◊ï◊® ◊†◊ß◊ë◊¢',
		ResponseSuccessfullySent: '◊î◊™◊í◊ï◊ë◊î ◊†◊©◊ú◊ó◊î ◊ë◊î◊¶◊ú◊ó◊î',
		ConnectionClosed: '◊î◊ó◊ô◊ë◊ï◊® ◊†◊°◊í◊®',
		ServerStopped: '◊î◊©◊®◊™ ◊†◊¢◊¶◊®',
		responseReceived: '◊™◊í◊ï◊ë◊î ◊î◊™◊ß◊ë◊ú◊î ◊¢◊ù ◊°◊ò◊ò◊ï◊°: ${status}',
		internalServerError: '◊©◊í◊ô◊ê◊™ ◊©◊®◊™ ◊§◊†◊ô◊û◊ô◊™',
		tcpServerError: '◊ê◊ô◊®◊¢◊î ◊©◊í◊ô◊ê◊î ◊ë◊©◊®◊™ ◊î-TCP:',
		unknownErrorOccured: '◊ê◊ô◊®◊¢◊î ◊©◊í◊ô◊ê◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î.',
		KeygenRequired: '◊†◊ì◊®◊© Keygen',
		unknownCommand: '◊§◊ß◊ï◊ì◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î',
		socketEmitLogNotActivated: '◊ß◊ï◊ë◊• ◊î◊ú◊ï◊í ◊ê◊ô◊†◊ï ◊û◊ï◊§◊¢◊ú.',
		socketEmitLogReadError: '◊©◊í◊ô◊ê◊î ◊ë◊ß◊®◊ô◊ê◊™ ◊ß◊ï◊ë◊• ◊î◊ú◊ï◊í.',
		deletesourceLog: formatMessage(templates.info, { action: '◊û◊ó◊ô◊ß◊™ ◊û◊ß◊ï◊®', details: '◊¢◊ù ◊©◊ù: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'sourceId ◊†◊ì◊®◊© ◊ú◊û◊ó◊ô◊ß◊™ ◊û◊ß◊ï◊®.',
		listGroupsSuccess: '◊®◊©◊ô◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™ ◊†◊©◊ú◊§◊î: ${GROUPS}',
		// Existing ones
		toolNotDefinedInConfig: formatMessage(templates.error, { action: '◊ß◊®◊ô◊ê◊™ ◊§◊ï◊†◊ß◊¶◊ô◊î ◊ú◊ê ◊ó◊ï◊ß◊ô◊™', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: '◊ß◊®◊ô◊ê◊™ ◊§◊ï◊†◊ß◊¶◊ô◊î ◊û◊ï◊©◊ë◊™◊™ ◊û◊¶◊ì ◊î◊©◊®◊™:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: '◊ß◊®◊ô◊ê◊™ ◊§◊ï◊†◊ß◊¶◊ô◊î ◊û◊ï◊©◊ë◊™◊™ ◊û◊¶◊ì ◊î◊©◊®◊™:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: '◊¢◊®◊ö RESTRICTED_GROUPS', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: '◊õ◊ú ◊î◊§◊ï◊†◊ß◊¶◊ô◊ï◊™ ◊û◊ï◊§◊¢◊ú◊ï◊™', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: '◊õ◊ú ◊î◊ß◊ë◊ï◊¶◊ï◊™ ◊™◊ß◊ô◊†◊ï◊™', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: '◊û◊ï◊§◊¢◊ú: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: '◊û◊ï◊§◊¢◊ú: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊™ API', details: '◊°◊ò◊ò◊ï◊°: ${status}, ◊†◊™◊ï◊†◊ô◊ù: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊™ ◊ë◊ß◊©◊™ API', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: 'API_URL ◊ú◊ê ◊ó◊ï◊ß◊ô', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'API_URL ◊ê◊ï◊û◊™◊î ◊ë◊î◊¶◊ú◊ó◊î', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: '◊ê◊ñ◊î◊®◊î', details: 'API_URL ◊ê◊ô◊†◊ï ◊û◊™◊ó◊ô◊ú ◊ë-"https://". ◊î-URL ◊û◊™◊ï◊ß◊ü.' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: '◊ê◊ñ◊î◊®◊î', details: 'API_URL ◊ê◊ô◊†◊ï ◊û◊°◊™◊ô◊ô◊ù ◊ë-"/api/v1". ◊î-URL ◊û◊™◊ï◊ß◊ü.' }),
		authFailed: '◊î◊ê◊ô◊û◊ï◊™ ◊†◊õ◊©◊ú.',
		authStarted: '◊î◊ê◊ô◊û◊ï◊™ ◊î◊™◊ó◊ô◊ú.',
		availableGroups: formatMessage(templates.success, { action: '◊ß◊ë◊ï◊¶◊ï◊™ ◊ñ◊û◊ô◊†◊ï◊™', details: '${availableGroups}' }),
		chatApiErrorDefault: '◊©◊í◊ô◊ê◊î ◊ë◊û◊î◊ú◊ö ◊ë◊ß◊©◊™ ◊î◊¶\'◊ê◊ò.',
		chatApiError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊ë◊ß◊©◊™ Chat API', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: '◊™◊í◊ï◊ë◊î ◊ú◊¶\'◊ê◊ò ◊î◊™◊ß◊ë◊ú◊î', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: '◊ë◊ï◊ì◊ß ◊ß◊ë◊ï◊¶◊ï◊™', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: '◊ú◊ß◊ï◊ó WebSocket ◊î◊™◊ó◊ë◊®', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: '◊ú◊ß◊ï◊ó WebSocket ◊†◊ï◊™◊ß', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: '◊ó◊ô◊ë◊ï◊® ◊ó◊ì◊© ◊î◊™◊ß◊ë◊ú', details: '◊û-${ip}:${port}' }),
			established: formatMessage(templates.success, { action: '◊î◊ó◊ô◊ë◊ï◊® ◊†◊ß◊ë◊¢', details: '' }),
			closed: formatMessage(templates.info, { action: '◊î◊ó◊ô◊ë◊ï◊® ◊†◊°◊í◊®', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: '◊†◊™◊ï◊†◊ô◊ù ◊î◊™◊ß◊ë◊ú◊ï', details: '◊û-${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊¢◊ô◊ë◊ï◊ì ◊î◊ï◊ì◊¢◊î', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: '◊§◊ï◊®◊û◊ò ◊î◊ï◊ì◊¢◊î ◊ú◊ê ◊ó◊ï◊ß◊ô', details: '' }),
			socketError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊™ Socket', details: '◊ë-${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊™ ◊©◊®◊™', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: '◊î◊©◊®◊™ ◊§◊ï◊¢◊ú', details: '◊¢◊ú ◊§◊ï◊®◊ò ${port}' }),
			stopped: formatMessage(templates.info, { action: '◊î◊©◊®◊™ ◊†◊¢◊¶◊®', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊î◊û◊©◊ö ◊î◊©◊ô◊ó◊î', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: '◊î◊©◊ô◊ó◊î ◊û◊û◊©◊ô◊õ◊î', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: '◊î◊©◊ô◊ó◊î ◊î◊ï◊©◊ú◊û◊î ◊ë◊î◊¶◊ú◊ó◊î', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: '◊î◊ß◊ë◊ï◊¶◊î ◊†◊ï◊¶◊®◊î ◊ë◊î◊¶◊ú◊ó◊î', details: '${data}' }),
		createSourceLog: '◊¢◊ï◊®◊ö ◊û◊ß◊ï◊® ◊¢◊ù ID: ${sourceId}, ◊õ◊ï◊™◊®◊™: ${title}',
		createSourceSuccess: '◊û◊ß◊ï◊® ◊†◊ï◊¶◊® ◊ë◊î◊¶◊ú◊ó◊î: ${data}',
		createUserError: '◊©◊í◊ô◊ê◊î ◊ë◊ô◊¶◊ô◊®◊™ ◊û◊©◊™◊û◊©: ${error}',
		createUserLog: '◊ô◊ï◊¶◊® ◊û◊©◊™◊û◊© ◊ó◊ì◊©: ${payload}',
		createUserSuccess: '◊û◊©◊™◊û◊© ◊†◊ï◊¶◊® ◊ë◊î◊¶◊ú◊ó◊î: ${data}',
		deactivatedFunctions: '◊§◊ï◊†◊ß◊¶◊ô◊ï◊™ ◊û◊ï◊©◊ë◊™◊ï◊™:',
		deleteGroupInternalError: '◊©◊í◊ô◊ê◊î ◊§◊†◊ô◊û◊ô◊™ ◊ë◊û◊ó◊ô◊ß◊™ ◊ß◊ë◊ï◊¶◊î.',
		deleteGroupLog: formatMessage(templates.info, { action: '◊û◊ï◊ó◊ß ◊ß◊ë◊ï◊¶◊î', details: '◊¢◊ù ◊©◊ù: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: '◊î◊ß◊ë◊ï◊¶◊î ◊†◊û◊ó◊ß◊î ◊ë◊î◊¶◊ú◊ó◊î', details: '${data}' }),
		deleteGroupText: '◊î◊ß◊ë◊ï◊¶◊î "${groupName}" ◊†◊û◊ó◊ß◊î ◊ë◊î◊¶◊ú◊ó◊î.',
		deleteSourceError: '◊©◊í◊ô◊ê◊î ◊ë◊û◊ó◊ô◊ß◊™ ◊î◊û◊ß◊ï◊®: ${error}',
		deleteSourceFailedTryAgain: '◊û◊ó◊ô◊ß◊™ ◊î◊û◊ß◊ï◊® ◊†◊õ◊©◊ú◊î. ◊ê◊†◊ê ◊†◊°◊î ◊©◊ï◊ë ◊û◊ê◊ï◊ó◊® ◊ô◊ï◊™◊®.',
		deleteUserError: '◊©◊í◊ô◊ê◊î ◊ë◊û◊ó◊ô◊ß◊™ ◊î◊û◊©◊™◊û◊©: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: '◊û◊ï◊ó◊ß ◊û◊©◊™◊û◊©', details: '◊¢◊ù ◊©◊ù: ${UserName}' }),
		deleteUserSuccess: '◊û◊©◊™◊û◊© ◊†◊û◊ó◊ß ◊ë◊î◊¶◊ú◊ó◊î: ${data}',
		decryptPwdError: '◊ú◊ê ◊†◊ô◊™◊ü ◊ú◊§◊¢◊†◊ó ◊ê◊™ ◊î◊°◊ô◊°◊û◊î.',
		decryptionError: '◊©◊í◊ô◊ê◊™ ◊§◊¢◊†◊ï◊ó.',
		dataReceivedMsg: '◊†◊™◊ï◊†◊ô◊ù ◊î◊™◊ß◊ë◊ú◊ï: ${data}',
		emailRequiredForDelete: '◊†◊ì◊®◊© ◊ê◊ô◊û◊ô◊ô◊ú ◊ú◊û◊ó◊ô◊ß◊™ ◊û◊©◊™◊û◊©.',
		emailRequiredForEdit: '◊†◊ì◊®◊© ◊ê◊ô◊û◊ô◊ô◊ú ◊©◊ú ◊û◊©◊™◊û◊© ◊ú◊¢◊®◊ô◊õ◊™ ◊î◊®◊©◊ï◊û◊î.',
		editSourceError: '◊©◊í◊ô◊ê◊î ◊ë◊¢◊®◊ô◊õ◊™ ◊î◊û◊ß◊ï◊®: ${error}',
		editSourceLog: '◊¢◊ï◊®◊ö ◊û◊ß◊ï◊® ◊¢◊ù ID: ${sourceId}, ◊õ◊ï◊™◊®◊™: ${title}',
		editSourceSuccess: '◊î◊û◊ß◊ï◊® ◊†◊¢◊®◊ö ◊ë◊î◊¶◊ú◊ó◊î: ${data}',
		editUserError: '◊©◊í◊ô◊ê◊î ◊ë◊¢◊®◊ô◊õ◊™ ◊î◊û◊©◊™◊û◊©: ${error}',
		editUserSuccess: '◊î◊û◊©◊™◊û◊© ◊†◊¢◊®◊ö ◊ë◊î◊¶◊ú◊ó◊î: ${data}',
		encryptPwdError: '◊ú◊ê ◊†◊ô◊™◊ü ◊ú◊î◊¶◊§◊ô◊ü ◊ê◊™ ◊î◊°◊ô◊°◊û◊î.',
		encryptionDisabled: '◊û◊ï◊©◊ë◊™',
		encryptionEnabled: '◊û◊ï◊§◊¢◊ú',
		encryptionError: '◊©◊í◊ô◊ê◊™ ◊î◊¶◊§◊†◊î.',
		errorHandlingRequest: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊ò◊ô◊§◊ï◊ú ◊ë◊ë◊ß◊©◊î', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊¢◊ô◊ë◊ï◊ì ◊î◊ï◊ì◊¢◊î:', details: '${error}' }),
		fetchChatInfoError: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ó◊ñ◊ï◊® ◊û◊ô◊ì◊¢ ◊î◊¶\'◊ê◊ò: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ó◊ñ◊ï◊® ◊ß◊ë◊ï◊¶◊ï◊™', details: '${error}' }),
		fetchGroupsErrorBackup: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ó◊ñ◊ï◊® ◊ß◊ë◊ï◊¶◊ï◊™.',
		fetchGroupsErrorPrefix: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ó◊ñ◊ï◊® ◊ß◊ë◊ï◊¶◊ï◊™:',
		fetchSourcesError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ó◊ñ◊ï◊® ◊û◊ß◊ï◊®◊ï◊™', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: '◊û◊ê◊ó◊ñ◊® ◊û◊ß◊ï◊®◊ï◊™ ◊¢◊ë◊ï◊® ◊ß◊ë◊ï◊¶◊î: ${groupName}', details: '' }),
		fileReadErrorTitle: '◊©◊í◊ô◊ê◊î ◊ë◊ß◊®◊ô◊ê◊™ ◊ß◊ï◊ë◊•.',
		functionDisabled: '◊û◊ï◊©◊ë◊™',
		genericServerErrorPrefix: '◊©◊í◊ô◊ê◊î:',
		gotGetSourceResponse: formatMessage(templates.success, { action: '◊ß◊ô◊ë◊ú◊™◊ô ◊™◊í◊ï◊ë◊î ◊¢◊ë◊ï◊® get_source', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: '◊ß◊ô◊ë◊ú◊™◊ô ◊™◊í◊ï◊ë◊î ◊¢◊ë◊ï◊® list_groups', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: '◊ß◊ô◊ë◊ú◊™◊ô ◊™◊í◊ï◊ë◊î ◊¢◊ë◊ï◊® list_sources', details: '${data}' }),
		groupFetchError: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ó◊ñ◊ï◊® ◊ß◊ë◊ï◊¶◊ï◊™: ◊ê◊†◊ê ◊†◊°◊î ◊©◊ï◊ë ◊û◊ê◊ï◊ó◊® ◊ô◊ï◊™◊®.',
		groupNameRequired: '◊†◊ì◊®◊© ◊©◊ù ◊ß◊ë◊ï◊¶◊î ◊ú◊ë◊ß◊©◊î ◊ñ◊ï.',
		groupValidationError: '◊©◊í◊ô◊ê◊î ◊ë◊ê◊ô◊û◊ï◊™ ◊ß◊ë◊ï◊¶◊î: ${error}',
		groupValidationErrorPrefix: '◊©◊í◊ô◊ê◊î: ${error}',
		handlingToolRequest: '◊û◊ò◊§◊ú ◊ë◊ë◊ß◊©◊™ ◊õ◊ú◊ô: ${tool}',
		headers: 'Headers: ${headers}',
		incomingMessage: '◊î◊ï◊ì◊¢◊î ◊†◊õ◊†◊°◊™: ${MESSAGE}',
		invalidArgumentsError: '◊©◊í◊ô◊ê◊î: ◊ú◊ê ◊†◊û◊¶◊ê◊ï ◊ê◊®◊í◊ï◊û◊†◊ò◊ô◊ù ◊ó◊ï◊ß◊ô◊ô◊ù ◊ë◊ß◊ú◊ò: ${input}',
		invalidGroups: '◊ß◊ë◊ï◊¶◊ï◊™ ◊ú◊ê ◊ó◊ï◊ß◊ô◊ï◊™: ${groups}',
		invalidGroupsError: '◊ß◊ë◊ï◊¶◊ï◊™ ◊ú◊ê ◊ó◊ï◊ß◊ô◊ï◊™: ${invalidGroups}',
		invalidGroupsLog: '◊ú◊ê ◊ó◊ï◊ß◊ô: ${groups}',
		invalidMessage: '◊î◊ï◊ì◊¢◊î ◊ú◊ê ◊ó◊ï◊ß◊ô◊™',
		invalidOrEmptyRequest: '◊î◊ï◊ì◊¢◊î ◊ú◊ê ◊ó◊ï◊ß◊ô◊™ ◊ê◊ï ◊ë◊ß◊©◊î ◊®◊ô◊ß◊î.',
		keygenDisabled: '◊û◊ï◊©◊ë◊™',
		keygenEnabled: '◊û◊ï◊§◊¢◊ú',
		keygenErrorPrefix: '◊©◊í◊ô◊ê◊î ◊ë◊ë◊ß◊©◊™ keygen:',
		keygenSuccess: 'Keygen ◊î◊ï◊©◊ú◊ù ◊ë◊î◊¶◊ú◊ó◊î.',
		langNotSupported: '◊î◊©◊§◊î "${lang}" ◊ê◊ô◊†◊î ◊†◊™◊û◊õ◊™. ◊ó◊ï◊ñ◊® ◊ú◊ê◊†◊í◊ú◊ô◊™.',
		loginEmailPasswordRequired: '◊î◊î◊™◊ó◊ë◊®◊ï◊™ ◊†◊õ◊©◊ú◊î: ◊†◊ì◊®◊©◊ô◊ù ◊ê◊ô◊û◊ô◊ô◊ú ◊ï◊°◊ô◊°◊û◊î.',
		loginError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊™ ◊î◊™◊ó◊ë◊®◊ï◊™', details: '${error}' }),
		loginErrorPrefix: '◊©◊í◊ô◊ê◊î: ${error}',
		loginMissingCredentials: '◊î◊î◊™◊ó◊ë◊®◊ï◊™ ◊†◊õ◊©◊ú◊î: ◊†◊ì◊®◊©◊ô◊ù ◊ê◊ô◊û◊ô◊ô◊ú ◊ï◊°◊ô◊°◊û◊î.',
		loginMissingCredentialsAlternative: '◊î◊î◊™◊ó◊ë◊®◊ï◊™ ◊†◊õ◊©◊ú◊î: ◊†◊ì◊®◊©◊ô◊ù ◊ê◊ô◊û◊ô◊ô◊ú ◊ï◊°◊ô◊°◊û◊î.',
		loginResponse: '◊™◊í◊ï◊ë◊î ◊ú◊î◊™◊ó◊ë◊®◊ï◊™',
		loginSuccess: formatMessage(templates.success, { action: '◊î◊î◊™◊ó◊ë◊®◊ï◊™ ◊î◊¶◊ú◊ô◊ó◊î', details: '${data}' }),
		loginTokenReceived: '◊ò◊ï◊ß◊ü ◊î◊™◊ß◊ë◊ú: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: '◊û◊ï◊§◊¢◊ú: ${status}' }),
		logChangeError: '◊©◊í◊ô◊ê◊î ◊ë◊¢◊ô◊ë◊ï◊ì ◊©◊ô◊†◊ï◊ô◊ô◊ù ◊ë◊ß◊ï◊ë◊• ◊î◊ú◊ï◊í: ${error}',
		logReadError: '◊©◊í◊ô◊ê◊î ◊ë◊ß◊®◊ô◊ê◊™ ◊ß◊ï◊ë◊• ◊î◊ú◊ï◊í: ${error}',
		logViewerRunning: '◊û◊¶◊ô◊í ◊î◊ú◊ï◊í◊ô◊ù ◊§◊ï◊¢◊ú ◊ë-http://localhost:${port}',
		logoutError: '◊©◊í◊ô◊ê◊î ◊ë◊ô◊ô◊¶◊ô◊ê◊î: ${error}',
		logoutFailedTryAgain: '◊î◊ô◊¶◊ô◊ê◊î ◊†◊õ◊©◊ú◊î. ◊ê◊†◊ê ◊†◊°◊î ◊©◊ï◊ë ◊û◊ê◊ï◊ó◊® ◊ô◊ï◊™◊®.',
		logoutSuccess: '◊ô◊¶◊ô◊ê◊î ◊î◊¶◊ú◊ô◊ó◊î: ${data}',
		makingGetSourceRequest: '◊ô◊ï◊¶◊® ◊ë◊ß◊©◊™ get_source: ${args}',
		makingListGroupsRequest: '◊ô◊ï◊¶◊® ◊ë◊ß◊©◊™ list_groups',
		makingListSourcesRequest: '◊ô◊ï◊¶◊® ◊ë◊ß◊©◊™ list_sources: ${args}',
		mcpVersion: '◊í◊®◊°◊î:',
		mcpPort: '◊§◊ï◊®◊ò:',
		mcpStartTime: '◊©◊¢◊™ ◊î◊™◊ó◊ú◊î:',
		mcpLicense: '◊®◊ô◊©◊ô◊ï◊ü:',
		method: '◊©◊ô◊ò◊î: ${method}',
		missingArgumentsError: '◊ê◊®◊í◊ï◊û◊†◊ò◊ô◊ù ◊ó◊°◊®◊ô◊ù: ${args}',
		missingChatParams: '◊§◊®◊û◊ò◊®◊ô◊ù ◊†◊ì◊®◊©◊ô◊ù ◊ó◊°◊®◊ô◊ù: chatId ◊ï/◊ê◊ï ◊©◊ê◊ú◊î.',
		missingCommandParameter: '◊§◊®◊û◊ò◊® ◊§◊ß◊ï◊ì◊î ◊ó◊°◊® ◊ë◊î◊ï◊ì◊¢◊î.',
		missingConfigError: '◊ó◊°◊®◊î ◊û◊©◊™◊†◊î ◊ß◊ï◊†◊§◊ô◊í◊ï◊®◊¶◊ô◊î .json: ${key}',
		missingGroupNameAndDesc: '◊§◊®◊û◊ò◊®◊ô◊ù ◊†◊ì◊®◊©◊ô◊ù ◊ó◊°◊®◊ô◊ù: groupName ◊ï◊™◊ô◊ê◊ï◊®.',
		missingGroupNameParam: '◊§◊®◊û◊ò◊® ◊†◊ì◊®◊© ◊ó◊°◊®: groupName.',
		missingGroupParameterDelete: '◊û◊ó◊ô◊ß◊î: ◊§◊®◊û◊ò◊® ◊†◊ì◊®◊© ◊ó◊°◊®: groupName.',
		missingGroupParameterStore: '◊ê◊ó◊°◊ï◊ü: ◊§◊®◊û◊ò◊® ◊†◊ì◊®◊© ◊ó◊°◊®: groupName.',
		missingNameAndContent: '◊§◊®◊û◊ò◊®◊ô◊ù ◊†◊ì◊®◊©◊ô◊ù ◊ó◊°◊®◊ô◊ù: ◊©◊ù ◊ï◊™◊ï◊õ◊ü.',
		missingNameEmailPwd: '◊§◊®◊û◊ò◊®◊ô◊ù ◊†◊ì◊®◊©◊ô◊ù ◊ó◊°◊®◊ô◊ù: ◊©◊ù, ◊ê◊ô◊û◊ô◊ô◊ú ◊ê◊ï ◊°◊ô◊°◊û◊î.',
		missingParametersError: formatMessage(templates.error, { action: '◊§◊®◊û◊ò◊®◊ô◊ù ◊ó◊°◊®◊ô◊ù', details: '${parameters}' }),
		missingParameterError: '◊§◊®◊û◊ò◊® ◊†◊ì◊®◊© ◊ó◊°◊®: ${parameter}.',
		missingTokenAuth: '◊ò◊ï◊ß◊ü ◊ó◊°◊®',
		missingTokenError: '◊ò◊ï◊ß◊ü ◊ó◊°◊®. ◊ê◊†◊ê ◊î◊™◊ó◊ë◊® ◊ï◊†◊°◊î ◊©◊ï◊ë.',
		missingTokenGroups: '◊ò◊ï◊ß◊ü ◊ó◊°◊®. ◊ú◊ê ◊†◊ô◊™◊ü ◊ú◊ê◊û◊™ ◊ß◊ë◊ï◊¶◊ï◊™.',
		missingToolName: '◊©◊ù ◊õ◊ú◊ô ◊ó◊°◊®',
		missingUriParameter: '◊§◊®◊û◊ò◊® URI ◊ó◊°◊®.',
		noChatData: '◊ú◊ê ◊†◊û◊¶◊ê◊ï ◊†◊™◊ï◊†◊ô◊ù ◊ú◊¶\'◊ê◊ò ◊î◊°◊§◊¶◊ô◊§◊ô.',
		noDescriptionProvided: '◊ú◊ê ◊°◊ï◊§◊ß◊î ◊™◊ô◊ê◊ï◊®',
		noErrorMessage: '◊ê◊ô◊ü ◊î◊ï◊ì◊¢◊™ ◊©◊í◊ô◊ê◊î.',
		noServerResponse: '◊ú◊ê ◊î◊™◊ß◊ë◊ú◊î ◊™◊í◊ï◊ë◊î ◊û◊î◊©◊®◊™.',
		passwordEncEnabled: '◊î◊¶◊§◊†◊™ ◊°◊ô◊°◊û◊î ◊û◊ï◊§◊¢◊ú◊™.',
		passwordIsRequired: '◊†◊ì◊®◊©◊™ ◊°◊ô◊°◊û◊î.',
		payload: 'Payload: ${payload}',
		portInUse: '◊©◊í◊ô◊ê◊™ ◊§◊ï◊®◊ò: ◊î◊§◊ï◊®◊ò ${PORT} ◊õ◊ë◊® ◊ë◊©◊ô◊û◊ï◊©.',
		portInvalid: '◊©◊í◊ô◊ê◊™ ◊§◊ï◊®◊ò: PORT ◊ó◊ô◊ô◊ë ◊ú◊î◊ô◊ï◊™ ◊û◊°◊§◊® ◊ë◊ô◊ü 1 ◊ú-65535.',
		portValidated: 'PORT ◊ê◊ï◊û◊™◊î ◊ë◊î◊¶◊ú◊ó◊î: ${port}',
		proxyAuthMissing: '◊†◊™◊ï◊†◊ô ◊ê◊ô◊û◊ï◊™ Proxy ◊ó◊°◊®◊ô◊ù.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: '◊°◊õ◊°◊ï◊ö: usePublic ◊î◊ï◊í◊ì◊® ◊¢◊ú false ◊û◊õ◊ô◊ï◊ï◊ü ◊©◊ß◊ë◊ï◊¶◊ï◊™ ◊û◊¶◊ï◊ô◊†◊ï◊™.',
		requestError: '◊©◊í◊ô◊ê◊™ ◊ë◊ß◊©◊î: ${error}',
		requestSent: '◊ë◊ß◊©◊î ◊†◊©◊ú◊ó◊î',
		restrictedGroupsError: '◊©◊í◊ô◊ê◊î: ◊ß◊ï◊†◊§◊ô◊í◊ï◊®◊¶◊ô◊ô◊™ RESTRICTED_GROUPS ◊ú◊ê ◊ó◊ï◊ß◊ô◊™. ◊ó◊ô◊ô◊ë ◊ú◊î◊ô◊ï◊™ \'true\' ◊ê◊ï \'false\'. ◊¢◊®◊ö ◊†◊ï◊õ◊ó◊ô: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS ◊û◊ï◊§◊¢◊ú: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS ◊û◊ï◊§◊¢◊ú. ◊î◊ß◊ë◊ï◊¶◊ï◊™ ◊î◊ñ◊û◊ô◊†◊ï◊™ ◊û◊ï◊í◊ë◊ú◊ï◊™.',
		responseError: '◊©◊í◊ô◊ê◊™ ◊™◊í◊ï◊ë◊î: ${error}',
		// responseReceived: formatMessage(templates.success, { action: 'Response received', details: '${response}' }),
		responseSentSuccess: formatMessage(templates.success, { action: '◊°◊ò◊ò◊ï◊°', details: '◊î◊¶◊ú◊ó◊î' }),
		serverError: formatMessage(templates.error, { action: '◊î◊©◊®◊™ ◊ú◊ê ◊î◊¶◊ú◊ô◊ó ◊ú◊î◊™◊ó◊ô◊ú', details: '${error}' }),
		serverListeningOnPort: '◊î◊©◊®◊™ ◊û◊ê◊ñ◊ô◊ü ◊¢◊ú ◊§◊ï◊®◊ò ${port}',
		serverRunning: '◊î◊©◊®◊™ ◊§◊ï◊¢◊ú ◊¢◊ú ◊§◊ï◊®◊ò ${port}',
		serverShutdownLog: '◊õ◊ô◊ë◊ï◊ô ◊î◊©◊®◊™',
		serverStartedLog: '◊î◊©◊®◊™ ◊î◊™◊ó◊ô◊ú.',
		serverStoppedLog: '◊î◊©◊®◊™ ◊†◊¢◊¶◊®',
		sendingChatRequest: '◊©◊ï◊ú◊ó ◊ë◊ß◊©◊™ ◊¶\'◊ê◊ò ◊ú-API',
		sourcesRetrieved: formatMessage(templates.success, { action: '◊û◊ß◊ï◊®◊ï◊™ ◊†◊©◊ú◊§◊ï', details: '${data}' }),
		startingServerWithConfig: '◊û◊§◊¢◊ô◊ú ◊©◊®◊™ ◊¢◊ù ◊î◊ß◊ï◊†◊§◊ô◊í◊ï◊®◊¶◊ô◊î ◊î◊ë◊ê◊î:',
		sslValidationSet: '${symbol} ◊ê◊ô◊û◊ï◊™ SSL ◊û◊ï◊í◊ì◊® ◊ú: ${value}',
		socketErrorPrefix: '◊©◊í◊ô◊ê◊î:',
		storeGroupLog: '◊û◊ê◊ó◊°◊ü ◊ß◊ë◊ï◊¶◊î ◊ó◊ì◊©◊î ◊¢◊ù ◊©◊ù: ${groupName} ◊ï◊™◊ô◊ê◊ï◊®: ${description}',
		storeGroupSuccess: '◊î◊ß◊ë◊ï◊¶◊î ◊†◊©◊û◊®◊î ◊ë◊î◊¶◊ú◊ó◊î: ${data}',
		storegroupError: '◊©◊í◊ô◊ê◊î ◊ë◊ô◊¶◊ô◊®◊™ ◊ß◊ë◊ï◊¶◊î: ${error}',
		storeGroupText: '◊î◊ß◊ë◊ï◊¶◊î "${groupName}" ◊†◊©◊û◊®◊î ◊ë◊î◊¶◊ú◊ó◊î ◊¢◊ù ID: ${id}.',
		unknownAddress: '◊õ◊™◊ï◊ë◊™ IP ◊ú◊ê ◊ô◊ì◊ï◊¢◊î',
		unknownCommandError: formatMessage(templates.error, { action: '◊§◊ß◊ï◊ì◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: '◊©◊í◊ô◊ê◊î ◊ú◊ê ◊ô◊ì◊ï◊¢◊î', details: '' }),
		unknownPort: '◊§◊ï◊®◊ò ◊ú◊ê ◊ô◊ì◊ï◊¢',
		unknownTool: '◊õ◊ú◊ô ◊ú◊ê ◊ô◊ì◊ï◊¢: ${toolName}',
		tokenMissing: '◊ò◊ï◊ß◊ü ◊ó◊°◊®.',
	},
    ar: {
		createSourceError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿµÿØÿ±: ${error}',
		create_sourceUnknownError: 'ÿÆÿ∑ÿ£ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿµÿØÿ±: ${error}',
		returnStatus: 'ÿßŸÑÿ≠ÿßŸÑÿ©: ${Status}',
		extractedToken: 'ÿßŸÑÿ™ŸàŸÉŸÜ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿ±ÿ¨: ${token}',
		missingChatId: 'ŸÖÿ∑ŸÑŸàÿ® chatId ŸÑÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿØÿ±ÿØÿ¥ÿ©.',
		missingQuestion: 'ÿßŸÑÿ≥ÿ§ÿßŸÑ ŸÖŸÅŸÇŸàÿØ ŸÅŸä ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑.',
		ChatInfoRetrieved: 'ÿ™ŸÖ ÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿØÿ±ÿØÿ¥ÿ©: ${chatData}',
		InvalidGroups: 'ŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠ÿ©: ${GROUPS}',
		sourceIdRequiredEditSource: 'ŸÖÿ∑ŸÑŸàÿ® sourceId ŸÑÿ™ÿ≠ÿ±Ÿäÿ± ŸÖÿµÿØÿ±.',
		sourceIdRequiredRetrieveSource: 'ŸÖÿ∑ŸÑŸàÿ® sourceId ŸÑÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ŸÖÿµÿØÿ±.',
		ConnectionEstablished: 'ÿ™ŸÖ ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑÿßÿ™ÿµÿßŸÑ',
		ResponseSuccessfullySent: 'ÿ™ŸÖ ÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ±ÿØ ÿ®ŸÜÿ¨ÿßÿ≠',
		ConnectionClosed: 'ÿ™ŸÖ ÿ•ÿ∫ŸÑÿßŸÇ ÿßŸÑÿßÿ™ÿµÿßŸÑ',
		ServerStopped: 'ÿ™ŸÖ ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿÆÿßÿØŸÖ',
		responseReceived: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ±ÿØ ÿ®ÿßŸÑÿ≠ÿßŸÑÿ©: ${status}',
		internalServerError: 'ÿÆÿ∑ÿ£ ÿØÿßÿÆŸÑŸä ŸÅŸä ÿßŸÑÿÆÿßÿØŸÖ',
		tcpServerError: 'ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ŸÅŸä ÿÆÿßÿØŸÖ TCP:',
		unknownErrorOccured: 'ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ.',
		KeygenRequired: 'ŸÖÿ∑ŸÑŸàÿ® Keygen',
		unknownCommand: 'ÿ£ŸÖÿ± ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ',
		socketEmitLogNotActivated: 'ŸÖŸÑŸÅ ÿßŸÑÿ≥ÿ¨ŸÑ ÿ∫Ÿäÿ± ŸÖŸÅÿπŸÑ.',
		socketEmitLogReadError: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÇÿ±ÿßÿ°ÿ© ŸÖŸÑŸÅ ÿßŸÑÿ≥ÿ¨ŸÑ.',
		deletesourceLog: formatMessage(templates.info, { action: 'ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿµÿØÿ±', details: 'ÿ®ÿßŸÑÿßÿ≥ŸÖ: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'ŸÖÿ∑ŸÑŸàÿ® sourceId ŸÑÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿµÿØÿ±.',
		listGroupsSuccess: 'ÿ™ŸÖ ÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™: ${GROUPS}',
		// Existing ones
		toolNotDefinedInConfig: formatMessage(templates.error, { action: 'ŸÜÿØÿßÿ° ÿØÿßŸÑÿ© ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: 'ŸÜÿØÿßÿ° ÿØÿßŸÑÿ© ŸÖÿπÿ∑ŸÑ ŸÖŸÜ ÿ¨ÿßŸÜÿ® ÿßŸÑÿÆÿßÿØŸÖ:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: 'ŸÜÿØÿßÿ° ÿØÿßŸÑÿ© ŸÖÿπÿ∑ŸÑ ŸÖŸÜ ÿ¨ÿßŸÜÿ® ÿßŸÑÿÆÿßÿØŸÖ:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: 'ŸÇŸäŸÖÿ© RESTRICTED_GROUPS', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ÿ¨ŸÖŸäÿπ ÿßŸÑÿØŸàÿßŸÑ', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: 'ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿµÿßŸÑÿ≠ÿ©', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: 'ŸÖŸÅÿπŸÑ: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: 'ŸÖŸÅÿπŸÑ: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä API', details: 'ÿßŸÑÿ≠ÿßŸÑÿ©: ${status}, ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ∑ŸÑÿ® API', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: 'API_URL ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ API_URL ÿ®ŸÜÿ¨ÿßÿ≠', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: 'ÿ™ÿ≠ÿ∞Ÿäÿ±', details: 'API_URL ŸÑÿß Ÿäÿ®ÿØÿ£ ÿ®ŸÄ "https://". Ÿäÿ™ŸÖ ÿ™ÿπÿØŸäŸÑ URL.' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: 'ÿ™ÿ≠ÿ∞Ÿäÿ±', details: 'API_URL ŸÑÿß ŸäŸÜÿ™ŸáŸä ÿ®ŸÄ "/api/v1". Ÿäÿ™ŸÖ ÿ™ÿπÿØŸäŸÑ URL.' }),
		authFailed: 'ŸÅÿ¥ŸÑ ÿßŸÑŸÖÿµÿßÿØŸÇÿ©.',
		authStarted: 'ÿ®ÿØÿ£ÿ™ ÿßŸÑŸÖÿµÿßÿØŸÇÿ©.',
		availableGroups: formatMessage(templates.success, { action: 'ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿßŸÑŸÖÿ™ÿßÿ≠ÿ©', details: '${availableGroups}' }),
		chatApiErrorDefault: 'ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿ∑ŸÑÿ® ÿßŸÑÿØÿ±ÿØÿ¥ÿ©.',
		chatApiError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ∑ŸÑÿ® Chat API', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿ±ÿØ ÿßŸÑÿØÿ±ÿØÿ¥ÿ©', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: 'ÿ¨ÿßÿ±Ÿç ŸÅÿ≠ÿµ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: 'ÿ™ŸÖ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿπŸÖŸäŸÑ WebSocket', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: 'ÿ™ŸÖ ŸÅÿµŸÑ ÿπŸÖŸäŸÑ WebSocket', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: 'ÿ™ŸÖ ŸÇÿ®ŸàŸÑ ÿßÿ™ÿµÿßŸÑ ÿ¨ÿØŸäÿØ', details: 'ŸÖŸÜ ${ip}:${port}' }),
			established: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑÿßÿ™ÿµÿßŸÑ', details: '' }),
			closed: formatMessage(templates.info, { action: 'ÿ™ŸÖ ÿ•ÿ∫ŸÑÿßŸÇ ÿßŸÑÿßÿ™ÿµÿßŸÑ', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™', details: 'ŸÖŸÜ ${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ±ÿ≥ÿßŸÑÿ©', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: 'ÿ™ŸÜÿ≥ŸäŸÇ ÿ±ÿ≥ÿßŸÑÿ© ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠', details: '' }),
			socketError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä Socket', details: 'ŸÅŸä ${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿÆÿßÿØŸÖ', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: 'ÿßŸÑÿÆÿßÿØŸÖ ŸäÿπŸÖŸÑ', details: 'ÿπŸÑŸâ ÿßŸÑŸÖŸÜŸÅÿ∞ ${port}' }),
			stopped: formatMessage(templates.info, { action: 'ÿ™ŸÖ ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿÆÿßÿØŸÖ', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÖÿ™ÿßÿ®ÿπÿ© ÿßŸÑŸÖÿ≠ÿßÿØÿ´ÿ©', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: 'ÿßŸÑŸÖÿ≠ÿßÿØÿ´ÿ© ŸÖÿ≥ÿ™ŸÖÿ±ÿ©', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: 'ÿ™ŸÖÿ™ ŸÖÿ™ÿßÿ®ÿπÿ© ÿßŸÑŸÖÿ≠ÿßÿØÿ´ÿ© ÿ®ŸÜÿ¨ÿßÿ≠', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ÿ®ŸÜÿ¨ÿßÿ≠', details: '${data}' }),
		createSourceLog: 'ÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑŸÖÿµÿØÿ± ÿ®ÿßŸÑŸÖÿπÿ±ŸÅ: ${sourceId}, ÿßŸÑÿπŸÜŸàÿßŸÜ: ${title}',
		createSourceSuccess: 'ÿ™ŸÖ ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿµÿØÿ± ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		createUserError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: ${error}',
		createUserLog: 'ÿ•ŸÜÿ¥ÿßÿ° ŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ¨ÿØŸäÿØ: ${payload}',
		createUserSuccess: 'ÿ™ŸÖ ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		deactivatedFunctions: 'ÿßŸÑÿØŸàÿßŸÑ ÿßŸÑŸÖÿπÿ∑ŸÑÿ©:',
		deleteGroupInternalError: 'ÿÆÿ∑ÿ£ ÿØÿßÿÆŸÑŸä ŸÅŸä ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ©.',
		deleteGroupLog: formatMessage(templates.info, { action: 'ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ©', details: 'ÿ®ÿßŸÑÿßÿ≥ŸÖ: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ÿ®ŸÜÿ¨ÿßÿ≠', details: '${data}' }),
		deleteGroupText: 'ÿ™ŸÖ ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© "${groupName}" ÿ®ŸÜÿ¨ÿßÿ≠.',
		deleteSourceError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿµÿØÿ±: ${error}',
		deleteSourceFailedTryAgain: 'ŸÅÿ¥ŸÑ ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿµÿØÿ±. Ÿäÿ±ÿ¨Ÿâ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ ŸÑÿßÿ≠ŸÇŸãÿß.',
		deleteUserError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: 'ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ', details: 'ÿ®ÿßŸÑÿßÿ≥ŸÖ: ${UserName}' }),
		deleteUserSuccess: 'ÿ™ŸÖ ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		decryptPwdError: 'ŸÑÿß ŸäŸÖŸÉŸÜ ŸÅŸÉ ÿ™ÿ¥ŸÅŸäÿ± ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±.',
		decryptionError: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÅŸÉ ÿßŸÑÿ™ÿ¥ŸÅŸäÿ±.',
		dataReceivedMsg: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™: ${data}',
		emailRequiredForDelete: 'ŸÖÿ∑ŸÑŸàÿ® ÿ®ÿ±ŸäÿØ ÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸÑÿ≠ÿ∞ŸÅ ŸÖÿ≥ÿ™ÿÆÿØŸÖ.',
		emailRequiredForEdit: 'ŸÖÿ∑ŸÑŸàÿ® ÿ®ÿ±ŸäÿØ ÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸÑŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÑÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑÿ≥ÿ¨ŸÑ.',
		editSourceError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑŸÖÿµÿØÿ±: ${error}',
		editSourceLog: 'ÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑŸÖÿµÿØÿ± ÿ®ÿßŸÑŸÖÿπÿ±ŸÅ: ${sourceId}, ÿßŸÑÿπŸÜŸàÿßŸÜ: ${title}',
		editSourceSuccess: 'ÿ™ŸÖ ÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑŸÖÿµÿØÿ± ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		editUserError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: ${error}',
		editUserSuccess: 'ÿ™ŸÖ ÿ™ÿ≠ÿ±Ÿäÿ± ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		encryptPwdError: 'ŸÑÿß ŸäŸÖŸÉŸÜ ÿ™ÿ¥ŸÅŸäÿ± ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±.',
		encryptionDisabled: 'ŸÖÿπÿ∑ŸÑ',
		encryptionEnabled: 'ŸÖŸÅÿπŸÑ',
		encryptionError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ¥ŸÅŸäÿ±.',
		errorHandlingRequest: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ∑ŸÑÿ®', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ±ÿ≥ÿßŸÑÿ©:', details: '${error}' }),
		fetchChatInfoError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿØÿ±ÿØÿ¥ÿ©: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™', details: '${error}' }),
		fetchGroupsErrorBackup: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™.',
		fetchGroupsErrorPrefix: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™:',
		fetchSourcesError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ÿßŸÑŸÖÿµÿßÿØÿ±', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: 'Ÿäÿ¨ŸÑÿ® ÿßŸÑŸÖÿµÿßÿØÿ± ŸÑŸÑŸÖÿ¨ŸÖŸàÿπÿ©: ${groupName}', details: '' }),
		fileReadErrorTitle: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÇÿ±ÿßÿ°ÿ© ÿßŸÑŸÖŸÑŸÅ.',
		functionDisabled: 'ŸÖÿπÿ∑ŸÑ',
		genericServerErrorPrefix: 'ÿÆÿ∑ÿ£:',
		gotGetSourceResponse: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ±ÿØ ŸÑŸÄ get_source', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ±ÿØ ŸÑŸÄ list_groups', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ±ÿØ ŸÑŸÄ list_sources', details: '${data}' }),
		groupFetchError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™: Ÿäÿ±ÿ¨Ÿâ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ ŸÑÿßÿ≠ŸÇŸãÿß.',
		groupNameRequired: 'ÿßÿ≥ŸÖ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ŸÖÿ∑ŸÑŸàÿ® ŸÑŸáÿ∞ÿß ÿßŸÑÿ∑ŸÑÿ®.',
		groupValidationError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ©: ${error}',
		groupValidationErrorPrefix: 'ÿÆÿ∑ÿ£: ${error}',
		handlingToolRequest: 'ÿ™ÿπÿßŸÖŸÑ ŸÖÿπ ÿ∑ŸÑÿ® ÿßŸÑÿ£ÿØÿßÿ©: ${tool}',
		headers: 'ÿßŸÑÿ±ÿ§Ÿàÿ≥: ${headers}',
		incomingMessage: 'ÿ±ÿ≥ÿßŸÑÿ© Ÿàÿßÿ±ÿØÿ©: ${MESSAGE}',
		invalidArgumentsError: 'ÿÆÿ∑ÿ£: ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ Ÿàÿ≥ÿßÿ¶ÿ∑ ÿµÿßŸÑÿ≠ÿ© ŸÅŸä ÿßŸÑÿ•ÿØÿÆÿßŸÑ: ${input}',
		invalidGroups: 'ŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠ÿ©: ${groups}',
		invalidGroupsError: 'ŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠ÿ©: ${invalidGroups}',
		invalidGroupsLog: 'ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠: ${groups}',
		invalidMessage: 'ÿ±ÿ≥ÿßŸÑÿ© ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠ÿ©',
		invalidOrEmptyRequest: 'ÿ±ÿ≥ÿßŸÑÿ© ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠ÿ© ÿ£Ÿà ÿ∑ŸÑÿ® ŸÅÿßÿ±ÿ∫.',
		keygenDisabled: 'ŸÖÿπÿ∑ŸÑ',
		keygenEnabled: 'ŸÖŸÅÿπŸÑ',
		keygenErrorPrefix: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ∑ŸÑÿ® keygen:',
		keygenSuccess: 'ÿ™ŸÖ ÿ•ŸÉŸÖÿßŸÑ keygen ÿ®ŸÜÿ¨ÿßÿ≠.',
		langNotSupported: 'ÿßŸÑŸÑÿ∫ÿ© "${lang}" ÿ∫Ÿäÿ± ŸÖÿØÿπŸàŸÖÿ©. Ÿäÿ™ŸÖ ÿßŸÑÿπŸàÿØÿ© ÿ•ŸÑŸâ ÿßŸÑÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ©.',
		loginEmailPasswordRequired: 'ŸÅÿ¥ŸÑ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ: ŸÖÿ∑ŸÑŸàÿ® ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸàŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±.',
		loginError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ', details: '${error}' }),
		loginErrorPrefix: 'ÿÆÿ∑ÿ£: ${error}',
		loginMissingCredentials: 'ŸÅÿ¥ŸÑ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ: ŸÖÿ∑ŸÑŸàÿ® ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸàŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±.',
		loginMissingCredentialsAlternative: 'ŸÅÿ¥ŸÑ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ: ŸÖÿ∑ŸÑŸàÿ® ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸàŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±.',
		loginResponse: 'ÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿ© ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ',
		loginSuccess: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ÿ®ŸÜÿ¨ÿßÿ≠', details: '${data}' }),
		loginTokenReceived: 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ™ŸàŸÉŸÜ: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: 'ŸÖŸÅÿπŸÑ: ${status}' }),
		logChangeError: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÖÿπÿßŸÑÿ¨ÿ© ÿ™ÿ∫ŸäŸäÿ±ÿßÿ™ ŸÖŸÑŸÅ ÿßŸÑÿ≥ÿ¨ŸÑ: ${error}',
		logReadError: 'ÿÆÿ∑ÿ£ ŸÅŸä ŸÇÿ±ÿßÿ°ÿ© ŸÖŸÑŸÅ ÿßŸÑÿ≥ÿ¨ŸÑ: ${error}',
		logViewerRunning: 'ÿπÿßÿ±ÿ∂ ÿßŸÑÿ≥ÿ¨ŸÑÿßÿ™ ŸäÿπŸÖŸÑ ÿπŸÑŸâ http://localhost:${port}',
		logoutError: 'ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿÆÿ±Ÿàÿ¨: ${error}',
		logoutFailedTryAgain: 'ŸÅÿ¥ŸÑ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿÆÿ±Ÿàÿ¨. Ÿäÿ±ÿ¨Ÿâ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ ŸÑÿßÿ≠ŸÇŸãÿß.',
		logoutSuccess: 'ÿ™ŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿÆÿ±Ÿàÿ¨ ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		makingGetSourceRequest: 'ÿ•ŸÜÿ¥ÿßÿ° ÿ∑ŸÑÿ® get_source: ${args}',
		makingListGroupsRequest: 'ÿ•ŸÜÿ¥ÿßÿ° ÿ∑ŸÑÿ® list_groups',
		makingListSourcesRequest: 'ÿ•ŸÜÿ¥ÿßÿ° ÿ∑ŸÑÿ® list_sources: ${args}',
		mcpVersion: 'ÿßŸÑÿ•ÿµÿØÿßÿ±:',
		mcpPort: 'ÿßŸÑŸÖŸÜŸÅÿ∞:',
		mcpStartTime: 'ŸàŸÇÿ™ ÿßŸÑÿ®ÿØÿ°:',
		mcpLicense: 'ÿßŸÑÿ±ÿÆÿµÿ©:',
		method: 'ÿßŸÑÿ∑ÿ±ŸäŸÇÿ©: ${method}',
		missingArgumentsError: 'ÿ≠ÿ¨ÿ¨ ŸÖŸÅŸÇŸàÿØÿ©: ${args}',
		missingChatParams: 'ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ŸÖŸÅŸÇŸàÿØÿ©: chatId Ÿà/ÿ£Ÿà ÿ≥ÿ§ÿßŸÑ.',
		missingCommandParameter: 'ŸÖÿπÿßŸÖŸÑ ÿßŸÑÿ£ŸÖÿ± ŸÖŸÅŸÇŸàÿØ ŸÅŸä ÿßŸÑÿ±ÿ≥ÿßŸÑÿ©.',
		missingConfigError: 'ŸÖÿ™ÿ∫Ÿäÿ± ÿßŸÑÿ™ŸÉŸàŸäŸÜ .json ŸÖŸÅŸÇŸàÿØ: ${key}',
		missingGroupNameAndDesc: 'ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ŸÖŸÅŸÇŸàÿØÿ©: groupName ŸàÿßŸÑŸàÿµŸÅ.',
		missingGroupNameParam: 'ŸÖÿπÿßŸÖŸÑ groupName ÿßŸÑŸÖÿ∑ŸÑŸàÿ® ŸÖŸÅŸÇŸàÿØ.',
		missingGroupParameterDelete: 'ÿ≠ÿ∞ŸÅ: ŸÖÿπÿßŸÖŸÑ groupName ÿßŸÑŸÖÿ∑ŸÑŸàÿ® ŸÖŸÅŸÇŸàÿØ.',
		missingGroupParameterStore: 'ÿ™ÿÆÿ≤ŸäŸÜ: ŸÖÿπÿßŸÖŸÑ groupName ÿßŸÑŸÖÿ∑ŸÑŸàÿ® ŸÖŸÅŸÇŸàÿØ.',
		missingNameAndContent: 'ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ŸÖŸÅŸÇŸàÿØÿ©: ÿßŸÑÿßÿ≥ŸÖ ŸàÿßŸÑŸÖÿ≠ÿ™ŸàŸâ.',
		missingNameEmailPwd: 'ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ŸÖŸÅŸÇŸàÿØÿ©: ÿßŸÑÿßÿ≥ŸÖÿå ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿ£Ÿà ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±.',
		missingParametersError: formatMessage(templates.error, { action: 'ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑ ÿßŸÑŸÖŸÅŸÇŸàÿØÿ©', details: '${parameters}' }),
		missingParameterError: 'ÿßŸÑŸÖÿπÿßŸÖŸÑ ÿßŸÑŸÖÿ∑ŸÑŸàÿ® ŸÖŸÅŸÇŸàÿØ: ${parameter}.',
		missingTokenAuth: 'ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÅŸÇŸàÿØ',
		missingTokenError: 'ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÅŸÇŸàÿØ. Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ŸàÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ.',
		missingTokenGroups: 'ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÅŸÇŸàÿØ. ŸÑÿß ŸäŸÖŸÉŸÜ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™.',
		missingToolName: 'ÿßÿ≥ŸÖ ÿßŸÑÿ£ÿØÿßÿ© ŸÖŸÅŸÇŸàÿØ',
		missingUriParameter: 'ŸÖÿπÿßŸÖŸÑ URI ŸÖŸÅŸÇŸàÿØ.',
		noChatData: 'ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ®ŸäÿßŸÜÿßÿ™ ŸÑŸÑÿØÿ±ÿØÿ¥ÿ© ÿßŸÑŸÖÿ≠ÿØÿØÿ©.',
		noDescriptionProvided: 'ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ŸàŸÅŸäÿ± ŸàÿµŸÅ',
		noErrorMessage: 'ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ±ÿ≥ÿßŸÑÿ© ÿÆÿ∑ÿ£.',
		noServerResponse: 'ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿ±ÿØ ŸÖŸÜ ÿßŸÑÿÆÿßÿØŸÖ.',
		passwordEncEnabled: 'ÿ™ÿ¥ŸÅŸäÿ± ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ŸÖŸÅÿπŸÑ.',
		passwordIsRequired: 'ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ŸÖÿ∑ŸÑŸàÿ®ÿ©.',
		payload: 'Payload: ${payload}',
		portInUse: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑŸÖŸÜŸÅÿ∞: ÿßŸÑŸÖŸÜŸÅÿ∞ ${PORT} ŸÇŸäÿØ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ®ÿßŸÑŸÅÿπŸÑ.',
		portInvalid: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑŸÖŸÜŸÅÿ∞: PORT Ÿäÿ¨ÿ® ÿ£ŸÜ ŸäŸÉŸàŸÜ ÿ±ŸÇŸÖŸãÿß ÿ®ŸäŸÜ 1 Ÿà 65535.',
		portValidated: 'ÿ™ŸÖ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ PORT ÿ®ŸÜÿ¨ÿßÿ≠: ${port}',
		proxyAuthMissing: 'ÿ®ŸäÿßŸÜÿßÿ™ ŸÖÿµÿßÿØŸÇÿ© ÿßŸÑÿ®ÿ±ŸàŸÉÿ≥Ÿä ŸÖŸÅŸÇŸàÿØÿ©.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'ÿ™ÿπÿßÿ±ÿ∂: ÿ™ŸÖ ÿ™ÿπŸäŸäŸÜ usePublic ÿ•ŸÑŸâ false ŸÑÿ£ŸÜ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ŸÖÿ≠ÿØÿØÿ©.',
		requestError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ∑ŸÑÿ®: ${error}',
		requestSent: 'ÿ™ŸÖ ÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ∑ŸÑÿ®',
		restrictedGroupsError: 'ÿÆÿ∑ÿ£: ÿ™ŸÉŸàŸäŸÜ RESTRICTED_GROUPS ÿ∫Ÿäÿ± ÿµÿßŸÑÿ≠. Ÿäÿ¨ÿ® ÿ£ŸÜ ŸäŸÉŸàŸÜ \'true\' ÿ£Ÿà \'false\'. ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑÿ≠ÿßŸÑŸäÿ©: ${value}',
		restrictedGroupsSuccess: 'ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ RESTRICTED_GROUPS: ${status}',
		restrictedGroupsWarning: 'ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ RESTRICTED_GROUPS. ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿßŸÑŸÖÿ™ÿßÿ≠ÿ© ŸÖÿ≠ÿØŸàÿØÿ©.',
		responseError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿ©: ${error}',
		// responseReceived: formatMessage(templates.success, { action: 'Response received', details: '${response}' }),
		responseSentSuccess: formatMessage(templates.success, { action: 'ÿßŸÑÿ≠ÿßŸÑÿ©', details: 'ŸÜÿ¨ÿßÿ≠' }),
		serverError: formatMessage(templates.error, { action: 'ÿ™ÿπÿ∞ÿ± ÿ®ÿØÿ° ÿßŸÑÿÆÿßÿØŸÖ', details: '${error}' }),
		serverListeningOnPort: 'ÿßŸÑÿÆÿßÿØŸÖ Ÿäÿ≥ÿ™ŸÖÿπ ÿπŸÑŸâ ÿßŸÑŸÖŸÜŸÅÿ∞ ${port}',
		serverRunning: 'ÿßŸÑÿÆÿßÿØŸÖ ŸäÿπŸÖŸÑ ÿπŸÑŸâ ÿßŸÑŸÖŸÜŸÅÿ∞ ${port}',
		serverShutdownLog: 'ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿÆÿßÿØŸÖ',
		serverStartedLog: 'ÿ™ŸÖ ÿ®ÿØÿ° ÿßŸÑÿÆÿßÿØŸÖ.',
		serverStoppedLog: 'ÿ™ŸÖ ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿÆÿßÿØŸÖ',
		sendingChatRequest: 'Ÿäÿ™ŸÖ ÿ•ÿ±ÿ≥ÿßŸÑ ÿ∑ŸÑÿ® ÿßŸÑÿØÿ±ÿØÿ¥ÿ© ÿ•ŸÑŸâ API',
		sourcesRetrieved: formatMessage(templates.success, { action: 'ÿ™ŸÖ ÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ÿßŸÑŸÖÿµÿßÿØÿ±', details: '${data}' }),
		startingServerWithConfig: 'ÿ®ÿØÿ° ÿßŸÑÿÆÿßÿØŸÖ ÿ®ÿßŸÑÿ™ŸÉŸàŸäŸÜ ÿßŸÑÿ™ÿßŸÑŸä:',
		sslValidationSet: '${symbol} ÿ™ŸÖ ÿ™ÿπŸäŸäŸÜ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ SSL ÿπŸÑŸâ: ${value}',
		socketErrorPrefix: 'ÿÆÿ∑ÿ£:',
		storeGroupLog: 'ÿ™ÿÆÿ≤ŸäŸÜ ŸÖÿ¨ŸÖŸàÿπÿ© ÿ¨ÿØŸäÿØÿ© ÿ®ÿßŸÑÿßÿ≥ŸÖ: ${groupName} ŸàÿßŸÑŸàÿµŸÅ: ${description}',
		storeGroupSuccess: 'ÿ™ŸÖ ÿ™ÿÆÿ≤ŸäŸÜ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ÿ®ŸÜÿ¨ÿßÿ≠: ${data}',
		storegroupError: 'ÿÆÿ∑ÿ£ ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ©: ${error}',
		storeGroupText: 'ÿ™ŸÖ ÿ™ÿÆÿ≤ŸäŸÜ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© "${groupName}" ÿ®ŸÜÿ¨ÿßÿ≠ ÿ®ÿßŸÑŸÖÿπÿ±ŸÅ: ${id}.',
		unknownAddress: 'ÿπŸÜŸàÿßŸÜ IP ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ',
		unknownCommandError: formatMessage(templates.error, { action: 'ÿ£ŸÖÿ± ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: 'ÿÆÿ∑ÿ£ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ', details: '' }),
		unknownPort: 'ŸÖŸÜŸÅÿ∞ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ',
		unknownTool: 'ÿ£ÿØÿßÿ© ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅÿ©: ${toolName}',
		tokenMissing: 'ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÅŸÇŸàÿØ.'
    },
	// Estonian (et)
	et: {
		createSourceError: 'Allika loomisel tekkis viga: ${error}',
		create_sourceUnknownError: 'Allika loomisel tekkis tundmatu viga: ${error}',
		returnStatus: 'Staatus: ${Status}',
		extractedToken: 'Ekstraheeritud token: ${token}',
		missingChatId: 'chatId on vajalik vestlusinfo hankimiseks.',
		missingQuestion: 'Argumendidelt puudub k√ºsimus.',
		ChatInfoRetrieved: 'Vestluse teave on hankitud: ${chatData}',
		InvalidGroups: 'Vigased grupid: ${GROUPS}',
		sourceIdRequiredEditSource: 'allika ID on vajalik allika muutmiseks.',
		sourceIdRequiredRetrieveSource: 'allika ID on vajalik allika hankimiseks.',
		ConnectionEstablished: '√úhendus on loodud',
		ResponseSuccessfullySent: 'Vastus on edukalt saadetud',
		ConnectionClosed: '√úhendus on suletud',
		ServerStopped: 'Server on peatatud',
		responseReceived: 'Vastus saadud staatusega: ${status}',
		internalServerError: 'Sisemine serveri viga',
		tcpServerError: 'TCP serveris tekkis viga:',
		unknownErrorOccured: 'Tekkis tundmatu viga.',
		KeygenRequired: 'Vajalik v√µtme genereerimine',
		unknownCommand: 'Tundmatu k√§sk',
		socketEmitLogNotActivated: 'Logifail ei ole aktiveeritud.',
		socketEmitLogReadError: 'Logifaili lugemisel tekkis viga.',
		deletesourceLog: formatMessage(templates.info, { action: 'Allika kustutamine', details: 'nimega: ${SourceName}' }),
		sourceIdRequiredDeleteSource: 'allika ID on vajalik allika kustutamiseks.',
		listGroupsSuccess: 'Gruppide nimekiri on hankitud: ${GROUPS}',
		toolNotDefinedInConfig: formatMessage(templates.error, { action: 'Vigane funktsiooni kutse', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: 'Funktsiooni kutse on serveripoolselt keelatud:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: 'Funktsiooni kutse on serveripoolselt keelatud:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: 'RESTRICTED_GROUPS v√§√§rtus', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: 'K√µik funktsioonid on lubatud', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: 'K√µik grupid on kehtivad', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: 'on lubatud: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: 'on lubatud: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: 'API viga', details: 'Staatus: ${status}, Andmed: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: 'API p√§ringu viga', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: 'Vigane API_URL', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'API_URL on edukalt valideeritud', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: 'Hoiatus', details: 'API_URL ei alga "https://". URL-i kohandatakse.' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: 'Hoiatus', details: 'API_URL ei l√µpe "/api/v1". URL-i kohandatakse.' }),
		authFailed: 'Autentimine eba√µnnestus.',
		authStarted: 'Autentimine alustati.',
		availableGroups: formatMessage(templates.success, { action: 'Saadaval olevad grupid', details: '${availableGroups}' }),
		chatApiErrorDefault: 'Viga vestlusp√§ringus.',
		chatApiError: formatMessage(templates.error, { action: 'Viga Chat API p√§ringus', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: 'Vestlusvastus on saadud', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: 'Grupide kontrollimine', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: 'WebSocket klient √ºhendatud', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: 'WebSocket klienti √ºhendus katkestatud', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: 'Uus √ºhendus aktsepteeritud', details: 'kohalt ${ip}:${port}' }),
			established: formatMessage(templates.success, { action: '√úhendus on loodud', details: '' }),
			closed: formatMessage(templates.info, { action: '√úhendus on suletud', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: 'Andmed saadud', details: 'kohalt ${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: 'S√µnumi t√∂√∂tlemise viga', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: 'S√µnumi vorming on vigane', details: '' }),
			socketError: formatMessage(templates.error, { action: 'Socketi viga', details: 'kohalt ${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: 'Serveri viga', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: 'Server t√∂√∂tab', details: 'pordil ${port}' }),
			stopped: formatMessage(templates.info, { action: 'Server on peatatud', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: 'Viga vestluse j√§tkamisel', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: 'Vestlus j√§tkub', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: 'Vestlus on edukalt j√§tkustatud', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: 'Grupp on edukalt loodud', details: '${data}' }),
		createSourceLog: 'Allika muutmine ID-ga: ${sourceId}, Pealkirjaga: ${title}',
		createSourceSuccess: 'Allikas on edukalt loodud: ${data}',
		createUserError: 'Kasutaja loomisel tekkis viga: ${error}',
		createUserLog: 'Uue kasutaja loomine: ${payload}',
		createUserSuccess: 'Kasutaja on edukalt loodud: ${data}',
		deactivatedFunctions: 'Deaktiveeritud funktsioonid:',
		deleteGroupInternalError: 'Gruppi kustutamisel tekkis sisemine viga.',
		deleteGroupLog: formatMessage(templates.info, { action: 'Gruppi kustutamine', details: 'nimega: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: 'Grupp on edukalt kustutatud', details: '${data}' }),
		deleteGroupText: 'Grupp "${groupName}" on edukalt kustutatud.',
		deleteSourceError: 'Allika kustutamisel tekkis viga: ${error}',
		deleteSourceFailedTryAgain: 'Allika kustutamine eba√µnnestus. Palun proovi hiljem uuesti.',
		deleteUserError: 'Kasutaja kustutamisel tekkis viga: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: 'Kasutaja kustutamine', details: 'nimega: ${UserName}' }),
		deleteUserSuccess: 'Kasutaja on edukalt kustutatud: ${data}',
		decryptPwdError: 'Parooli ei saanud dekr√ºpteerida.',
		decryptionError: 'Dekr√ºpteerimisviga.',
		dataReceivedMsg: 'Andmed saadud: ${data}',
		emailRequiredForDelete: 'Imeyli on vajalik kasutaja kustutamiseks.',
		emailRequiredForEdit: 'Kasutaja email on vajalik kirje muutmiseks.',
		editSourceError: 'Allika muutmisel tekkis viga: ${error}',
		editSourceLog: 'Allika muutmine ID-ga: ${sourceId}, Pealkirjaga: ${title}',
		editSourceSuccess: 'Allikas on edukalt muudetud: ${data}',
		editUserError: 'Kasutaja muutmisel tekkis viga: ${error}',
		editUserSuccess: 'Kasutaja on edukalt muudetud: ${data}',
		encryptPwdError: 'Parooli ei saanud kr√ºpteerida.',
		encryptionDisabled: 'Keelatud',
		encryptionEnabled: 'Lubatud',
		encryptionError: 'Kr√ºpteerimisviga.',
		errorHandlingRequest: formatMessage(templates.error, { action: 'P√§ringu t√∂√∂tlemise viga', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: 'S√µnumi t√∂√∂tlemise viga:', details: '${error}' }),
		fetchChatInfoError: 'Vestluse info hankimisel tekkis viga: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: 'Gruppide hankimise viga', details: '${error}' }),
		fetchGroupsErrorBackup: 'Gruppide hankimisel tekkis viga.',
		fetchGroupsErrorPrefix: 'Gruppide hankimise viga:',
		fetchSourcesError: formatMessage(templates.error, { action: 'Allikate hankimise viga', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: 'Allikate hankimine grupile: ${groupName}', details: '' }),
		fileReadErrorTitle: 'Faili lugemisel tekkis viga.',
		functionDisabled: 'keelatud',
		genericServerErrorPrefix: 'Viga:',
		gotGetSourceResponse: formatMessage(templates.success, { action: 'Get_source vastus saadud', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: 'List_groups vastus saadud', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: 'List_sources vastus saadud', details: '${data}' }),
		groupFetchError: 'Gruppide hankimisel tekkis viga: Palun proovi hiljem uuesti.',
		groupNameRequired: 'Gruppi nimi on selle p√§ringu jaoks vajalik.',
		groupValidationError: 'Gruppi valideerimisel tekkis viga: ${error}',
		groupValidationErrorPrefix: 'Viga: ${error}',
		handlingToolRequest: 'T√∂√∂riista p√§ringu t√∂√∂tlemine: ${tool}',
		headers: 'P√§ised: ${headers}',
		incomingMessage: 'Sisenev s√µnum: ${MESSAGE}',
		invalidArgumentsError: 'Viga: sisendis pole leitud kehtivaid argumente: ${input}',
		invalidGroups: 'Vigased grupid: ${groups}',
		invalidGroupsError: 'Vigased grupid: ${invalidGroups}',
		invalidGroupsLog: 'Vigased: ${groups}',
		invalidMessage: 'Vigane s√µnum',
		invalidOrEmptyRequest: 'Vigane s√µnum v√µi t√ºhi p√§ring.',
		keygenDisabled: 'Keelatud',
		keygenEnabled: 'Lubatud',
		keygenErrorPrefix: 'Viga v√µtme genereerimise p√§ringuga:',
		keygenSuccess: 'V√µtme genereerimine on edukalt l√µpetatud.',
		langNotSupported: 'Keel "${lang}" ei ole toetatud. Tagasiingutamine inglise keelde.',
		loginEmailPasswordRequired: 'Sisselogimine eba√µnnestus: e-post ja parool on vajalikud.',
		loginError: formatMessage(templates.error, { action: 'Sisselogimise viga', details: '${error}' }),
		loginErrorPrefix: 'Viga: ${error}',
		loginMissingCredentials: 'Sisselogimine eba√µnnestus: e-post ja parool on vajalikud.',
		loginMissingCredentialsAlternative: 'Sisselogimine eba√µnnestus: e-post ja parool on vajalikud.',
		loginResponse: 'Sisselogimise vastus',
		loginSuccess: formatMessage(templates.success, { action: 'Sisselogimine √µnnestus', details: '${data}' }),
		loginTokenReceived: 'Token on saadud: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: 'on lubatud: ${status}' }),
		logChangeError: 'Logifaili muudatuste t√∂√∂tlemisel tekkis viga: ${error}',
		logReadError: 'Logifaili lugemisel tekkis viga: ${error}',
		logViewerRunning: 'Logivaatur t√∂√∂tab aadressil http://localhost:${port}',
		logoutError: 'Viga v√§ljalogimisel: ${error}',
		logoutFailedTryAgain: 'V√§ljalogimine eba√µnnestus. Palun proovi uuesti hiljem.',
		logoutSuccess: 'V√§ljalogimine √µnnestus: ${data}',
		makingGetSourceRequest: 'Get_source p√§ringu loomine: ${args}',
		makingListGroupsRequest: 'List_groups p√§ringu loomine',
		makingListSourcesRequest: 'List_sources p√§ringu loomine: ${args}',
		mcpVersion: 'Versioon:',
		mcpPort: 'Port:',
		mcpStartTime: 'Algusaeg:',
		mcpLicense: 'Litsents:',
		method: 'Meetod: ${method}',
		missingArgumentsError: 'Puuduvad argumendid: ${args}',
		missingChatParams: 'Puuduvad vajalikud parameetrid: chatId ja/v√µi k√ºsimus.',
		missingCommandParameter: 'S√µnumis puudub k√§skparameeter.',
		missingConfigError: 'Puudub .json konfiguratsioonimuutuja: ${key}',
		missingGroupNameAndDesc: 'Puuduvad vajalikud parameetrid: gruppi nimi ja kirjeldus.',
		missingGroupNameParam: 'Puudub vajalik parameeter: gruppi nimi.',
		missingGroupParameterDelete: 'Kustutamine: Puudub vajalik parameeter: gruppi nimi.',
		missingGroupParameterStore: 'Salvestamine: Puudub vajalik parameeter: gruppi nimi.',
		missingNameAndContent: 'Puuduvad vajalikud parameetrid: nimi ja sisu.',
		missingNameEmailPwd: 'Puuduvad vajalikud parameetrid: nimi, e-post v√µi parool.',
		missingParametersError: formatMessage(templates.error, { action: 'Puuduvad parameetrid', details: '${parameters}' }),
		missingParameterError: 'Puudub vajalik parameeter: ${parameter}.',
		missingTokenAuth: 'Puudub token',
		missingTokenError: 'Token puudub. Palun logi sisse ja proovi uuesti.',
		missingTokenGroups: 'Token puudub. Gruppide valideerimine ei ole v√µimalik.',
		missingToolName: 'Puudub t√∂√∂riista nimi',
		missingUriParameter: 'Puudub URI parameeter.',
		noChatData: 'M√§√§ratud vestluse andmed puuduvad.',
		noDescriptionProvided: 'Kirjeldus puudub',
		noErrorMessage: 'Vea s√µnum puudub.',
		noServerResponse: 'Serverilt ei ole vastust saadud.',
		passwordEncEnabled: 'Parooli kr√ºpteerimine on lubatud.',
		passwordIsRequired: 'Parool on vajalik.',
		payload: 'Nositiiler: ${payload}',
		portInUse: 'Pordi viga: Port ${PORT} on juba kasutusel.',
		portInvalid: 'Pordi viga: PORT peab olema number vahemikus 1 kuni 65535.',
		portValidated: 'PORT on edukalt valideeritud: ${port}',
		proxyAuthMissing: 'Proxy autentimisandmed puuduvad.',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Konflikt: usePublic on seatud v√§√§raks, kuna on m√§√§ratud grupid.',
		requestError: 'P√§ringu viga: ${error}',
		requestSent: 'P√§ring on saadetud',
		restrictedGroupsError: 'Viga: Vigane RESTRICTED_GROUPS konfiguratsioon. Peab olema \'true\' v√µi \'false\'. Praegune v√§√§rtus: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS on lubatud: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS on lubatud. Saadaval olevad grupid on piiratud.',
		responseError: 'Vastusviga: ${error}',
		responseSentSuccess: formatMessage(templates.success, { action: 'Staatus', details: 'Edu' }),
		serverError: formatMessage(templates.error, { action: 'Serverit ei saanud k√§ivitada', details: '${error}' }),
		serverListeningOnPort: 'Server kuulab pordil ${port}',
		serverRunning: 'Server t√∂√∂tab pordil ${port}',
		serverShutdownLog: 'Server on suletud',
		serverStartedLog: 'Server on k√§ivitunud.',
		serverStoppedLog: 'Server on peatatud',
		sendingChatRequest: 'Chat p√§ringu saatmine API-le',
		sourcesRetrieved: formatMessage(templates.success, { action: 'Allikad on hankitud', details: '${data}' }),
		startingServerWithConfig: 'Serveri k√§ivitamine j√§rgmise konfiguratsiooniga:',
		sslValidationSet: '${symbol} SSL valideerimine on seatud: ${value}',
		socketErrorPrefix: 'Viga:',
		storeGroupLog: 'Uue grupi salvestamine nimega: ${groupName} ja kirjeldusega: ${description}',
		storeGroupSuccess: 'Grupp on edukalt salvestatud: ${data}',
		storegroupError: 'Gruppi loomisel tekkis viga: ${error}',
		storeGroupText: 'Grupp "${groupName}" on edukalt salvestatud ID-ga: ${id}.',
		unknownAddress: 'Tundmatu IP',
		unknownCommandError: formatMessage(templates.error, { action: 'Tundmatu k√§sk', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: 'Tundmatu viga', details: '' }),
		unknownPort: 'Tundmatu port',
		unknownTool: 'Tundmatu t√∂√∂riist: ${toolName}',
		tokenMissing: 'Token puudub.'
    },
	ja: {
		toolNotDefinedInConfig: formatMessage(templates.error, { action: 'ÁÑ°Âäπ„Å™Èñ¢Êï∞Âëº„Å≥Âá∫„Åó', details: '${warn}' }),
		toolDisabledLog: formatMessage(templates.error, { action: 'Èñ¢Êï∞Âëº„Å≥Âá∫„Åó„Åå„Çµ„Éº„Éê„ÉºÂÅ¥„ÅßÁÑ°ÂäπÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô:', details: '${warn}' }),
		toolDisabledError: formatMessage(templates.error, { action: 'Èñ¢Êï∞Âëº„Å≥Âá∫„Åó„Åå„Çµ„Éº„Éê„ÉºÂÅ¥„ÅßÁÑ°ÂäπÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô:', details: '${warn}' }),
		accessRestrictedGroups: formatMessage(templates.info, { action: 'RESTRICTED_GROUPS „ÅÆÂÄ§', details: '${val}' }),
		allFunctionsEnabled: formatMessage(templates.success, { action: '„Åô„Åπ„Å¶„ÅÆÊ©üËÉΩ„ÅåÊúâÂäπ„Åß„Åô', details: '' }),
		allGroupsValid: formatMessage(templates.success, { action: '„Åô„Åπ„Å¶„ÅÆ„Ç∞„É´„Éº„Éó„ÅåÊúâÂäπ„Åß„Åô', details: '' }),
		AllowLoggingSuccess: formatMessage(templates.success, { action: 'ALLOW_LOGGING', details: '„ÅåÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô: ${status}' }),
		anonymousModeSuccess: formatMessage(templates.success, { action: 'ANONYMOUS_MODE', details: '„ÅåÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô: ${status}' }),
		apiErrorDetails: formatMessage(templates.error, { action: 'API „Ç®„É©„Éº', details: '„Çπ„ÉÜ„Éº„Çø„Çπ: ${status}, „Éá„Éº„Çø: ${data}' }),
		apiRequestError: formatMessage(templates.error, { action: 'API „É™„ÇØ„Ç®„Çπ„Éà „Ç®„É©„Éº', details: '${error}' }),
		apiUrlInvalid: formatMessage(templates.error, { action: 'ÁÑ°Âäπ„Å™ API_URL', details: '' }),
		apiUrlValidated: formatMessage(templates.success, { action: 'API_URL „ÅåÊ≠£Â∏∏„Å´Ê§úË®º„Åï„Çå„Åæ„Åó„Åü', details: '${url}' }),
		apiUrlWarning: formatMessage(templates.warning, { action: 'Ë≠¶Âëä', details: 'API_URL „Åå "https://" „ÅßÂßã„Åæ„Å£„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇURL „ÅåË™øÊï¥„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ' }),
		apiUrlWarningV1: formatMessage(templates.warning, { action: 'Ë≠¶Âëä', details: 'API_URL „Åå "/api/v1" „ÅßÁµÇ„Çè„Å£„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇURL „ÅåË™øÊï¥„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ' }),
		authFailed: 'Ë™çË®º„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ',
		authStarted: 'Ë™çË®º„ÅåÈñãÂßã„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
		availableGroups: formatMessage(templates.success, { action: 'Âà©Áî®ÂèØËÉΩ„Å™„Ç∞„É´„Éº„Éó', details: '${availableGroups}' }),
		chatApiErrorDefault: '„ÉÅ„É£„ÉÉ„Éà„É™„ÇØ„Ç®„Çπ„Éà‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ',
		chatApiError: formatMessage(templates.error, { action: '„ÉÅ„É£„ÉÉ„Éà API „É™„ÇØ„Ç®„Çπ„Éà „Ç®„É©„Éº', details: '${error}' }),
		chatResponseSuccess: formatMessage(templates.success, { action: '„ÉÅ„É£„ÉÉ„Éà„ÅÆÂøúÁ≠î„ÅåÂèó‰ø°„Åï„Çå„Åæ„Åó„Åü', details: '${data}' }),
		checkingGroups: formatMessage(templates.info, { action: '„Ç∞„É´„Éº„Éó„ÇíÁ¢∫Ë™ç‰∏≠', details: '${groups}' }),
		clientConnected: formatMessage(templates.info, { action: 'WebSocket „ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÅåÊé•Á∂ö„Åó„Åæ„Åó„Åü', details: '' }),
		clientDisconnected: formatMessage(templates.info, { action: 'WebSocket „ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÅåÂàáÊñ≠„Åï„Çå„Åæ„Åó„Åü', details: '' }),
		connection: {
			new: formatMessage(templates.info, { action: 'Êñ∞„Åó„ÅÑÊé•Á∂ö„ÅåÂèó„ÅëÂÖ•„Çå„Çâ„Çå„Åæ„Åó„Åü', details: 'from ${ip}:${port}' }),
			established: formatMessage(templates.success, { action: 'Êé•Á∂ö„ÅåÁ¢∫Á´ã„Åï„Çå„Åæ„Åó„Åü', details: '' }),
			closed: formatMessage(templates.info, { action: 'Êé•Á∂ö„ÅåÈñâ„Åò„Çâ„Çå„Åæ„Åó„Åü', details: '${ip}:${port}' }),
			dataReceived: formatMessage(templates.info, { action: '„Éá„Éº„Çø„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü', details: 'from ${ip}:${port}: ${data}' }),
		},
		errors: {
			processMessage: formatMessage(templates.error, { action: '„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂá¶ÁêÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü', details: '${error}' }),
			invalidMessage: formatMessage(templates.error, { action: 'ÁÑ°Âäπ„Å™„É°„ÉÉ„Çª„Éº„Ç∏ÂΩ¢Âºè', details: '' }),
			socketError: formatMessage(templates.error, { action: '„ÇΩ„Ç±„ÉÉ„Éà„Ç®„É©„Éº', details: 'at ${ip}:${port}: ${error}' }),
			serverError: formatMessage(templates.error, { action: '„Çµ„Éº„Éê„Éº„Ç®„É©„Éº', details: '${error}' }),
		},
		server: {
			running: formatMessage(templates.success, { action: '„Çµ„Éº„Éê„Éº„ÅåÂÆüË°å‰∏≠„Åß„Åô', details: 'on port ${port}' }),
			stopped: formatMessage(templates.info, { action: '„Çµ„Éº„Éê„Éº„ÅåÂÅúÊ≠¢„Åï„Çå„Åæ„Åó„Åü', details: '' }),
		},
		continueConversationError: formatMessage(templates.error, { action: '‰ºöË©±„ÅÆÁ∂ôÁ∂ö‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü', details: '' }),
		conversationContinuation: formatMessage(templates.success, { action: '‰ºöË©±„ÅåÁ∂ôÁ∂ö„Åï„Çå„Å¶„ÅÑ„Åæ„Åô', details: 'ID: ${chatId}' }),
		conversationSuccess: formatMessage(templates.success, { action: '‰ºöË©±„ÅåÊ≠£Â∏∏„Å´Á∂ôÁ∂ö„Åï„Çå„Åæ„Åó„Åü', details: '${data}' }),
		createGroupSuccess: formatMessage(templates.success, { action: '„Ç∞„É´„Éº„Éó„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„Åü', details: '${data}' }),
		createSourceLog: 'Editing source with ID: ${sourceId}, Title: ${title}',
		createSourceSuccess: '„ÇΩ„Éº„Çπ„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„Åü: ${data}',
		createUserError: '„É¶„Éº„Ç∂„Éº„ÅÆ‰ΩúÊàê‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		createUserLog: 'Êñ∞„Åó„ÅÑ„É¶„Éº„Ç∂„Éº„Çí‰ΩúÊàê„Åó„Å¶„ÅÑ„Åæ„Åô: ${payload}',
		createUserSuccess: '„É¶„Éº„Ç∂„Éº„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„Åü: ${data}',
		deactivatedFunctions: 'ÁÑ°ÂäπÂåñ„Åï„Çå„ÅüÊ©üËÉΩ:',
		deleteGroupInternalError: '„Ç∞„É´„Éº„Éó„ÅÆÂâäÈô§‰∏≠„Å´ÂÜÖÈÉ®„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ',
		deleteGroupLog: formatMessage(templates.info, { action: '„Ç∞„É´„Éº„Éó„ÇíÂâäÈô§‰∏≠', details: 'with name: ${groupName}' }),
		deleteGroupSuccessLog: formatMessage(templates.success, { action: '„Ç∞„É´„Éº„Éó„ÅåÊ≠£Â∏∏„Å´ÂâäÈô§„Åï„Çå„Åæ„Åó„Åü', details: '${data}' }),
		deleteGroupText: '„Ç∞„É´„Éº„Éó "${groupName}" „ÅåÊ≠£Â∏∏„Å´ÂâäÈô§„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
		deleteSourceError: '„ÇΩ„Éº„Çπ„ÅÆÂâäÈô§‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		deleteSourceFailedTryAgain: '„ÇΩ„Éº„Çπ„ÅÆÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇÂæå„Åß„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÇÑ„ÇäÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
		deleteUserError: '„É¶„Éº„Ç∂„Éº„ÅÆÂâäÈô§‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		deleteUserLog: formatMessage(templates.info, { action: '„É¶„Éº„Ç∂„Éº„ÇíÂâäÈô§‰∏≠', details: 'with name: ${UserName}' }),
		deleteUserSuccess: '„É¶„Éº„Ç∂„Éº„ÅåÊ≠£Â∏∏„Å´ÂâäÈô§„Åï„Çå„Åæ„Åó„Åü: ${data}',
		decryptPwdError: '„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂæ©Âè∑„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ',
		decryptionError: 'Âæ©Âè∑„Ç®„É©„Éº„ÄÇ',
		dataReceivedMsg: '„Éá„Éº„Çø„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü: ${data}',
		emailRequiredForDelete: '„É¶„Éº„Ç∂„Éº„ÇíÂâäÈô§„Åô„Çã„Å´„ÅØ„É°„Éº„É´„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		emailRequiredForEdit: '„É¨„Ç≥„Éº„Éâ„ÇíÁ∑®ÈõÜ„Åô„Çã„Å´„ÅØ„É¶„Éº„Ç∂„Éº„ÅÆ„É°„Éº„É´„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		editSourceError: '„ÇΩ„Éº„Çπ„ÅÆÁ∑®ÈõÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		editSourceLog: 'Editing source with ID: ${sourceId}, Title: ${title}',
		editSourceSuccess: '„ÇΩ„Éº„Çπ„ÅåÊ≠£Â∏∏„Å´Á∑®ÈõÜ„Åï„Çå„Åæ„Åó„Åü: ${data}',
		editUserError: '„É¶„Éº„Ç∂„Éº„ÅÆÁ∑®ÈõÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		editUserSuccess: '„É¶„Éº„Ç∂„Éº„ÅåÊ≠£Â∏∏„Å´Á∑®ÈõÜ„Åï„Çå„Åæ„Åó„Åü: ${data}',
		encryptPwdError: '„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÊöóÂè∑Âåñ„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ',
		encryptionDisabled: 'ÁÑ°Âäπ',
		encryptionEnabled: 'ÊúâÂäπ',
		encryptionError: 'ÊöóÂè∑Âåñ„Ç®„É©„Éº„ÄÇ',
		errorHandlingRequest: formatMessage(templates.error, { action: '„É™„ÇØ„Ç®„Çπ„Éà„ÅÆÂá¶ÁêÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü', details: '${error}' }),
		errorProcessingMsg: formatMessage(templates.error, { action: '„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂá¶ÁêÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü:', details: '${error}' }),
		fetchChatInfoError: '„ÉÅ„É£„ÉÉ„ÉàÊÉÖÂ†±„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		fetchGroupsError: formatMessage(templates.error, { action: '„Ç∞„É´„Éº„Éó„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü', details: '${error}' }),
		fetchGroupsErrorBackup: '„Ç∞„É´„Éº„Éó„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ',
		fetchGroupsErrorPrefix: '„Ç∞„É´„Éº„Éó„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü:',
		fetchSourcesError: formatMessage(templates.error, { action: '„ÇΩ„Éº„Çπ„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü', details: '' }),
		fetchingSources: formatMessage(templates.info, { action: '„Ç∞„É´„Éº„Éó: ${groupName} „ÅÆ„ÇΩ„Éº„Çπ„ÇíÂèñÂæó‰∏≠', details: '' }),
		fileReadErrorTitle: '„Éï„Ç°„Ç§„É´„ÅÆË™≠„ÅøÂèñ„Çä‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ',
		functionDisabled: 'ÁÑ°Âäπ',
		genericServerErrorPrefix: '„Ç®„É©„Éº:',
		gotGetSourceResponse: formatMessage(templates.success, { action: 'get_source „ÅÆÂøúÁ≠î„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü', details: '${data}' }),
		gotListGroupsResponse: formatMessage(templates.success, { action: 'list_groups „ÅÆÂøúÁ≠î„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü', details: '${response}' }),
		gotListSourcesResponse: formatMessage(templates.success, { action: 'list_sources „ÅÆÂøúÁ≠î„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü', details: '${data}' }),
		groupFetchError: '„Ç∞„É´„Éº„Éó„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: Âæå„Åß„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÇÑ„ÇäÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
		groupNameRequired: '„Åì„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„Å´„ÅØ„Ç∞„É´„Éº„ÉóÂêç„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		groupValidationError: '„Ç∞„É´„Éº„Éó„ÅÆÊ§úË®º‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		groupValidationErrorPrefix: '„Ç®„É©„Éº: ${error}',
		handlingToolRequest: '„ÉÑ„Éº„É´„É™„ÇØ„Ç®„Çπ„Éà„ÇíÂá¶ÁêÜ‰∏≠: ${tool}',
		headers: '„Éò„ÉÉ„ÉÄ„Éº: ${headers}',
		incomingMessage: 'Âèó‰ø°„É°„ÉÉ„Çª„Éº„Ç∏: ${MESSAGE}',
		invalidArgumentsError: '„Ç®„É©„Éº: ÂÖ•Âäõ„Å´ÊúâÂäπ„Å™ÂºïÊï∞„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü: ${input}',
		invalidGroups: 'ÁÑ°Âäπ„Å™„Ç∞„É´„Éº„Éó: ${groups}',
		invalidGroupsError: 'ÁÑ°Âäπ„Å™„Ç∞„É´„Éº„Éó: ${invalidGroups}',
		invalidGroupsLog: 'ÁÑ°Âäπ: ${groups}',
		invalidMessage: 'ÁÑ°Âäπ„Å™„É°„ÉÉ„Çª„Éº„Ç∏',
		invalidOrEmptyRequest: 'ÁÑ°Âäπ„Å™„É°„ÉÉ„Çª„Éº„Ç∏„Åæ„Åü„ÅØÁ©∫„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„Åß„Åô„ÄÇ',
		keygenDisabled: 'ÁÑ°Âäπ',
		keygenEnabled: 'ÊúâÂäπ',
		keygenErrorPrefix: 'keygen „É™„ÇØ„Ç®„Çπ„Éà„ÅÆ„Ç®„É©„Éº:',
		keygenSuccess: 'keygen „ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ',
		langNotSupported: 'Ë®ÄË™û "${lang}" „ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇËã±Ë™û„Å´Êàª„Åó„Åæ„Åô„ÄÇ',
		loginEmailPasswordRequired: '„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: „É°„Éº„É´„Å®„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		loginError: formatMessage(templates.error, { action: '„É≠„Ç∞„Ç§„É≥„Ç®„É©„Éº', details: '${error}' }),
		loginErrorPrefix: '„Ç®„É©„Éº: ${error}',
		loginMissingCredentials: '„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: „É°„Éº„É´„Å®„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		loginMissingCredentialsAlternative: '„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: „É°„Éº„É´„Å®„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		loginResponse: '„É≠„Ç∞„Ç§„É≥„ÅÆÂøúÁ≠î',
		loginSuccess: formatMessage(templates.success, { action: '„É≠„Ç∞„Ç§„É≥„Å´ÊàêÂäü„Åó„Åæ„Åó„Åü', details: '${data}' }),
		loginTokenReceived: '„Éà„Éº„ÇØ„É≥„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü: ${token}',
		LogIpsSuccess: formatMessage(templates.success, { action: 'LOG_IPs', details: '„ÅåÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô: ${status}' }),
		logChangeError: '„É≠„Ç∞„Éï„Ç°„Ç§„É´„ÅÆÂ§âÊõ¥„ÇíÂá¶ÁêÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		logReadError: '„É≠„Ç∞„Éï„Ç°„Ç§„É´„ÅÆË™≠„ÅøÂèñ„Çä‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		logViewerRunning: '„É≠„Ç∞„Éì„É•„Éº„Ç¢„Åå http://localhost:${port} „ÅßÂÆüË°å‰∏≠„Åß„Åô',
		logoutError: '„É≠„Ç∞„Ç¢„Ç¶„Éà‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		logoutFailedTryAgain: '„É≠„Ç∞„Ç¢„Ç¶„Éà„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇÂæå„Åß„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÇÑ„ÇäÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
		logoutSuccess: '„É≠„Ç∞„Ç¢„Ç¶„Éà„Å´ÊàêÂäü„Åó„Åæ„Åó„Åü: ${data}',
		makingGetSourceRequest: 'get_source „É™„ÇØ„Ç®„Çπ„Éà„Çí‰ΩúÊàê‰∏≠: ${args}',
		makingListGroupsRequest: 'list_groups „É™„ÇØ„Ç®„Çπ„Éà„Çí‰ΩúÊàê‰∏≠',
		makingListSourcesRequest: 'list_sources „É™„ÇØ„Ç®„Çπ„Éà„Çí‰ΩúÊàê‰∏≠: ${args}',
		mcpVersion: '„Éê„Éº„Ç∏„Éß„É≥:',
		mcpPort: '„Éù„Éº„Éà:',
		mcpStartTime: 'ÈñãÂßãÊôÇÈñì:',
		mcpLicense: '„É©„Ç§„Çª„É≥„Çπ:',
		method: '„É°„ÇΩ„ÉÉ„Éâ: ${method}',
		missingArgumentsError: '„Ç®„É©„Éº: ÂÖ•Âäõ„Å´ÂøÖË¶Å„Å™ÂºïÊï∞„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: ${args}',
		missingChatParams: 'ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: chatId „Åä„Çà„Å≥/„Åæ„Åü„ÅØ question.',
		missingCommandParameter: '„É°„ÉÉ„Çª„Éº„Ç∏„Å´„Ç≥„Éû„É≥„Éâ„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
		missingConfigError: 'Ë®≠ÂÆöÂ§âÊï∞ .json „Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: ${key}',
		missingGroupNameAndDesc: 'ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: groupName „Åä„Çà„Å≥ description.',
		missingGroupNameParam: 'ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: groupName.',
		missingGroupParameterDelete: 'ÂâäÈô§: ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: groupName.',
		missingGroupParameterStore: '‰øùÂ≠ò: ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: groupName.',
		missingNameAndContent: 'ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: name „Åä„Çà„Å≥ content.',
		missingNameEmailPwd: 'ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: name, email, „Åæ„Åü„ÅØ password.',
		missingParametersError: formatMessage(templates.error, { action: '„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô', details: '${parameters}' }),
		missingParameterError: 'ÂøÖË¶Å„Å™„Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô: ${parameter}.',
		missingTokenAuth: '„Éà„Éº„ÇØ„É≥„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô',
		missingTokenError: '„Éà„Éº„ÇØ„É≥„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„É≠„Ç∞„Ç§„É≥„Åó„Å¶ÂÜçË©¶Ë°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
		missingTokenGroups: '„Éà„Éº„ÇØ„É≥„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Ç∞„É´„Éº„Éó„ÇíÊ§úË®º„Åß„Åç„Åæ„Åõ„Çì„ÄÇ',
		missingToolName: '„ÉÑ„Éº„É´Âêç„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô',
		missingUriParameter: 'URI „Éë„É©„É°„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
		noChatData: 'ÊåáÂÆö„Åï„Çå„Åü„ÉÅ„É£„ÉÉ„Éà„Å´„Éá„Éº„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ',
		noDescriptionProvided: 'Ë™¨Êòé„ÅåÊèê‰æõ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì',
		noErrorMessage: '„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ',
		noServerResponse: '„Çµ„Éº„Éê„Éº„Åã„Çâ„ÅÆÂøúÁ≠î„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ',
		passwordEncEnabled: '„Éë„Çπ„ÉØ„Éº„Éâ„ÅÆÊöóÂè∑Âåñ„ÅåÊúâÂäπ„Åß„Åô„ÄÇ',
		passwordIsRequired: '„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
		payload: '„Éö„Ç§„É≠„Éº„Éâ: ${payload}',
		portInUse: '„Éù„Éº„Éà„Ç®„É©„Éº: „Éù„Éº„Éà ${PORT} „ÅØÊó¢„Å´‰ΩøÁî®‰∏≠„Åß„Åô„ÄÇ',
		portInvalid: '„Éù„Éº„Éà„Ç®„É©„Éº: PORT „ÅØ 1 „Åã„Çâ 65535 „Åæ„Åß„ÅÆÊï∞Â≠ó„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ',
		portValidated: 'PORT „ÅåÊ≠£Â∏∏„Å´Ê§úË®º„Åï„Çå„Åæ„Åó„Åü: ${port}',
		proxyAuthMissing: '„Éó„É≠„Ç≠„Ç∑Ë™çË®º„Éá„Éº„Çø„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
		proxyUseProxy: 'USE_PROXY: ${val}',
		publicGroupsConflictWarning: 'Á´∂Âêà: „Ç∞„É´„Éº„Éó„ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„Åü„ÇÅ usePublic „Åå false „Å´Ë®≠ÂÆö„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
		requestError: '„É™„ÇØ„Ç®„Çπ„Éà„Ç®„É©„Éº: ${error}',
		requestSent: '„É™„ÇØ„Ç®„Çπ„Éà„ÅåÈÄÅ‰ø°„Åï„Çå„Åæ„Åó„Åü',
		restrictedGroupsError: '„Ç®„É©„Éº: ÁÑ°Âäπ„Å™ RESTRICTED_GROUPS Ë®≠ÂÆö„Åß„Åô„ÄÇ\'true\' „Åæ„Åü„ÅØ \'false\' „Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÁèæÂú®„ÅÆÂÄ§: ${value}',
		restrictedGroupsSuccess: 'RESTRICTED_GROUPS „ÅåÊúâÂäπ„Åß„Åô: ${status}',
		restrictedGroupsWarning: 'RESTRICTED_GROUPS „ÅåÊúâÂäπ„Åß„Åô„ÄÇÂà©Áî®ÂèØËÉΩ„Å™„Ç∞„É´„Éº„Éó„ÅåÂà∂Èôê„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
		responseError: 'ÂøúÁ≠î„Ç®„É©„Éº: ${error}',
		responseReceived: formatMessage(templates.success, { action: 'ÂøúÁ≠î„ÅåÂèó‰ø°„Åï„Çå„Åæ„Åó„Åü', details: '${response}' }),
		responseSentSuccess: formatMessage(templates.success, { action: '„Çπ„ÉÜ„Éº„Çø„Çπ', details: 'ÊàêÂäü' }),
		serverError: formatMessage(templates.error, { action: '„Çµ„Éº„Éê„Éº„ÇíËµ∑Âãï„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü', details: '${error}' }),
		serverListeningOnPort: '„Çµ„Éº„Éê„Éº„Åå„Éù„Éº„Éà ${port} „Åß„É™„Çπ„Éã„É≥„Ç∞„Åó„Å¶„ÅÑ„Åæ„Åô',
		serverRunning: '„Çµ„Éº„Éê„Éº„Åå„Éù„Éº„Éà ${port} „ÅßÂÆüË°å‰∏≠„Åß„Åô',
		serverShutdownLog: '„Çµ„Éº„Éê„Éº„Åå„Ç∑„É£„ÉÉ„Éà„ÉÄ„Ç¶„É≥„Åó„Åæ„Åó„Åü',
		serverStartedLog: '„Çµ„Éº„Éê„Éº„ÅåÈñãÂßã„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
		serverStoppedLog: '„Çµ„Éº„Éê„Éº„ÅåÂÅúÊ≠¢„Åï„Çå„Åæ„Åó„Åü',
		sendingChatRequest: '„ÉÅ„É£„ÉÉ„Éà„É™„ÇØ„Ç®„Çπ„Éà„Çí API „Å´ÈÄÅ‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô',
		sourcesRetrieved: formatMessage(templates.success, { action: '„ÇΩ„Éº„Çπ„ÅåÂèñÂæó„Åï„Çå„Åæ„Åó„Åü', details: '${data}' }),
		startingServerWithConfig: 'Ê¨°„ÅÆË®≠ÂÆö„Åß„Çµ„Éº„Éê„Éº„ÇíËµ∑Âãï„Åó„Å¶„ÅÑ„Åæ„Åô:',
		sslValidationSet: '${symbol} SSL Ê§úË®º„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åô: ${value}',
		socketErrorPrefix: '„Ç®„É©„Éº:',
		storeGroupLog: 'ÂêçÂâç: ${groupName} „Åä„Çà„Å≥Ë™¨Êòé: ${description} „ÅÆÊñ∞„Åó„ÅÑ„Ç∞„É´„Éº„Éó„Çí‰øùÂ≠ò„Åó„Å¶„ÅÑ„Åæ„Åô',
		storeGroupSuccess: '„Ç∞„É´„Éº„Éó„ÅåÊ≠£Â∏∏„Å´‰øùÂ≠ò„Åï„Çå„Åæ„Åó„Åü: ${data}',
		storegroupError: '„Ç∞„É´„Éº„Éó„ÅÆ‰ΩúÊàê‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}',
		storeGroupText: '„Ç∞„É´„Éº„Éó "${groupName}" „Åå ID: ${id} „ÅßÊ≠£Â∏∏„Å´‰øùÂ≠ò„Åï„Çå„Åæ„Åó„Åü„ÄÇ',
		unknownAddress: '‰∏çÊòé„Å™IP',
		unknownCommandError: formatMessage(templates.error, { action: '‰∏çÊòé„Å™„Ç≥„Éû„É≥„Éâ', details: '${cmd}' }),
		unknownError: formatMessage(templates.error, { action: '‰∏çÊòé„Å™„Ç®„É©„Éº', details: '' }),
		unknownPort: '‰∏çÊòé„Å™„Éù„Éº„Éà',
		unknownTool: '‰∏çÊòé„Å™„ÉÑ„Éº„É´: ${toolName}',
		tokenMissing: '„Éà„Éº„ÇØ„É≥„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
	}
};
